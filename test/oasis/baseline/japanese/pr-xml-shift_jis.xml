doc_start()
warning("Unsupported encoding 'shift_jis'")
set_entity_info(1.0, shift_jis, None)
handle_doctype(spec, None, spec.dtd)
dtd_start()
handle_comment(' \223\372\226{\214\352\226\363\202\314\202\275\202\337\202\314\211\360\220\315\221\316\217\333\216\300\221\314\201i\202\261\202\261\202\251\202\347\201j ')
new_general_entity(TR-or-Rec, '\216d\227l\217\221')
handle_comment(' <!ENTITY TR-or-Rec             "\225W\217\200\217\356\225\361(TR)"> ')
new_general_entity(eTR-or-Rec, 'specification')
handle_comment(' <!ENTITY eTR-or-Rec             "technical report(TR)"> ')
new_general_entity(application, '\203A\203v\203\212\203P\201[\203V\203\207\203\223')
new_general_entity(error, '\203G\203\211\201[')
new_general_entity(fatal-error, '\222v\226\275\223I\203G\203\211\201[')
new_general_entity(parsed-data, '\211\360\220\315\202\263\202\352\202\351\203f\201[\203^')
new_general_entity(unparsed-data, '\211\360\220\315\202\263\202\352\202\310\202\242\203f\201[\203^')
new_general_entity(parsed-entity, '\211\360\220\315\221\316\217\333\216\300\221\314')
new_general_entity(parser, '\203p\201[\203T')
new_general_entity(unparsed-entity, '\211\360\220\315\221\316\217\333\212O\216\300\221\314')
new_general_entity(well-formed, '\220\256\214`\216\256')
new_general_entity(valid, '\221\303\223\226')
new_general_entity(validity, '\221\303\223\226\220\253')
new_general_entity(escape, '\225\312\210\265\202\242')
new_general_entity(prolog, '\217\221\202\253')
new_general_entity(surrogate-blocks, '\203T\203\215\203Q\201[\203g\203u\203\215\203b\203N')
new_general_entity(letter, '\216\232')
new_general_entity(ideographic, '\223\235\215\207\212\277\216\232')
new_general_entity(markup, '\203}\201[\203N\225t\202\257')
new_general_entity(left-angle-bracket, '\225s\223\231\215\206(\217\254\202\310\202\350)')
new_general_entity(right-angle-bracket, '\225s\223\231\215\206(\221\345\202\310\202\350)')
new_general_entity(string, '\225\266\216\232\227\361')
new_general_entity(char-string, '\225\266\216\232\227\361')
handle_comment(' string of chararacters, \012                                          character strings, strings, \012                                          characters \202\315\202\267\202\327\202\304\225\266\216\232\227\361\202\306\202\267\202\351 ')
new_general_entity(replacement-text, '\222u\212\267\203e\203L\203X\203g')
new_general_entity(single-quote, '\210\352\217d\210\370\227p\225\204')
new_general_entity(double-quote, '\223\361\217d\210\370\227p\225\204')
new_general_entity(adaptations-annex, '\223K\227p\225\215\221\256\217\221')
new_general_entity(root, '\203\213\201[\203g')
new_general_entity(base-character, '\212\356\222\352\225\266\216\232')
new_general_entity(diacritical-mark, '\224\255\211\271\225\204')
handle_comment('(\203_\203C\203A\203N\203\212\203e\203B\203J\203\213\203}\201[\203N)\202\360\217\211\217o\202\314\202\306\202\253\225\342\202\244')
new_general_entity(composed-form, '\215\207\220\254\214`\216\256')
new_general_entity(standalone, '\203X\203^\203\223\203h\203A\203\215\203\223')
new_general_entity(double-hyphen, '\223\361\230A\203n\203C\203t\203\223')
handle_comment('<!ENTITY case-fold             "\221\345\225\266\216\232\202\251\217\254\225\266\216\232\202\326\202\314\223\235\210\352">')
handle_comment(' <!ENTITY case-fold             "\224\344\212r\202\314\202\306\202\253\201C\221\345\225\266\216\232\202\306\217\254\225\266\216\232\202\314\223\257\210\352\216\213">')
new_general_entity(parameter, '\203p\203\211\203\201\203^')
new_general_entity(stream, '\203X\203g\203\212\201[\203\200')
new_general_entity(validating, '\221\303\223\226\220\253\202\360\214\237\217\330\202\267\202\351')
new_general_entity(non-validating, '\221\303\223\226\220\253\202\360\214\237\217\330\202\265\202\310\202\242')
new_general_entity(user, '\203\206\201[\203U')
handle_comment('<!ENTITY at-user-option        "\203\206\201[\203U\202\252\203I\203v\203V\203\207\203\223\202\360\216w\222\350\202\265\202\275\202\306\202\253">')
new_general_entity(at-user-option, '\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
new_general_entity(content-particle, '\223\340\227e\221f\216q')
new_general_entity(processor, '\203v\203\215\203Z\203T')
new_general_entity(default, '\203f\203t\203H\203\213\203g')
new_general_entity(default-value, '\203f\203t\203H\203\213\203g\222l')
new_general_entity(header, '\203w\203b\203_')
new_general_entity(target, '\203^\201[\203Q\203b\203g')
new_general_entity(mixed-content, '\215\254\215\207\223\340\227e')
new_general_entity(country-code, '\215\221\203R\201[\203h')
new_general_entity(language-code, '\214\276\214\352\203R\201[\203h')
new_general_entity(version, '\224\305')
handle_comment(' version 1.0\202\315\221\3461.0\224\305 ')
new_general_entity(match, '\203}\203b\203`')
new_general_entity(character-value, '\225\266\216\232\224\324\215\206')
new_general_entity(byte-order-mark, '\203o\203C\203g\217\207\203}\201[\203N')
new_general_entity(bypass, '\217\210\227\235\202\265\202\310\202\242')
new_general_entity(identifier, '\216\257\225\312\216q')
handle_comment(' <!ENTITY identify             "\216\257\225\312\202\267\202\351"> ')
new_general_entity(identify, '\223\301\222\350\202\267\202\351')
handle_comment(' <!ENTITY identified           "\216\257\225\312\202\263\202\352\202\351"> ')
new_general_entity(identified, '\223\301\222\350\202\263\202\352\202\351')
new_general_entity(combining-character, '\214\213\215\207\225\266\216\232')
new_general_entity(subset, '\203T\203u\203Z\203b\203g')
new_general_entity(token, '\203g\201[\203N\203\223')
new_general_entity(literal, '\203\212\203e\203\211\203\213')
new_general_entity(parenthesis, '\202\251\202\301\202\261')
new_general_entity(left-parenthesis, '\212J\202\253\202\251\202\301\202\261')
new_general_entity(right-parenthesis, '\225\302\202\266\202\251\202\301\202\261')
handle_comment(' \202\240\202\306\202\305\213C\202\252\202\302\202\242\202\275\202\340\202\314 JIS X0221\202\360\214\251\202\351\225K\227v\202\240\202\350 ')
new_general_entity(extender, '\203G\203N\203X\203e\203\223\203_')
new_general_entity(property, '\203v\203\215\203p\203e\203B')
new_general_entity(property-list, '\203v\203\215\203p\203e\203B\203\212\203X\203g')
new_general_entity(property-file, '\203v\203\215\203p\203e\203B\203t\203@\203C\203\213')
new_general_entity(font-decomposition, '\203t\203H\203\223\203g\225\252\211\360')
new_general_entity(compatibility-decomposition, '\214\335\212\267\220\253\225\252\211\360')
new_general_entity(compatibility-area, '\214\335\212\267\220\253\227\314\210\346')
new_general_entity(language-identification, '\214\276\214\352\216\257\225\312')
new_general_entity(space-character, '\203X\203y\201[\203X\225\266\216\232')
new_general_entity(space, '\203X\203y\201[\203X')
new_general_entity(code-value, '\203R\201[\203h\222l')
new_general_entity(normative, '\213K\222\350\202\314')
new_general_entity(hueristics, '\203q\203\205\201[\203\212\203X\203e\203B\203b\203N')
new_general_entity(informative, '')
new_general_entity(WebSGML, 'ISO 8879\202\326\202\314WebSGML&adaptations-annex;')
new_general_entity(XML.version, '1.0')
new_general_entity(doc.date, '1997\224N12\214\2168\223\372')
new_general_entity(iso6.doc.date, '971208')
new_general_entity(w3c.doc.date, '97\224N12\214\2163\223\372')
new_general_entity(draft.day, '8\223\372')
new_general_entity(draft.month, '12\214\216')
new_general_entity(draft.year, '1997\224N')
handle_comment(' \223\372\226{\214\352\226\363\202\314\202\275\202\337\202\314\211\360\220\315\221\316\217\333\216\300\221\314\201i\202\261\202\261\202\334\202\305\201j ')
handle_comment(' LAST TOUCHED BY: Tim Bray, 3 Dec 1997 ')
handle_comment(" The words 'FINAL EDIT' in comments mark places where changes\012need to be made after approval of the document by the ERB, before\012publication.  ")
new_general_entity(newline, ' ')
handle_comment(' old: <!ENTITY newline "&#8232;"> ')
handle_comment('<!ENTITY amp    "&"> ')
new_general_entity(xmlpio, "'&lt;?xml'")
new_general_entity(pic, "'?>'")
new_general_entity(br, '\\n')
new_general_entity(cellback, '#c0d9c0')
new_general_entity(mdash, '--')
handle_comment(' was: <!ENTITY mdash  "&#38;#151;"> ')
new_general_entity(com, '--')
new_general_entity(como, '--')
new_general_entity(comc, '--')
new_general_entity(hcro, '&amp;#x')
handle_comment(' <!ENTITY nbsp ""> ')
new_general_entity(nbsp, '\240')
new_general_entity(magicents, '<code>amp</code>,\012<code>lt</code>,\012<code>gt</code>,\012<code>apos</code>,\012<code>quot</code>')
handle_comment('\223\372\226{\214\352\226\363\202\311\202\302\202\242\202\304: \203R\203\201\203\223\203g\202\315\226|\226\363\221\316\217\333\202\251\202\347\212O\202\265\202\334\202\265\202\275\201B\227\351\226\330\230a\225v ')
handle_comment(' audience and distribution status:  for use at publication time ')
handle_comment('  ')
new_general_entity(doc.audience, '\214\366\212J\203\214\203r\203\205\201[\213y\202\321\213c\230_')
new_general_entity(doc.distribution, '\203e\203L\203X\203g\213y\202\321\226@\227\245\217\343\202\314\222\215\210\323\202\360\211\374\225\317\202\265\202\310\202\242\214\300\202\350\201C\012\216\251\227R\202\311\224z\225z\202\265\202\304\202\340\202\346\202\242')
dtd_end()
handle_comment(' for Panorama *')
handle_pi(VERBATIM, '"eg" ')
handle_start_tag(spec, {})
handle_data('\012')
handle_start_tag(header, {})
handle_data('\012')
handle_start_tag(title, {})
handle_data('\212g\222\243\211\302\224\\\202\310')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\214\276\214\352 (XML)')
handle_end_tag(title)
handle_data('\012')
handle_start_tag(version, {})
handle_data('\221\3461.0')
handle_data('\224\305')
handle_end_tag(version)
handle_data('\012')
handle_start_tag(w3c-designation, {})
handle_data('PR-xml-')
handle_data('971208')
handle_end_tag(w3c-designation)
handle_data('\012')
handle_start_tag(w3c-doctype, {})
handle_data('World Wide Web Consortium')
handle_end_tag(w3c-doctype)
handle_data('\012')
handle_start_tag(pubdate, {})
handle_start_tag(day, {})
handle_data('8\223\372')
handle_end_tag(day)
handle_start_tag(month, {})
handle_data('12\214\216')
handle_end_tag(month)
handle_start_tag(year, {})
handle_data('1997\224N')
handle_end_tag(year)
handle_end_tag(pubdate)
handle_data('\012')
handle_start_tag(notice, {})
handle_start_tag(p, {})
handle_data('\202\261\202\314\221\220\210\304\202\315\201CXML WG\213y\202\321\221\274\202\314\212\326\214W\216\322\202\311\202\346\202\351\203\214\203r\203\205\201[\202\314\202\275\202\337\202\314\202\340\202\314\202\305\202\240\202\301\202\304\201C\214\366\212J\202\314\213c\230_\202\314\202\275\202\337\202\314\202\340\202\314\202\305\202\315\202\310\202\242\201B\012')
handle_comment(' FINAL EDIT:  FIX ')
handle_end_tag(p)
handle_end_tag(notice)
handle_data('\012')
handle_start_tag(publoc, {})
handle_data('\012')
handle_start_tag(loc, {'href' : 'http://www.w3.org/TR/PR-xml-971208'})
handle_data('\012http://www.w3.org/TR/PR-xml-')
handle_data('971208')
handle_end_tag(loc)
handle_end_tag(publoc)
handle_data('\012')
handle_start_tag(prevlocs, {})
handle_data('\012')
handle_start_tag(loc, {'href' : 'http://www.w3.org/TR/WD-xml-961114'})
handle_data('\012http://www.w3.org/TR/WD-xml-961114')
handle_end_tag(loc)
handle_data('\012')
handle_start_tag(loc, {'href' : 'http://www.w3.org/TR/WD-xml-lang-970331'})
handle_data('\012http://www.w3.org/TR/WD-xml-lang-970331')
handle_end_tag(loc)
handle_data('\012')
handle_start_tag(loc, {'href' : 'http://www.w3.org/TR/WD-xml-lang-970630'})
handle_data('\012http://www.w3.org/TR/WD-xml-lang-970630')
handle_end_tag(loc)
handle_data('\012')
handle_start_tag(loc, {'href' : 'http://www.w3.org/TR/WD-xml-970807'})
handle_data('\012http://www.w3.org/TR/WD-xml-970807')
handle_end_tag(loc)
handle_data('\012')
handle_start_tag(loc, {'href' : 'http://www.w3.org/TR/WD-xml-971117'})
handle_data('\012http://www.w3.org/TR/WD-xml-971117')
handle_end_tag(loc)
handle_data('\012')
handle_end_tag(prevlocs)
handle_data('\012')
handle_start_tag(authlist, {})
handle_data('\012')
handle_start_tag(author, {})
handle_start_tag(name, {})
handle_data('Tim Bray')
handle_end_tag(name)
handle_data('\012')
handle_start_tag(affiliation, {})
handle_data('Textuality and Netscape')
handle_end_tag(affiliation)
handle_data('\012')
handle_start_tag(email, {'href' : 'mailto:tbray@textuality.com'})
handle_data('tbray@textuality.com')
handle_end_tag(email)
handle_end_tag(author)
handle_data('\012')
handle_start_tag(author, {})
handle_start_tag(name, {})
handle_data('Jean Paoli')
handle_end_tag(name)
handle_data('\012')
handle_start_tag(affiliation, {})
handle_data('Microsoft')
handle_end_tag(affiliation)
handle_data('\012')
handle_start_tag(email, {'href' : 'mailto:jeanpa@microsoft.com'})
handle_data('jeanpa@microsoft.com')
handle_end_tag(email)
handle_end_tag(author)
handle_data('\012')
handle_start_tag(author, {})
handle_start_tag(name, {})
handle_data('C. M. Sperberg-McQueen')
handle_end_tag(name)
handle_data('\012')
handle_start_tag(affiliation, {})
handle_data('University of Illinois at Chicago')
handle_end_tag(affiliation)
handle_data('\012')
handle_start_tag(email, {'href' : 'mailto:cmsmcq@uic.edu'})
handle_data('cmsmcq@uic.edu')
handle_end_tag(email)
handle_end_tag(author)
handle_data('\012')
handle_end_tag(authlist)
handle_data('\012')
handle_start_tag(status, {})
handle_data('\012      ')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\315, 1997\224N12\214\216\202\311World Wide Web Consortium\202\251\202\347\012\214\366\225\\\202\263\202\352\202\275\212\251\215\220\210\304Extensible Markup Language version\221\3461.0\224\305\202\360\226|\226\363\202\265, \213Z\012\217p\223I\223\340\227e\202\360\225\317\215X\202\267\202\351\202\261\202\306\202\310\202\255\215\354\220\254\202\265\202\275')
handle_data('\216d\227l\217\221')
handle_data('\202\305\202\240\202\351\201BThis ')
handle_data('specification')
handle_data(' \012is a translation of the XML proposed recommendation 1.0\012published by the World Wide Web Consortium in December 1997.  It is\012intended that ')
handle_data('specification')
handle_data(' is technically identical to the original.')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\214\264\225\266\202\311\202\240\202\351\201A\222\230\215\354\214\240\202\311\212\326\202\265\202\304\202\314\213L\217q\202\360\216\237\202\311\216\246\202\267\201BThe\012original copyright notice is shown below:')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314\224\305\202\314XML\202\314\213K\222\350\202\315\201C\214\366\212J\203\214\203r\203\205\201[\213y\202\321\213c\230_\202\360\012\226\332\223I\202\306\202\267\202\351\201B\203e\203L\203X\203g\213y\202\321\226@\227\245\217\343\202\314\222\215\210\323\202\360\211\374\225\317\202\265\202\310\202\242\214\300\202\350\201C\216\251\227R\202\311\012\224z\225z\202\265\202\304\202\340\202\346\202\242\201BThis version of the XML specification is for\012public review and discussion. It may be distributed freely,\012as long as all text and legal notices remain intact.')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\214\263\202\306\202\310\202\301\202\275XML\212\251\215\220\210\304\202\315\201C1998\224N2\214\216\202\311World\012Wide Web Consortium\202\251\202\347\214\366\225\\\202\263\202\352\202\275XML\212\251\215\220\202\311\202\346\202\301\202\304\202\267\202\305\202\311\222u\202\253\212\267\012\202\246\202\347\202\352\202\304\202\242\202\351\201B\202\261\202\314\225W\217\200\217\356\225\361\202\315\201CXML\212\251\215\220\202\311\217]\202\301\202\304\222\371\220\263\202\267\202\351\202\261\202\306\202\360\012\227\\\222\350\202\265\202\304\202\242\202\351\201BThe XML Proposed Recommendation is superseded\012by the XML Recommendation which was published by the World\012Wide Web Consortium in February 1998.  It is intended that \012this ')
handle_data('specification')
handle_data(' be revised accordingly in the near future.')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\315\201C\210\300\222\350\202\265\202\275\202\340\202\314\202\305\202\240\202\301\202\304\201C\215\360\224N\227\210\202\314')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML'})
handle_data('XML\212\210\223\256')
handle_end_tag(loc)
handle_data('\202\360\222\312\202\266\202\304\215\354\220\254\202\263\202\352\202\275\201C\210\352\230A\202\314\215\354\012\213\306\221\220\210\304\202\360\214\263\202\306\202\267\202\351\201B\214\273\215\335\201C\215L\224\315\210\315\202\311\216g\227p\202\263\202\352\202\304\202\242\202\351\215\221\215\333\223I\202\310\203e\203L\203X\203g\217\210\227\235\202\314\225W\012\217\200(\225W\217\200\210\352\224\312\211\273')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\214\276\214\352\201CStandard Generalized Markup Language, ISO\0128879:1986\202\311\222\307\211\301\213y\202\321\222\371\220\263\202\360\211\301\202\246\202\275\202\340\202\314)\202\314\201CWWW\217\343\202\305\202\314\216g\227p\202\314\202\275\202\337\202\311')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\012\211\273\202\265\202\275\214\276\214\352\202\360\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\315\201C\213K\222\350\202\267\202\351\201BISO 8879\202\314\202\307\202\314\213@\224\\\202\360\202\261\202\314\012')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\311\216c\202\267\202\251\201C\202\306\202\242\202\244\214\210\222\350\202\311\202\302\202\242\202\304\202\314\217\332\215\327\202\315\201C')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML/#WG-decisions'})
handle_data('\225\312\223r\227p\210\323\202\267\202\351')
handle_end_tag(loc)
handle_data('\201BXML\202\315\201C\012\212\371\202\311\202\242\202\255\202\302\202\251\202\314\217\244\225i\202\305\203T\203|\201[\203g\202\263\202\352\201CXML\202\360\203T\203|\201[\203g\202\267\202\351')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML/#software'})
handle_data('\203t\203\212\201[\203E\203F\203A')
handle_end_tag(loc)
handle_data('\202\314\220\224\202\340\221\235\202\246\202\304\012\202\242\202\351\201BXML\202\311\212\326\202\267\202\351\214\366\212J\202\314\230_\213c\202\340\201C\203I\203\223\203\211\203C\203\223\202\305')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML/#discussion'})
handle_data('\223\374\216\350\202\305\202\253\202\351')
handle_end_tag(loc)
handle_data('\201BIt is a\012stable document derived from a series of working drafts produced over\012the last year as deliverables of the ')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML'})
handle_data('XML activity')
handle_end_tag(loc)
handle_data('.  It specifies a\012language created by subsetting an existing, widely used international\012text processing standard (Standard Generalized Markup Language, ISO\0128879:1986 as amended and corrected) for use on the World Wide Web.\012Details of the decisions regarding which features of ISO 8879 to\012retain in the subset ')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML/#WG-decisions'})
handle_data('are available\012separately')
handle_end_tag(loc)
handle_data('.  XML is already supported by some commercial\012products, and there are a growing number of ')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML/#software'})
handle_data('free implementations')
handle_end_tag(loc)
handle_data('.\012Public discussions of XML ')
handle_start_tag(loc, {'href' : 'http://www.w3.org/XML/#discussion'})
handle_data('are accessible\012online')
handle_end_tag(loc)
handle_data('.')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\305\202\315\201C')
handle_start_tag(bibref, {'ref' : 'Berners-Lee'})
handle_end_tag(bibref)
handle_data('\202\311\222\350\213`\202\267\202\351\012URI(Uniform Resource Identifier)\202\360\216g\227p\202\267\202\351\201BURI\202\314\220\247\222\350\215\354\213\306\202\315\220i\215s\222\206\202\305\202\240\202\301\012\202\304\201C')
handle_start_tag(bibref, {'ref' : 'RFC1738'})
handle_end_tag(bibref)
handle_data('\213y\202\321')
handle_start_tag(bibref, {'ref' : 'RFC1808'})
handle_end_tag(bibref)
handle_data('\202\360\215X\220V\202\267\202\351\227\\\222\350\202\306\012\202\310\202\301\202\304\202\242\202\351\201B\202\261\202\314\215\354\213\306\202\252RFC\202\306\202\265\202\304\216\363\202\257\223\374\202\352\202\347\202\352\202\310\202\242\217\352\215\207\202\315\201C\202\261\202\314\213K\222\366\223\340\202\314URI\012\202\326\202\314\216Q\217\306\202\315\201CURL(Uniform Resource Locator)\202\326\202\314\216Q\217\306\202\311\221\343\202\355\202\351\201BThis\012specification uses the term URI, which is defined by ')
handle_start_tag(bibref, {'ref' : 'Berners-Lee'})
handle_end_tag(bibref)
handle_data(', a work in progress expected to update ')
handle_start_tag(bibref, {'ref' : 'RFC1738'})
handle_end_tag(bibref)
handle_data(' and ')
handle_start_tag(bibref, {'ref' : 'RFC1808'})
handle_end_tag(bibref)
handle_data('.  Should the work not be\012accepted as an RFC, the references to uniform resource identifiers\012(URIs) in this specification will become references to uniform\012resource locators (URLs).')
handle_end_tag(p)
handle_data('\012\012      ')
handle_start_tag(p, {})
handle_data('XML\202\314\216d\227l\202\311\217\200\213\222\202\265\202\304\202\242\202\351\202\251\202\307\202\244\202\251\202\314\212\356\217\200\202\306\202\310\202\351\202\315W3C\202\314\203T\203C\203g\202\311\202\240\012\202\351\214\264\225\266\202\305\202\240\202\351\201BThe normative version of the specification is\012the English version found at the W3C site.')
handle_end_tag(p)
handle_data('\012\012      ')
handle_start_tag(p, {})
handle_data('\202\261\202\314\225W\217\200\217\356\225\361\202\315\214\264\216d\227l\202\306\213Z\217p\223I\202\311\223\257\210\352\202\305\202\240\202\351\202\261\202\306\202\360\210\323\220}\202\265\202\304\202\242\202\351\202\252\201A\012\226|\226\363\217\343\202\314\214\353\202\350\202\315\202\240\202\350\223\276\202\351\201BAlthough this technical report is\012intended to be technically identical to the original, it may\012contain errors from the translation.')
handle_end_tag(p)
handle_data('\012\012      ')
handle_start_tag(p, {})
handle_data('\224\365\215l: \214\264\213K\222\350\202\306\202\314\213K\222\350\211\323\217\212\202\314\221\316\211\236\212\326\214W\202\360\226\276\202\347\202\251\202\311\202\267\202\351\202\275\202\337\201A\202\261\202\314\012')
handle_data('\216d\227l\217\221')
handle_data('\202\314\220\337\215\\\220\254\213y\202\321\220\337\224\324\215\206\202\315\201A\214\264\213K\222\350\202\314\202\273\202\352\202\347\202\360\202\305\202\253\202\351\202\276\202\257\225\333\221\266\202\265\202\304\202\242\012\202\351\201B\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314Web\224\305\202\315\201A\214\264\213K\222\350\202\314HTML\203^\203O\202\360\202\273\202\314\202\334\202\334\225\333\221\266\202\265\202\304\202\242\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(status)
handle_data('\012')
handle_comment(' out of date\012<statusp>This is a W3C Working Draft for review by W3C members and other\012interested parties. It is a draft document and may be updated,\012replaced, or obsoleted by other documents at any time. It is\012inappropriate to use W3C Working Drafts as reference material or to\012cite them as other than "work in progress". A list of current W3C\012working drafts can be found at \012<loc  href="http://www.w3.org/TR">http://www.w3.org/TR</loc>.</statusp>\012<statusp><emph>Note:</emph> Since working drafts are subject to frequent\012change, you are advised to reference the above URL, rather than the\012URLs for working drafts themselves.</statusp>\012<statusp>This work is part of the W3C SGML Activity (for current\012status, see <loc href="http://www.w3.org/MarkUp/SGML/Activity"\012>http://www.w3.org/MarkUp/SGML/Activity</loc>).</statusp>\012<p>The current\012draft of this specification \012presupposes the successful completion of the current\012work on the &WebSGML;, being prepared by ISO/IEC JTC1 \012at the time this draft specification was drafted.\012If it is not\012adopted in the expected form, some clauses of this specification \012may change,  and some\012recommendations now labeled "<termref def="dt-interop">for\012interoperability</termref>" will become requirements labeled\012"<termref def="dt-compat">for compatibility</termref>".\012</p>\012<p>The current draft of this specification uses the term \012URI, which is defined by \012<bibref ref="Berners-Lee"/>,\012which is work in progress expected to update \012<bibref ref="RFC1738"/> and <bibref ref="RFC1808"/>.\012Should the work in this draft not be accepted as an RFC, the\012references to uniform resource identifiers (URIs) in this\012specification will become references to uniform resource\012locators (URLs).</p>\012</status> ')
handle_data('\012')
handle_start_tag(abstract, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('\212g\222\243\211\302\224\\\202\310')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\214\276\214\352(XML)\202\315SGML\202\314\212\310\222P\202\310\225\373\214\276\202\305\202\240\202\301\202\304\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\305\201C\202\273\202\314\202\267\202\327\202\304\202\360\213K\222\350\202\267\202\351\201BXML\202\314\226\332\225W\202\315\201C\214\273\215\335\202\314HTML\202\306\223\257\227l\202\311\201C\210\352\224\312\220\253\202\314\202\240\202\351SGML\202\360\203E\203F\203u\217\343\202\305\224z\225z\201C\216\363\220M\213y\202\321\217\210\227\235\202\305\202\253\202\351\202\261\202\306\202\306\202\267\202\351\201BXML\202\315\216\300\221\225\202\252\227e\210\325\202\305\202\240\202\301\202\304\201CSGML\213y\202\321HTML\202\314\202\307\202\277\202\347\202\311\221\316\202\265\202\304\202\340\221\212\214\335\211^\227p\220\253\202\360\225\333\202\302\220\335\214v\202\252\202\310\202\263\202\352\202\304\202\242\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(abstract)
handle_data('\012')
handle_start_tag(pubstmt, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('Chicago, Vancouver, Mountain View, et al.:\012World-Wide Web Consortium, XML\215\354\213\306\203O\203\213\201[\203v, 1996, 1997.')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(pubstmt)
handle_data('\012')
handle_start_tag(sourcedesc, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('Created in electronic form.')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(sourcedesc)
handle_data('\012')
handle_start_tag(langusage, {})
handle_data('\012')
handle_start_tag(language, {'id' : 'EN'})
handle_data('English')
handle_end_tag(language)
handle_data('\012')
handle_start_tag(language, {'id' : 'ebnf'})
handle_data('Extended Backus-Naur Form (formal grammar)')
handle_end_tag(language)
handle_data('\012')
handle_end_tag(langusage)
handle_data('\012')
handle_start_tag(revisiondesc, {})
handle_data('\012')
handle_start_tag(slist, {})
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-12-03 : CMSMcQ : yet further changes')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-12-02 : TB : further changes (see TB to XML WG,\0122 December 1997)')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-12-02 : CMSMcQ : deal with as many corrections and\012comments from the proofreaders as possible:\012entify hard-coded document date in pubdate element,\012change expansion of entity WebSGML,\012update status description as per Dan Connolly (am not sure\012about refernece to Berners-Lee et al.),\012add 'The' to abstract as per WG decision,\012move Relationship to Existing Standards to back matter and\012combine with References,\012re-order back matter so normative appendices come first,\012re-tag back matter so informative appendices are tagged informdiv1,\012remove XXX XXX from list of 'normative' specs in prose,\012move some references from Other References to Normative References,\012add RFC 1738, 1808, and 2141 to Other References (they are not\012normative since we do not require the processor to enforce any \012rules based on them),\012add reference to 'Fielding draft' (Berners-Lee et al.),\012move notation section to end of body,\012drop URIchar non-terminal and use SkipLit instead,\012lose stray reference to defunct nonterminal 'markupdecls',\012move reference to Aho et al. into appendix (Tim's right),\012add prose note saying that hash marks and fragment identifiers are\012NOT part of the URI formally speaking, and are NOT legal in \012system identifiers (processor 'may' signal an error).\012Work through:\012Tim Bray reacting to James Clark,\012Tim Bray on his own,\012Eve Maler,\012\012NOT DONE YET:\012change binary / text to unparsed / parsed.\012handle James's suggestion about ")
handle_data('<')
handle_data(' in attriubte values\012uppercase hex characters,\012namechar list,\012')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-12-01 : JB : add some column-width parameters')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-12-01 : CMSMcQ : begin round of changes to incorporate\012recent WG decisions and other corrections:\012binding sources of character encoding info (27 Aug / 3 Sept),\012correct wording of Faust quotation (restore dropped line),\012drop SDD from EncodingDecl,\012change text at version number 1.0,\012drop misleading (wrong!) sentence about ignorables and extenders,\012modify definition of PCData to make bar on msc grammatical,\012change grammar's handling of internal subset (drop non-terminal markupdecls),\012change definition of includeSect to allow conditional sections,\012add integral-declaration constraint on internal subset,\012drop misleading / dangerous sentence about relationship of\012entities with system storage objects,\012change table body tag to htbody as per EM change to DTD,\012add rule about space normalization in public identifiers,\012add description of how to generate our name-space rules from \012Unicode character database (needs further work!).\012")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-10-08 : TB : Removed %-constructs again, new rules\012for PE appearance.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-10-01 : TB : Case-sensitive markup; cleaned up\012element-type defs, lotsa little edits for style')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-09-25 : TB : Change to elm's new DTD, with\012substantial detail cleanup as a side-effect")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-07-24 : CMSMcQ : correct error (lost *) in definition \012of ignoreSectContents (thanks to Makoto Murata)')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('Allow all empty elements to have end-tags, consistent with\012SGML TC (as per JJC).')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-07-23 : CMSMcQ : pre-emptive strike on pending corrections:\012introduce the term 'empty-element tag', note that all empty elements\012may use it, and elements declared EMPTY must use it.\012Add WFC requiring encoding decl to come first in an entity.\012Redefine notations to point to PIs as well as binary entities.\012Change autodetection table by removing bytes 3 and 4 from \012examples with Byte Order Mark.\012Add content model as a term and clarify that it applies to both\012mixed and element content.\012")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-06-30 : CMSMcQ : change date, some cosmetic changes,\012changes to productions for choice, seq, Mixed, NotationType,\012Enumeration.  Follow James Clark's suggestion and prohibit \012conditional sections in internal subset.  TO DO:  simplify\012production for ignored sections as a result, since we don't \012need to worry about parsers which don't expand PErefs finding\012a conditional section.")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-06-29 : TB : various edits')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-06-29 : CMSMcQ : further changes:\012Suppress old FINAL EDIT comments and some dead material.\012Revise occurrences of % in grammar to exploit Henry Thompson's pun,\012especially markupdecl and attdef.\012Remove RMD requirement relating to element content (?).\012")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-06-28 : CMSMcQ : Various changes for 1 July draft:\012Add text for draconian error handling (introduce\012the term Fatal Error).\012RE deleta est (changing wording from \012original announcement to restrict the requirement to validating\012parsers).\012Tag definition of validating processor and link to it.\012Add colon as name character.\012Change def of %operator.\012Change standard definitions of lt, gt, amp.\012Strip leading zeros from #x00nn forms.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-04-02 : CMSMcQ : final corrections of editorial errors\012found in last night's proofreading.  Reverse course once more on\012well-formed:   Webster's Second hyphenates it, and that's enough\012for me.")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-04-01 : CMSMcQ : corrections from JJC, EM, HT, and self')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-03-31 : Tim Bray : many changes')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-03-29 : CMSMcQ : some Henry Thompson (on entity handling),\012some Charles Goldfarb, some ERB decisions (PE handling in miscellaneous\012declarations.  Changed Ident element to accept def attribute.\012Allow normalization of Unicode characters.  move def of systemliteral\012into section on literals.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-03-28 : CMSMcQ : make as many corrections as possible, from\012Terry Allen, Norbert Mikula, James Clark, Jon Bosak, Henry Thompson,\012Paul Grosso, and self.  Among other things:  give in on "well formed"\012(Terry is right), tentatively rename QuotedCData as AttValue\012and Literal as EntityValue to be more informative, since attribute\012values are the ')
handle_start_tag(emph, {})
handle_data('only')
handle_end_tag(emph)
handle_data(" place QuotedCData was used, and\012vice versa for entity text and Literal. (I'd call it Entity Text, \012but 8879 uses that name for both internal and external entities.)")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1997-03-26 : CMSMcQ : resynch the two forks of this draft, reapply\012my changes dated 03-20 and 03-21.  Normalize old 'may not' to 'must not'\012except in the one case where it meant 'may or may not'.")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-03-21 : TB : massive changes on plane flight from Chicago\012to Vancouver')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-03-21 : CMSMcQ : correct as many reported errors as possible.\012')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-03-20 : CMSMcQ : correct typos listed in CMSMcQ hand copy of spec.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1997-03-20 : CMSMcQ : cosmetic changes preparatory to revision for\012WWW conference April 1997:  restore some of the internal entity \012references (e.g. to docdate, etc.), change character xA0 to ')
handle_data('&')
handle_data('nbsp;\012and define nbsp as ')
handle_data('&')
handle_data('#160;, and refill a lot of paragraphs for\012legibility.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-11-12 : CMSMcQ : revise using Tim\'s edits:\012Add list type of NUMBERED and change most lists either to\012BULLETS or to NUMBERED.\012Suppress QuotedNames, Names (not used).\012Correct trivial-grammar doc type decl.\012Rename \'marked section\' as \'CDATA section\' passim.\012Also edits from James Clark:\012Define the set of characters from which [^abc] subtracts.\012Charref should use just [0-9] not Digit.\012Location info needs cleaner treatment:  remove?  (ERB\012question).\012One example of a PI has wrong pic.\012Clarify discussion of encoding names.\012Encoding failure should lead to unspecified results; don\'t\012prescribe error recovery.\012Don\'t require exposure of entity boundaries.\012Ignore white space in element content.\012Reserve entity names of the form u-NNNN.\012Clarify relative URLs.\012And some of my own:\012Correct productions for content model:  model cannot\012consist of a name, so "elements ::= cp" is no good.\012')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-11-11 : CMSMcQ : revise for style.\012Add new rhs to entity declaration, for parameter entities.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-11-10 : CMSMcQ : revise for style.\012Fix / complete section on names, characters.\012Add sections on parameter entities, conditional sections.\012Still to do:  Add compatibility note on deterministic content models.\012Finish stylistic revision.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-31 : TB : Add Entity Handling section')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-30 : TB : Clean up term ')
handle_data('&')
handle_data(' termdef.  Slip in\012ERB decision re EMPTY.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1996-10-28 : TB : Change DTD.  Implement some of Michael's\012suggestions.  Change comments back to //.  Introduce language for\012XML namespace reservation.  Add section on white-space handling.\012Lots more cleanup.")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1996-10-24 : CMSMcQ : quick tweaks, implement some ERB\012decisions.  Characters are not integers.  Comments are /* */ not //.\012Add bibliographic refs to 10646, HyTime, Unicode.\012Rename old Cdata as MsData since it's ")
handle_start_tag(emph, {})
handle_data('only')
handle_end_tag(emph)
handle_data(" seen\012in marked sections.  Call them attribute-value pairs not\012name-value pairs, except once.  Internal subset is optional, needs\012'?'.  Implied attributes should be signaled to the app, not\012have values supplied by processor.")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-16 : TB : track down ')
handle_data('&')
handle_data(' excise all DSD references;\012introduce some EBNF for entity declarations.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-?? : TB : consistency check, fix up scraps so\012they all parse, get formatter working, correct a few productions.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data("1996-10-10/11 : CMSMcQ : various maintenance, stylistic, and\012organizational changes:\012Replace a few literals with xmlpio and\012pic entities, to make them consistent and ensure we can change pic\012reliably when the ERB votes.\012Drop paragraph on recognizers from notation section.\012Add match, exact match to terminology.\012Move old 2.2 XML Processors and Apps into intro.\012Mention comments, PIs, and marked sections in discussion of\012delimiter escaping.\012Streamline discussion of doctype decl syntax.\012Drop old section of 'PI syntax' for doctype decl, and add\012section on partial-DTD summary PIs to end of Logical Structures\012section.\012Revise DSD syntax section to use Tim's subset-in-a-PI\012mechanism.")
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-10 : TB : eliminate name recognizers (and more?)')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-09 : CMSMcQ : revise for style, consistency through 2.3\012(Characters)')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-09 : CMSMcQ : re-unite everything for convenience,\012at least temporarily, and revise quickly')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-08 : TB : first major homogenization pass')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-08 : TB : turn "current" attribute on div type into \012CDATA')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-10-02 : TB : remould into skeleton + entities')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-09-30 : CMSMcQ : add a few more sections prior to exchange\012                            with Tim.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-09-20 : CMSMcQ : finish transcribing notes.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-09-19 : CMSMcQ : begin transcribing notes for draft.')
handle_end_tag(sitem)
handle_data('\012')
handle_start_tag(sitem, {})
handle_data('1996-09-13 : CMSMcQ : made outline from notes of 09-06,\012do some housekeeping')
handle_end_tag(sitem)
handle_data('\012')
handle_end_tag(slist)
handle_data('\012')
handle_end_tag(revisiondesc)
handle_data('\012')
handle_end_tag(header)
handle_data('\012')
handle_start_tag(body, {})
handle_data(' \012')
handle_start_tag(div1, {'id' : 'sec-intro'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\210\352\224\312\216\226\215\200')
handle_end_tag(head)
handle_data('\012')
handle_comment("\011    <div2 id='sec-scope'>\012\011      <head>\223K\227p\224\315\210\315</head> ")
handle_data('\012')
handle_start_tag(p, {})
handle_data('\212g\222\243\211\302\224\\\202\310')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\214\276\214\352XML(eXtensible Markup Language)\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-xml-doc'})
handle_data('XML\225\266\217\221')
handle_end_tag(termref)
handle_data('\202\306\202\242\202\244\203f\201[\203^\203I\203u\203W\203F\203N\203g\202\314\203N\203\211\203X\202\360\213K\222\350\202\265\201CXML\225\266\217\221\202\360\217\210\227\235\202\267\202\351\203v\203\215\203O\203\211\203\200\202\314\223\256\215\354\202\314\210\352\225\224\202\360\213K\222\350\202\267\202\351\201BXML\202\315\201CSGML(\225W\217\200\210\352\224\312\211\273')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\214\276\214\352\201CStandard Generalized Markup Language)')
handle_start_tag(bibref, {'ref' : 'ISO8879'})
handle_end_tag(bibref)
handle_data('\202\314\220\247\214\300\202\265\202\275')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\306\202\267\202\351\201B\215\\\221\242\217\343\201CXML\225\266\217\221\202\315\201C\202\251\202\310\202\347\202\270SGML\213K\212i\202\311\223K\215\207\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\225\266\217\221\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-entity'})
handle_data('\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\306\202\242\202\244\213L\211\257\222P\210\312\202\251\202\347\202\310\202\350\201C\216\300\221\314\202\315\201C')
handle_data('\211\360\220\315\202\263\202\352\202\351\203f\201[\203^')
handle_data('\226\224\202\315')
handle_data('\211\360\220\315\202\263\202\352\202\310\202\242\203f\201[\203^')
handle_data('\202\251\202\347\202\310\202\351\201B')
handle_data('\211\360\220\315\202\263\202\352\202\351\203f\201[\203^')
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-character'})
handle_data('\225\266\216\232')
handle_end_tag(termref)
handle_data('\202\251\202\347\202\310\202\350\201C\202\273\202\314\210\352\225\224\202\315\201C\225\266\217\221\202\314')
handle_start_tag(termref, {'def' : 'dt-chardata'})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(termref)
handle_data('\202\360\215\\\220\254\202\265\201C\210\352\225\224\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-markup'})
handle_data('\203}\201[\203N\225t\202\257')
handle_end_tag(termref)
handle_data('\202\360\215\\\220\254\202\267\202\351\201B')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\315\201C\225\266\217\221\202\314\213L\211\257\203\214\203C\203A\203E\203g\213y\202\321\230_\227\235\215\\\221\242\202\311\202\302\202\242\202\304\202\314\213L\217q\202\360\225\\\202\267\225\204\215\206\202\306\202\267\202\351\201BXML\202\315\201C\213L\211\257\203\214\203C\203A\203E\203g\213y\202\321\230_\227\235\215\\\221\242\202\311\202\302\202\242\202\304\202\314\220\247\226\361\217\360\214\217\202\360\213L\217q\202\267\202\351\213@\215\\\202\360\222\361\213\237\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-xml-proc', 'term' : 'XML\203v\203\215\203Z\203T'})
handle_start_tag(term, {})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\203\\\203t\203g\203E\203F\203A\203\202\203W\203\205\201[\203\213\202\315\201CXML\225\266\217\221\202\360\223\307\202\335\215\236\202\335\201C\202\273\202\314\223\340\227e\213y\202\321\215\\\221\242\202\326\202\314\203A\203N\203Z\203X\202\360\222\361\213\237\202\267\202\351\202\275\202\337\202\311\227p\202\242\202\351\201B ')
handle_end_tag(termdef)
handle_data(' ')
handle_start_tag(termdef, {'id' : 'dt-app', 'term' : '\203A\203v\203\212\203P\201[\203V\203\207\203\223'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\221\274\202\314\203\202\203W\203\205\201[\203\213\202\314\202\275\202\337\202\311\223\256\215\354\202\267\202\351\202\261\202\306\202\360\221O\222\361\202\306\202\265\201C\202\273\202\314\203\202\203W\203\205\201[\203\213\202\360')
handle_start_tag(term, {})
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\201B')
handle_end_tag(termdef)
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\315\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\215s\202\355\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\220U\225\221\202\242\202\360\213K\222\350\202\267\202\351\201B\202\302\202\334\202\350\201CXML\203f\201[\203^\202\314\223\307\215\236\202\335\225\373\226@\202\360\213K\222\350\202\265\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\222\361\213\237\202\267\202\351\217\356\225\361\202\360\213K\222\350\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_comment('\011    </div2> ')
handle_data('\012')
handle_start_tag(div2, {'id' : 'sec-origin-goals'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\214o\210\334\213y\202\321\226\332\225W')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('1996\224N\202\311World Wide Web Consortium(W3C)\202\314\222\206\202\311\220\335\227\247\202\265\202\275XML\215\354\213\306\203O\203\213\201[\203v(\210\310\221O\202\315\201C SGML\225\322\217W\203\214\203r\203\205\201[\210\317\210\365\211\357\202\306\214\304\202\316\202\352\202\275)\202\252\201CXML\202\360\212J\224\255\202\265\202\275\201B\202\261\202\314\215\354\213\306\203O\203\213\201[\203v\202\314\213c\222\267\202\360\201CSun Microsystems\202\314Jon Bosak\202\252\213\316\202\337\202\351\201BW3C\202\252\221g\220D\202\265\201C\210\310\221O\202\315SGML\215\354\213\306\203O\203\213\201[\203v\202\306\214\304\202\316\202\352\202\275XML SIG(Special Interest Group)\202\340\201CXML\202\314\220\247\222\350\202\311\224\361\217\355\202\311\212\210\224\255\202\311\216Q\211\346\202\265\202\275\201B\012')
handle_comment('JIS\202\305\202\315? XML\215\354\213\306\203O\203\213\201[\203v\202\314\203\201\203\223\203o\202\360\225t\230^\202\311\216\246\202\267\201B')
handle_data('Dan Connolly\202\315\201C\215\354\213\306\203O\203\213\201[\203v\202\314W3C\202\311\202\250\202\257\202\351\230A\227\215\214W\202\360\226\261\202\337\202\275\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\202\314\220\335\214v\226\332\225W\202\360\201C\216\237\202\311\216\246\202\267\201B')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) XML\202\315\201CInternet\217\343\202\305\202\273\202\314\202\334\202\334\216g\227p\202\305\202\253\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) XML\202\315\201C\215L\224\315\210\315\202\314')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\360\216x\211\207\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) XML\202\315\201CSGML\202\306\214\335\212\267\220\253\202\360\202\340\202\302\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('d) XML\225\266\217\221\202\360\217\210\227\235\202\267\202\351\203v\203\215\203O\203\211\203\200\202\360\217\221\202\255\202\261\202\306\202\315\201C\227e\210\325\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('e) XML\202\305\202\315\201C\203I\203v\203V\203\207\203\223\202\314\213@\224\\\202\315\202\305\202\253\202\351\202\276\202\257\217\255\202\310\202\255\202\265\201C\210\352\202\302\202\340\221\266\215\335\202\265\202\310\202\242\202\261\202\306\202\360\226\332\216w\202\267\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('f) XML\225\266\217\221\202\315\201C\220l\212\324\202\311\202\306\202\301\202\304\223\307\202\335\202\342\202\267\202\255\201C\217\\\225\252\202\311\227\235\211\360\202\265\202\342\202\267\202\242\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('g) XML\202\314\220\335\214v\202\315\201C\202\267\202\335\202\342\202\251\202\311\215s\202\246\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('h) XML\202\314\220\335\214v\202\315\201C\214\265\226\247\213y\202\321\212\310\214\211\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('i) XML\225\266\217\221\202\315\201C\227e\210\325\202\311\215\354\220\254\202\305\202\253\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('j) XML\202\305\202\315\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\220\224\202\360\214\270\202\347\202\267\202\261\202\306\202\315\201C\217d\227v\202\305\202\315\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\221\346')
handle_data('1.0')
handle_data('\224\305')
handle_data('\202\360\227\235\211\360\202\265\201C\202\273\202\352\202\360\217\210\227\235\202\267\202\351\214v\216Z\213@\203v\203\215\203O\203\211\203\200\202\360\217\221\202\255\202\275\202\337\202\311\217\\\225\252\202\310\217\356\225\361\202\315\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\213y\202\321\212\326\230A\202\267\202\351\213K\212i(\225\266\216\232\227p\202\306\202\265\202\304\201CUnicode\213y\202\321ISO/IEC 10646\201C')
handle_comment('* XXX for Uniform Resource Identifiers, *')
handle_data('\214\276\214\352\216\257\225\312')
handle_data('\203^\203O\227p\202\306\202\265\202\304\201C\203C\203\223\203^\203l\203b\203g RFC 1766\201C')
handle_data('\214\276\214\352\203R\201[\203h')
handle_data('\227p\202\306\202\265\202\304\201CISO 639\201C\225\300\202\321\202\311')
handle_data('\215\221\203R\201[\203h')
handle_data('\227p\202\306\202\265\202\304\201CISO 3166)\202\305\201C\202\267\202\327\202\304\216\246\202\267\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\224\305')
handle_data('\202\314XML\202\314\213K\222\350')
handle_comment(' (&doc.date;) ')
handle_data('\202\315\201C\214\366\212J\203\214\203r\203\205\201[\213y\202\321\213c\230_\202\360\226\332\223I\202\306\202\267\202\351\201B\203e\203L\203X\203g\213y\202\321\226@\227\245\217\343\202\314\222\215\210\323\202\360\211\374\225\317\202\265\202\310\202\242\214\300\202\350\201C\216\251\227R\202\311\224z\225z\202\265\202\304\202\340\202\346\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'sec-terminology'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\222\350\213`')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\225\266\217\221\202\314\213K\222\350\202\314\202\275\202\337\202\311\216g\227p\202\267\202\351\227p\214\352\202\315\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\223\340\202\305\222\350\213`\202\267\202\351\201B\216\237\202\311\216\246\202\267\214\352\213\345\202\315\201C\202\273\202\352\202\347\202\314\227p\214\352\202\360\222\350\213`\202\267\202\351\202\275\202\337\201C\213y\202\321XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\314\223\256\202\253\202\360\213K\222\350\202\267\202\351\202\275\202\337\202\311\216g\227p\202\267\202\351\201B\012')
handle_start_tag(glist, {})
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.1 \202\265\202\304\202\340\202\346\202\242(may)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-may', 'term' : '\202\265\202\304\202\340\202\346\202\242'})
handle_data('\223K\215\207\202\267\202\351\225\266\217\221\226\224\202\315XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\213L\217q\202\263\202\352\202\275\202\306\202\250\202\350\202\311\223\256\215\354\202\265\202\304\202\340\202\346\202\242\202\252\201C\202\273\202\314\202\306\202\250\202\350\202\311\202\267\202\351\225K\227v\202\315\202\310\202\242\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.2 \202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242(must)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\223K\215\207\202\267\202\351\225\266\217\221\226\224\202\315XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\213L\217q\202\263\202\352\202\275\202\306\202\250\202\350\202\311\223\256\215\354\202\267\202\351\202\261\202\306\202\252\227v\213\201\202\263\202\352\202\351\201B\202\273\202\244\202\305\202\310\202\257\202\352\202\316\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\267\202\351\201B')
handle_comment(" do NOT change this! this is what defines a violation ofa 'must' clause as 'an error'. -MSM ")
handle_data('\012')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.3 ')
handle_data('\203G\203\211\201[')
handle_data('(error)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-error', 'term' : '\203G\203\211\201['})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\252\222\350\202\337\202\351\213K\221\245\202\311\221\316\202\267\202\351\210\341\224\275\201B\214\213\211\312\202\315\222\350\213`\202\265\202\310\202\242\201B\223K\215\207\202\267\202\351\203\\\203t\203g\203E\203F\203A\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\360\214\237\217o\202\265\202\304\225\361\215\220\202\265\202\304\202\340\202\346\202\255\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\251\202\347\211\361\225\234\202\265\202\304\202\340\202\346\202\242\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.4 ')
handle_data('\222v\226\275\223I\203G\203\211\201[')
handle_data('(fatal error)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-fatal', 'term' : '\222v\226\275\223I\203G\203\211\201['})
handle_data('\223K\215\207\202\267\202\351')
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\252\214\237\217o\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\270\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\225\361\215\220\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242')
handle_data('\203G\203\211\201[')
handle_data('\201B')
handle_data('\222v\226\275\223I\203G\203\211\201[')
handle_data('\202\360\224\255\214\251\202\265\202\275\202\240\202\306\201C')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\202\273\202\352\210\310\215~\202\314')
handle_data('\203G\203\211\201[')
handle_data('\202\360\222T\202\267\202\275\202\337\202\311\203f\201[\203^\217\210\227\235\202\360\221\261\215s\202\265\202\304\202\340\202\346\202\255\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\360\224\255\214\251\202\265\202\275\217\352\215\207\202\315\201C\202\273\202\314')
handle_data('\203G\203\211\201[')
handle_data('\202\360')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\225\361\215\220\202\265\202\304\202\340\202\346\202\242\201B')
handle_data('\203G\203\211\201[')
handle_data('\222\371\220\263\202\360\203T\203|\201[\203g\202\267\202\351\202\275\202\337\202\311\201C')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\226\242\217\210\227\235\203f\201[\203^(\225\266\216\232\203f\201[\203^\213y\202\321')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\215\254\215\335\202\265\202\275\202\340\202\314)\202\360\225\266\217\221\202\251\202\347\216\346\202\350\217o\202\265\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\223n\202\265\202\304\202\340\202\346\202\242\201B\202\265\202\251\202\265\201C\210\352\223x\201C')
handle_data('\222v\226\275\223I\203G\203\211\201[')
handle_data('\202\360\214\237\217o\202\265\202\275\202\347\201C')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\222\312\217\355\202\314\217\210\227\235\202\360\221\261\215s\202\265\202\304\202\315\202\310\202\347\202\310\202\242\201B\202\302\202\334\202\350\201C')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\225\266\216\232\203f\201[\203^\213y\202\321\225\266\217\221\202\314\230_\227\235\215\\\221\242\202\311\202\302\202\242\202\304\202\314\217\356\225\361\202\360\201C\222\312\217\355\202\314\225\373\226@\202\305')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\223n\202\265\221\261\202\257\202\304\202\315\202\310\202\347\202\310\202\242\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.5 ')
handle_data('\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
handle_data('(at user option)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\223K\215\207\202\267\202\351\203\\\203t\203g\203E\203G\203A\202\315\201C\213L\217q\202\263\202\352\202\275\202\306\202\250\202\350\202\311\220U\202\351\225\221\202\301\202\304\202\340\202\346\202\242(may)\201C\226\224\202\315\220U\202\351\225\221\202\355\202\310\202\255\202\304\202\315\202\310\202\347\202\310\202\242(must)(\225\266\217\315\222\206\202\314\217\225\223\256\216\214\202\311\202\346\202\351\201B)\201B\202\273\202\314\202\306\202\250\202\350\202\311\220U\202\351\225\221\202\244\217\352\215\207\202\315\201C\213L\217q\202\263\202\352\202\275\220U\225\221\202\242\202\360\221I\221\360\226\224\202\315\213\221\224\333\202\267\202\351\216\350\222i\202\360')
handle_data('\203\206\201[\203U')
handle_data('\202\311\222\361\213\237\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.6 ')
handle_data('\221\303\223\226\220\253')
handle_data('\220\247\226\361(validity constraint)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\202\267\202\327\202\304\202\314')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226')
handle_data('\202\310')
handle_end_tag(termref)
handle_data('XML\225\266\217\221\202\311\223K\227p\202\267\202\351\213K\221\245\201B')
handle_data('\221\303\223\226\220\253')
handle_data('\220\247\226\361\202\314\210\341\224\275\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\267\202\351\201B')
handle_data('\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-validating'})
handle_data('\214\237\217\330\202\360\215s\202\244XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\315\201C\202\261\202\314')
handle_data('\203G\203\211\201[')
handle_data('\202\360\225\361\215\220\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.7 ')
handle_data('\220\256\214`\216\256')
handle_data('\220\247\226\361(well-formedness constraint)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\202\267\202\327\202\304\202\314')
handle_start_tag(termref, {'def' : 'dt-wellformed'})
handle_data('\220\256\214`\216\256')
handle_end_tag(termref)
handle_data('\202\314XML\225\266\217\221\202\311\223K\227p\202\267\202\351\213K\221\245\201B')
handle_data('\220\256\214`\216\256')
handle_data('\220\247\226\361\202\314\210\341\224\275\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-fatal'})
handle_data('\222v\226\275\223I\203G\203\211\201[')
handle_end_tag(termref)
handle_data('\202\306\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.8 ')
handle_data('\203}\203b\203`')
handle_data('(match)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('a) ')
handle_start_tag(termdef, {'id' : 'dt-match', 'term' : '\203}\203b\203`'})
handle_data('\225\266\216\232\227\361')
handle_data('\226\224\202\315\226\274\221O\202\314')
handle_data('\203}\203b\203`')
handle_data('\201@\224\344\212r\202\267\202\351\223\361\202\302\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\226\224\202\315\226\274\221O\202\315\201C\223\257\210\352\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201BISO/IEC 10646\202\311\202\250\202\242\202\304\201C\225\241\220\224\202\314\225\\\214\273\202\252\211\302\224\\\202\310\225\266\216\232\201m\227\341\202\246\202\316\201C')
handle_data('\215\207\220\254\214`\216\256')
handle_data('\213y\202\321\212\356\222\352+')
handle_data('\224\255\211\271\225\204')
handle_data('(\203_\203C\203A\203N\203\212\203e\203B\203J\203\213\203}\201[\203N)\214`\216\256\201n\202\315\201C\202\307\202\277\202\347\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\340\223\257\202\266\225\\\214\273\202\314\202\306\202\253\202\311\214\300\202\350\201C')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_data('\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
handle_data('\201C')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\202\273\202\314\225\266\216\232\202\360\225W\217\200\214`\202\311\220\263\213K\211\273\202\265\202\304\202\340\202\346\202\242\201B\224\344\212r\202\314\202\306\202\253\201A\221\345\225\266\216\232\202\306\217\254\225\266\216\232\202\306\202\314\213\346\225\312\202\360\202\267\202\351\201B')
handle_comment(' Note that no processing of characters with respect to case is part of the matching process. ')
handle_data('<')
handle_data('BR>b) ')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306\225\266\226@\222\206\202\314\213K\221\245\202\306\202\314')
handle_data('\203}\203b\203`')
handle_data('\201@\202\240\202\351\220\266\220\254\213K\221\245\202\251\202\347\220\266\220\254\202\267\202\351\214\276\214\352\202\311\201C\202\240\202\351')
handle_data('\225\266\216\232\227\361')
handle_data('\202\252\221\256\202\267\202\351\202\306\202\253\201C\202\261\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\315\201C\202\261\202\314\220\266\220\254\213K\221\245\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\306\202\242\202\244\201B')
handle_data('<')
handle_data('BR>c) \223\340\227e\202\306\223\340\227e\203\202\203f\203\213\202\306\202\314')
handle_data('\203}\203b\203`')
handle_data('\201@\202\240\202\351\227v\221f\202\252\201C')
handle_start_tag(titleref, {'href' : 'elementvalid'})
handle_data('\227v\221f\202\314')
handle_data('\221\303\223\226\220\253')
handle_end_tag(titleref)
handle_data('\202\314\220\247\226\361\202\311\216\246\202\267\210\323\226\241\202\305\223K\215\207\202\267\202\351\202\306\202\253\201C\202\261\202\314\227v\221f\202\315\201C\202\273\202\314\220\351\214\276\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\306\202\242\202\244\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.9 \214\335\212\267\220\253\202\314\202\275\202\337(for compatibility)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-compat', 'term' : '\214\335\212\267\220\253\202\314\202\275\202\337'})
handle_data('XML\202\314\213@\224\\\202\305\202\240\202\301\202\304\201CXML\202\252SGML\202\306\214\335\212\267\202\305\202\240\202\351\202\261\202\306\202\360\225\333\217\330\202\267\202\351\202\275\202\337\202\276\202\257\202\311\223\261\223\374\202\263\202\352\202\351\202\340\202\314\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('1.2.10 \221\212\214\335\211^\227p\220\253\202\314\202\275\202\337(for interoperability)')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-interop', 'term' : '\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337'})
handle_data('\215S\221\251\227\315\202\315\202\340\202\275\202\310\202\242\220\204\217\247\216\226\215\200\201B')
handle_data('ISO 8879\202\326\202\314WebSGML')
handle_data('\223K\227p\225\215\221\256\217\221')
handle_data('\210\310\221O\202\251\202\347\221\266\215\335\202\267\202\351SGML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\201CXML\225\266\217\221\202\360\217\210\227\235\202\305\202\253\202\351\211\302\224\\\220\253\202\360\215\202\202\337\202\351\202\275\202\337\202\311\216\346\202\350\223\374\202\352\202\351\202\340\202\314\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_end_tag(glist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_end_tag(div1)
handle_data('\012')
handle_comment(' &Docs; ')
handle_data('\012')
handle_start_tag(div1, {'id' : 'sec-documents'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\217\221')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-xml-doc', 'term' : 'XML\225\266\217\221'})
handle_data('\012')
handle_comment(' A textual object ')
handle_data('\012\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\305\222\350\213`\202\267\202\351\210\323\226\241\202\305\201C')
handle_start_tag(termref, {'def' : 'dt-wellformed'})
handle_data('\220\256\214`\216\256')
handle_end_tag(termref)
handle_data('\202\306\202\267\202\351\203f\201[\203^\203I\203u\203W\203F\203N\203g\202\360\201C')
handle_start_tag(term, {})
handle_data('XML\225\266\217\221')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\201B')
handle_data('\220\256\214`\216\256')
handle_data('\202\314XML\225\266\217\221\202\252\201C\202\263\202\347\202\311\201C\202\240\202\351\220\247\226\361\217\360\214\217\202\360\226\236\221\253\202\267\202\352\202\316\201C')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226')
handle_end_tag(termref)
handle_data('\202\310XML\225\266\217\221\202\306\202\267\202\351\201B\012')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012\012')
handle_comment(" why this div? -TB\012<div2 id='sec-log-phys'> \012<head>Logical and Physical Structure</head> ")
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\202\242\202\270\202\352\202\314XML\225\266\217\221\202\340\201C\230_\227\235\215\\\221\242\213y\202\321\225\250\227\235\215\\\221\242\202\360\202\340\202\302\201B\225\250\227\235\223I\202\311\202\315\201C\225\266\217\221\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-entity'})
handle_data('\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\306\214\304\202\324\222P\210\312\202\251\202\347\202\310\202\351\201B\202\240\202\351\216\300\221\314\202\315\201C\225\266\217\221\223\340\202\311\221\274\202\314\216\300\221\314\202\360\212\334\202\336\202\275\202\337\202\311\201C\202\273\202\314\221\274\202\314\216\300\221\314\202\360')
handle_start_tag(termref, {'def' : 'dt-entref'})
handle_data('\216Q\217\306')
handle_end_tag(termref)
handle_data('\202\265\202\304\202\340\202\346\202\242\201B\225\266\217\221\202\315\201C\201g\203\213\201[\203g\201h\202\267\202\310\202\355\202\277')
handle_start_tag(termref, {'def' : 'dt-docent'})
handle_data('\225\266\217\221\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\251\202\347\216n\202\334\202\351\201B\230_\227\235\223I\202\311\202\315\201C\225\266\217\221\202\315\201C\220\351\214\276\201C\227v\221f\201C\203R\203\201\203\223\203g\201C\225\266\216\232\216Q\217\306\213y\202\321\217\210\227\235\226\275\227\337\202\360\212\334\202\335\201C\202\261\202\352\202\347\202\267\202\327\202\304\202\315\201C\225\266\217\221\223\340\202\305\226\276\216\246\223I\202\310')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\311\202\346\202\301\202\304\216\246\202\267\201B\230_\227\235\215\\\221\242\213y\202\321\225\250\227\235\215\\\221\242\202\315\201C')
handle_start_tag(titleref, {'href' : 'wf-entities'})
handle_data('\210\310\215~')
handle_end_tag(titleref)
handle_data('\202\311\216\246\202\267\202\306\202\250\202\350\202\311\201C\214\265\226\247\202\311\223\374\202\352\216q\202\311\202\310\202\301\202\304\202\242\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_comment(' \012</div2> ')
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'sec-well-formed'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\220\256\214`\216\256')
handle_data('\202\314XML\225\266\217\221')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-wellformed', 'term' : '\220\256\214`\216\256'})
handle_data('\202\240\202\351\203e\203L\203X\203g\203I\203u\203W\203F\203N\203g\202\252\201C\216\237\202\314\202\242\202\270\202\352\202\251\202\314\202\306\202\253\201C\202\273\202\314\203e\203L\203X\203g\203I\203u\203W\203F\203N\203g\202\360')
handle_data('\220\256\214`\216\256')
handle_data('\202\314XML\225\266\217\221\202\306\214\304\202\324\201B')
handle_end_tag(termdef)
handle_data('\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) \221S\221\314\202\306\202\265\202\304\201C')
handle_start_tag(nt, {'def' : 'NT-document'})
handle_data('document')
handle_end_tag(nt)
handle_data('\202\306\202\242\202\244\203\211\203x\203\213\202\360\202\340\202\302\220\266\220\254\213K\221\245\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) \202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\305\222\350\213`\202\267\202\351\201C\202\267\202\327\202\304\202\314')
handle_data('\220\256\214`\216\256')
handle_data('\220\247\226\361\202\311\217]\202\244\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) \202\273\202\352\202\274\202\352\202\314')
handle_start_tag(termref, {'def' : 'dt-parsedent'})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\252\201C')
handle_start_tag(titleref, {'href' : 'wf-entities'})
handle_data('\220\256\214`\216\256')
handle_end_tag(titleref)
handle_data('\202\306\202\310\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(scrap, {'id' : 'document', 'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\217\221')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-document'})
handle_start_tag(lhs, {})
handle_data('document')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-prolog'})
handle_data('prolog')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-element'})
handle_data('element')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-Misc'})
handle_data('Misc')
handle_end_tag(nt)
handle_data('*')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(nt, {'def' : 'NT-document'})
handle_data('document')
handle_end_tag(nt)
handle_data('\220\266\220\254\213K\221\245\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\306\202\315\201C\216\237\202\360\210\323\226\241\202\267\202\351\201B\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) \210\352\202\302\210\310\217\343\202\314')
handle_start_tag(termref, {'def' : 'dt-element'})
handle_data('\227v\221f')
handle_end_tag(termref)
handle_data('\202\360\212\334\202\336\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012\012')
handle_comment("* N.B. some readers (notably JC) find the following\012paragraph awkward and redundant.  I agree it's logically redundant:\012it *says* it is summarizing the logical implications of\012matching the grammar, and that means by definition it's\012logically redundant.  I don't think it's rhetorically\012redundant or unnecessary, though, so I'm keeping it.  It\012could however use some recasting when the editors are feeling\012stronger. -MSM *")
handle_data('\012\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) ')
handle_start_tag(termdef, {'id' : 'dt-root', 'term' : '\203\213\201[\203g\227v\221f'})
handle_start_tag(term, {})
handle_data('\203\213\201[\203g')
handle_end_tag(term)
handle_data('\226\224\202\315\225\266\217\221\227v\221f\202\306\202\242\202\244\227v\221f\202\252\210\352\202\302\202\276\202\257\221\266\215\335\202\265\201C\202\261\202\352\202\315\201C\221\274\202\314\227v\221f\202\314')
handle_start_tag(termref, {'def' : 'dt-content'})
handle_data('\223\340\227e')
handle_end_tag(termref)
handle_data('\202\311\212\334\202\334\202\352\202\310\202\242\201B')
handle_end_tag(termdef)
handle_data('\202\261\202\352\210\310\212O\202\314\202\267\202\327\202\304\202\314\227v\221f\202\315\201C\202\273\202\314\212J\216n\203^\203O\202\252\221\274\202\314\227v\221f\202\314\223\340\227e\202\311\212\334\202\334\202\352\202\352\202\316\201C\221\316\211\236\202\267\202\351\217I\227\271\203^\203O\202\340\223\257\202\266\227v\221f\202\314\223\340\227e\202\311\212\334\202\334\202\352\202\351\201B\202\302\202\334\202\350\201C\227v\221f\202\315\201C\212J\216n\203^\203O\213y\202\321\217I\227\271\203^\203O\202\311\202\346\202\301\202\304\213\346\220\330\202\347\202\352\201C\223\374\202\352\216q\215\\\221\242\202\360\202\310\202\267\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-parentchild', 'term' : '\220e\227v\221f/\216q\227v\221f'})
handle_data('\202\261\202\352\202\347\202\314\214\213\211\312\202\306\202\265\202\304\201C\225\266\217\221\223\340\202\314\202\307\202\314\224\361\203\213\201[\203g\227v\221f')
handle_start_tag(code, {})
handle_data('C')
handle_end_tag(code)
handle_data('\202\311\221\316\202\265\202\304\202\340\201C\202\240\202\351\221\274\202\314\227v\221f')
handle_start_tag(code, {})
handle_data('P')
handle_end_tag(code)
handle_data('\202\252\221\266\215\335\202\265\201C')
handle_start_tag(code, {})
handle_data('C')
handle_end_tag(code)
handle_data('\202\315\201C')
handle_start_tag(code, {})
handle_data('P')
handle_end_tag(code)
handle_data('\202\314\223\340\227e\202\311\212\334\202\334\202\352\202\351\202\252\201C')
handle_start_tag(code, {})
handle_data('P')
handle_end_tag(code)
handle_data('\202\314\223\340\227e\202\311\212\334\202\334\202\352\202\351\221\274\202\314\227v\221f\202\311\212\334\202\334\202\352\202\351\202\261\202\306\202\315\202\310\202\242\201B\202\261\202\314\202\306\202\253\201C')
handle_start_tag(code, {})
handle_data('P')
handle_end_tag(code)
handle_data('\202\360')
handle_start_tag(code, {})
handle_data('C')
handle_end_tag(code)
handle_data('\202\314')
handle_start_tag(code, {})
handle_data('\220e')
handle_end_tag(code)
handle_data('\202\306\202\242\202\242\201C')
handle_start_tag(code, {})
handle_data('C')
handle_end_tag(code)
handle_data('\202\360')
handle_start_tag(code, {})
handle_data('P')
handle_end_tag(code)
handle_data('\202\314')
handle_start_tag(code, {})
handle_data('\216q')
handle_end_tag(code)
handle_data('\202\306\202\242\202\244\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'charsets'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\012')
handle_comment('The data stored in an XML <termref def="dt-entity">entity</termref> is\012either <termref def="dt-text">parsed</termref> or <termref\012def="dt-unparsed">unparsed</termref>. ')
handle_data('\012\012')
handle_start_tag(termdef, {'id' : 'dt-text', 'term' : '\203e\203L\203X\203g'})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C')
handle_start_tag(term, {})
handle_data('\203e\203L\203X\203g')
handle_end_tag(term)
handle_data('(')
handle_start_tag(termref, {'def' : 'dt-character'})
handle_data('\225\266\216\232')
handle_end_tag(termref)
handle_data('\202\314\225\300\202\321\202\305\202\240\202\301\202\304\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\226\224\202\315\225\266\216\232\203f\201[\203^\202\360\225\\\202\265\202\304\202\340\202\346\202\242\201B)\202\360\212\334\202\336\201B')
handle_end_tag(termdef)
handle_start_tag(termdef, {'id' : 'dt-character', 'term' : '\225\266\216\232'})
handle_start_tag(term, {})
handle_data('\225\266\216\232')
handle_end_tag(term)
handle_data('\202\315\201C\203e\203L\203X\203g\202\314\215\305\217\254\222P\210\312\202\305\202\240\202\301\202\304\201CISO/IEC 10646')
handle_start_tag(bibref, {'ref' : 'ISO10646'})
handle_end_tag(bibref)
handle_data('\202\311\213K\222\350\202\263\202\352\202\351\201B')
handle_comment('Users may extend the ISO/IEC 10646 character repertoire by exploiting the private use areas. ')
handle_data('\213\226\227e\202\267\202\351\225\266\216\232\202\315\201C\203^\203u\201C\211\374\215s\201C\225\234\213A\225\300\202\321\202\311Unicode\213y\202\321ISO/IEC 10646\202\252\213\226\227e\202\267\202\351\220}\214`\225\266\216\232\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_data(' \012')
handle_start_tag(scrap, {'id' : 'char32', 'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232\202\314\224\315\210\315')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '4', 'pcw4' : '17.5', 'pcw5' : '11'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Char'})
handle_start_tag(lhs, {})
handle_data('Char')
handle_end_tag(lhs)
handle_data(' \012')
handle_start_tag(rhs, {})
handle_data('#x9 | #xA | #xD | [#x20-#D7FF] | [#xE000-#xFFFD] \012| [#x10000-#x10FFFF]')
handle_end_tag(rhs)
handle_data(' \012')
handle_start_tag(com, {})
handle_data('\224C\210\323\202\314Unicode\225\266\216\232\201B\202\275\202\276\202\265\201C')
handle_data('\203T\203\215\203Q\201[\203g\203u\203\215\203b\203N')
handle_data('\201CFFFE\213y\202\321FFFF\202\315\217\234\202\255\201B')
handle_end_tag(com)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\266\216\232\224\324\215\206')
handle_data('\202\360\203r\203b\203g\203p\203^\203\223\202\311\225\204\215\206\211\273\202\267\202\351\213@\215\\\202\315\201C\216\300\221\314\202\262\202\306\202\311\210\341\202\301\202\304\202\340\202\346\202\242\201B\202\267\202\327\202\304\202\314XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201CISO/IEC 10646\202\314UTF-8\225\204\215\206\211\273\213y\202\321UTF-16\225\204\215\206\211\273\202\360\216\363\202\257\225t\202\257\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\223\361\202\302\202\314\202\307\202\277\202\347\202\252\227p\202\242\202\347\202\352\202\304\202\242\202\351\202\251\202\360\226\276\216\246\202\267\202\351\202\275\202\337\202\314\213@\215\\\201C\213y\202\321\221\274\202\314\225\204\215\206\211\273\225\373\226@\202\360\227\230\227p\202\267\202\351\202\275\202\337\202\314\213@\215\\\202\315\201C')
handle_start_tag(titleref, {'href' : 'charencoding'})
handle_data('\225\266\216\232\202\314\225\204\215\206\211\273')
handle_end_tag(titleref)
handle_data('\202\311\213L\217q\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\307\202\314\225\204\215\206\211\273\225\373\226@\202\360\227p\202\242\202\351\202\251\202\311\212\326\214W\202\310\202\255\201CISO/IEC 10646\202\314\225\266\216\232\217W\215\207\202\311\202\240\202\351\202\267\202\327\202\304\202\314\225\266\216\232\202\315\201C\202\273\202\314UCS-4')
handle_data('\203R\201[\203h\222l')
handle_comment(' bit string. ')
handle_data('\202\306\223\231\211\277\202\31010\220i\220\224\226\224\202\31516\220i\220\224\202\311\202\346\202\301\202\304\201C\216Q\217\306\202\305\202\253\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'sec-common-syn'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213\244\222\312\202\314\215\\\225\266\215\\\220\254\216q')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_data('2.3\202\305\202\315\201C\225\266\226@\223\340\202\305\215L\202\255\216g\227p\202\267\202\351\202\242\202\255\202\302\202\251\202\314\213L\215\206\202\360\222\350\213`\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' (\213\363\224\222)\202\315\201C\210\352\202\302\216\341\202\265\202\255\202\315\225\241\220\224\202\314')
handle_data('\203X\203y\201[\203X\225\266\216\232')
handle_data('(#x20)\201C\225\234\213A\201C\211\374\215s\226\224\202\315\203^\203u\202\251\202\347\220\254\202\351\201B\012\012')
handle_start_tag(scrap, {'id' : 'white', 'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213\363\224\222')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '4', 'pcw4' : '17.5', 'pcw5' : '11'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-S'})
handle_start_tag(lhs, {})
handle_data('S')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('(#x20 | #x9 | #xD | #xA)+')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\326\213X\217\343\201C\225\266\216\232\202\360\201C')
handle_data('\216\232')
handle_data('\201C\220\224\216\232\226\224\202\315\221\274\202\314\225\266\216\232\202\311\225\252\227\336\202\267\202\351\201B')
handle_data('\216\232')
handle_data('\202\315\201C\203A\203\213\203t\203@\203x\203b\203g\223I\226\224\202\315\225\\\211\271\223I\202\305\202\240\202\351\212\356\226{\225\266\216\232(\210\352\202\302\226\224\202\315\225\241\220\224\202\314')
handle_data('\214\213\215\207\225\266\216\232')
handle_data('\202\252\201C\214\343\202\311\221\261\202\255\202\261\202\306\202\340\202\240\202\351\201B)\201C')
handle_data('\223\235\215\207\212\277\216\232')
handle_data('\202\251\202\347\220\254\202\351\201B\012')
handle_comment(" \012Certain layout and format-control characters defined by ISO/IEC 10646 \012should be ignored when recognizing identifiers; these are defined by the \012classes <nt def='NT-Ignorable'>Ignorable</nt> and <nt def='NT-\012Extender'>Extender</nt>. \012")
handle_data('\012\212e\203N\203\211\203X\202\311\202\250\202\257\202\351\216\300\215\333\202\314\225\266\216\232\202\311\202\302\202\242\202\304\202\314\212\256\221S\202\310\222\350\213`\202\315\201C')
handle_start_tag(titleref, {'href' : 'CharClasses'})
handle_data('\225\266\216\232\203N\203\211\203X')
handle_end_tag(titleref)
handle_data('\202\311\212\326\202\267\202\351\225t\230^\202\311\213K\222\350\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-name', 'term' : 'Name'})
handle_start_tag(term, {})
handle_data('Name')
handle_end_tag(term)
handle_data('\202\315\201C')
handle_data('\216\232')
handle_data('\226\224\202\315\202\242\202\255\202\302\202\251\202\314\213\346\220\330\202\350\225\266\216\232\202\314\210\352\202\302\202\305\216n\202\334\202\350\201C\202\273\202\314\214\343\202\311')
handle_data('\216\232')
handle_data('\201C\220\224\216\232\201C\203n\203C\203t\203\223\201C\211\272\220\374\201C\203R\203\215\203\223\226\224\202\315\203s\203\212\203I\203h\202\252\221\261\202\255(\202\261\202\352\202\347\202\360\226\274\221O\225\266\216\232\202\306\202\242\202\244\201B)\201B')
handle_end_tag(termdef)
handle_data('\225\266\216\232\227\361')
handle_data('"')
handle_start_tag(code, {})
handle_data('xml')
handle_end_tag(code)
handle_data('"\226\224\202\315')
handle_start_tag(code, {})
handle_data("(('X'|'x') ('M'|'m') ('L'|'l'))")
handle_end_tag(code)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\224C\210\323\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\305\216n\202\334\202\351\226\274\221O\202\315\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\214\273\215\335\202\314\224\305\226\224\202\315\217\253\227\210\202\314\224\305\202\305\202\314\225W\217\200\211\273\202\314\202\275\202\337\202\311\227\\\226\361\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(note, {})
handle_data('\012')
handle_start_tag(p, {})
handle_datag\227p\202\267\202\351\225\266\217\221\202\360\215X\220V\202\267\202\351\225K\227v\202\252\220\266\202\266\202\351\211\302\224\\\220\253\202\252\202\240\202\351\201BXML\202\305\215\314\227p\202\267\202\351\226\274\221O\213\363\212\324\202\314\213@\215\\\202\252\201C\213\346\220\330\202\350\216q\202\306\202\265\202\304\216\300\215\333\202\311\203R\203\215\203\223\202\360\216g\227p\202\267\202\351\202\306\202\242\202\244\225\333\217\330\202\315\202\310\202\242\201B\216\226\216\300\217\343\201C\202\261\202\352\202\315\201C\226\274\221O\213\363\212\324\202\314\216\300\214\261\202\314\210\352\202\302\202\306\202\265\202\304\210\310\212O\202\311\202\315\201CXML\202\314\226\274\221O\202\314\222\206\202\305\203R\203\215\203\223\202\360\216g\227p\202\265\202\310\202\242\202\331\202\244\202\252\202\346\202\242\202\261\202\306\202\360\210\323\226\241\202\267\202\351\201B\202\265\202\251\202\265\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\226\274\221O\225\266\216\232\202\306\202\265\202\304\203R\203\215\203\223\202\360\216\363\202\257\225t\202\257\202\351\202\261\202\306\202\252\226]\202\334\202\265\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(note)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(nt, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(nt)
handle_data(' (\226\274\221O')
handle_data('\203g\201[\203N\203\223')
handle_data(')\202\315\201C\226\274\221O\225\266\216\232\202\305\215\\\220\254\202\267\202\351\227\361\202\306\202\267\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\226\274\221O\213y\202\321')
handle_data('\203g\201[\203N\203\223')
handle_end_tag(head)
handle_data('\012')
handle_comment("\012<prod id='NT-MiscName'><lhs>MiscName</lhs>\012<rhs></rhs>\012</prod>")
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-NameChar'})
handle_start_tag(lhs, {})
handle_data('NameChar')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Letter'})
handle_data('Letter')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-Digit'})
handle_data('Digit')
handle_end_tag(nt)
handle_data(' \012')
handle_comment("| <nt def='NT-MiscName'>MiscName</nt>")
handle_data("\012| '.' | '-' | '_' | ':'\012| ")
handle_start_tag(nt, {'def' : 'NT-CombiningChar'})
handle_data('CombiningChar')
handle_end_tag(nt)
handle_data(' \012')
handle_comment(" | <nt def='NT-Ignorable'>Ignorable</nt>  ")
handle_data('\012| ')
handle_start_tag(nt, {'def' : 'NT-Extender'})
handle_data('Extender')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Name'})
handle_start_tag(lhs, {})
handle_data('Name')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-Letter'})
handle_data('Letter')
handle_end_tag(nt)
handle_data(" | '_' | ':')\012(")
handle_start_tag(nt, {'def' : 'NT-NameChar'})
handle_data('NameChar')
handle_end_tag(nt)
handle_data(')*')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Names'})
handle_start_tag(lhs, {})
handle_data('Names')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \012(')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(')*')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Nmtoken'})
handle_start_tag(lhs, {})
handle_data('Nmtoken')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-NameChar'})
handle_data('NameChar')
handle_end_tag(nt)
handle_data(')+')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Nmtokens'})
handle_start_tag(lhs, {})
handle_data('Nmtokens')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(nt)
handle_data(' (')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(nt)
handle_data(')*')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203\212\203e\203\211\203\213')
handle_data('\203f\201[\203^\202\315\201C\210\370\227p\225\204\202\305\210\315\202\334\202\352\202\275')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306\202\265\201C\202\273\202\314\227\361\202\314\213\346\220\330\202\350\216q\202\306\202\265\202\304\216g\227p\202\267\202\351\210\370\227p\225\204\202\315\212\334\202\334\202\310\202\242\201B')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\315\201C\223\340\225\224\216\300\221\314(')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data(')\201C\221\256\220\253\222l(')
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data(')\201C\212O\225\224')
handle_data('\216\257\225\312\216q')
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-SystemLiteral'})
handle_data('SystemLiteral')
handle_end_tag(nt)
handle_data(')\202\314\223\340\227e\202\314\216w\222\350\202\311\216g\227p\202\267\202\351\201B\226\332\223I\202\311\202\346\202\301\202\304\202\315\201C')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\221S\221\314\202\360\201C\202\273\202\314\222\206\202\314')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\221\226\215\270\202\360\215s\202\310\202\355\202\270\202\311\201C\203X\203L\203b\203v\202\267\202\351\202\261\202\306\202\252\202\240\202\351(')
handle_start_tag(nt, {'def' : 'NT-SkipLit'})
handle_data('SkipLit')
handle_end_tag(nt)
handle_data('\201B)\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203\212\203e\203\211\203\213')
handle_end_tag(head)
handle_data('\012')
handle_comment(' is marked section end legal in entity values etc.?\012James says yes.  Handbook page 392, sec. 10.4 seems to me to say no. \012If James is right, leave as is.  Otherwise, uncomment\012the next comment and ... \012')
handle_data('\012')
handle_comment('\012<prod id=\'NT-EntityValue\'><lhs>EntityValue</lhs>\012<rhs>\' " \' \012(([^%&amp;"] \012| <nt def=\'NT-PEReference\'>PEReference</nt> \012| <nt def=\'NT-Reference\'>Reference</nt>)*\012- (<nt def=\'NT-Char\'>Char</nt>* \']]&gt;\' <nt def=\'NT-char\'>Char</nt>*))\012\' " \' \012</rhs>\012<rhs>|&nbsp; \012" \' " \012(([^%&amp;\'] \012| <nt def=\'NT-PEReference\'>PEReference</nt> \012| <nt def=\'NT-Reference\'>Reference</nt>)* \012- (<nt def=\'NT-Char\'>Char</nt>* \']]&gt;\' <nt def=\'NT-char\'>Char</nt>*))\012" \' "</rhs>\012</prod>\012<prod id=\'NT-AttValue\'><lhs>AttValue</lhs>\012<rhs>\'"\' \012(([^&lt;&amp;"] \012| <nt def=\'NT-Reference\'>Reference</nt>)* \012- (<nt def=\'NT-Char\'>Char</nt>* \']]&gt;\' <nt def=\'NT-char\'>Char</nt>*))\012\' " \' \012</rhs>\012<rhs>|&nbsp; \012" \' " \012(([^&lt;&amp;\'] \012| <nt def=\'NT-Reference\'>Reference</nt>)* \012- (<nt def=\'NT-Char\'>Char</nt>* \']]&gt;\' <nt def=\'NT-char\'>Char</nt>*))\012" \' "</rhs>\012<wfc def="CleanAttrVals"/>\012</prod>\012')
handle_data('\012')
handle_comment(' ... and comment out the following, down to ... ')
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-EntityValue'})
handle_start_tag(lhs, {})
handle_data('EntityValue')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('\' " \' \012([^%')
handle_data('&')
handle_data('"] \012| ')
handle_start_tag(nt, {'def' : 'NT-PEReference'})
handle_data('PEReference')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-Reference'})
handle_data('Reference')
handle_end_tag(nt)
handle_data(')*\012\' " \' \012')
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('|')
handle_data('\240')
handle_data(' \012" \' " \012([^%')
handle_data('&')
handle_data("'] \012| ")
handle_start_tag(nt, {'def' : 'NT-PEReference'})
handle_data('PEReference')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-Reference'})
handle_data('Reference')
handle_end_tag(nt)
handle_data(')* \012" \' "')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-AttValue'})
handle_start_tag(lhs, {})
handle_data('AttValue')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('\' " \' \012([^')
handle_data('<')
handle_data('&')
handle_data('"] \012| ')
handle_start_tag(nt, {'def' : 'NT-Reference'})
handle_data('Reference')
handle_end_tag(nt)
handle_data(')* \012\' " \' \012')
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('|')
handle_data('\240')
handle_data(' \012" \' " \012([^')
handle_data('<')
handle_data('&')
handle_data("'] \012| ")
handle_start_tag(nt, {'def' : 'NT-Reference'})
handle_data('Reference')
handle_end_tag(nt)
handle_data(')* \012" \' "')
handle_end_tag(rhs)
handle_data('\012')
handle_comment('<wfc def="WF-Attvaldelim"/>')
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_comment(' ... down to here. ')
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-SystemLiteral'})
handle_start_tag(lhs, {})
handle_data('SystemLiteral')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-SkipLit'})
handle_data('SkipLit')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_comment(' <prod id="NT-URIchar"><lhs>URIchar</lhs>\012<rhs><com>See <loc href="http://www.w3.org/XXX">XXX</loc></com>\012</rhs></prod>\012')
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PubidLiteral'})
handle_start_tag(lhs, {})
handle_data('PubidLiteral')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('\' " \' ')
handle_start_tag(nt, {'def' : 'NT-PubidChar'})
handle_data('PubidChar')
handle_end_tag(nt)
handle_data('* \012\' " \' \012| " \' " (')
handle_start_tag(nt, {'def' : 'NT-PubidChar'})
handle_data('PubidChar')
handle_end_tag(nt)
handle_data(' - " \' ")* " \' "')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PubidChar'})
handle_start_tag(lhs, {})
handle_data('PubidChar')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('#x20 | #xD | #xA \012|')
handle_data('\240')
handle_data('[a-zA-Z0-9]\012|')
handle_data('\240')
handle_data("[-'()+,./:=?]")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-SkipLit'})
handle_start_tag(lhs, {})
handle_data('SkipLit')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('(\' " \' [^"]* \' " \') \012|')
handle_data('\240')
handle_data('(" \' " [^\']* " \' ")')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_comment(' alternate form, making ms end illegal: ')
handle_data('\012')
handle_comment(' \012<prod id="NT-SkipLit"><lhs>SkipLit</lhs>\012<rhs>(\' " \' ([^"]* - ([^"]* \']]&gt;\' [^"]*)) \' " \') \012|&nbsp;(" \' " ([^\']* - ([^\']* \']]&gt;\' [^\']*)) " \' ")</rhs>\012</prod>\012')
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_comment('\012<wfcnote id="WF-Attvaldelim">\012<head>Delimiters in Attribute Values</head>\012<p>After the expansion of character and entity references,\012an attribute value must not contain a "<code>&lt;</code>" \012or "<code>&amp;</code>" character unless that character was \012introduced by the expansion of a character reference \012or one of the entities &magicents;.</p>\012</wfcnote>')
handle_data('\012')
handle_comment('\012This is not quite right:  &lt; should be legal, should it not?\012Suppress this WFC until we get it right.\012')
handle_data('\012')
handle_comment(' Henry Thompson suggests (in substance, not form: the wording needs\012to be clarified):\012"Cooked Attribute values must not contain &lt; &amp; or the\012quote which closed their uncooked literal,\012unless arising from the expansion of a character reference or\012magic reference\012directly contained in their uncooked literal."\012I\'m not sure I agree with this rule, but it\'s at least coherent,\012which is more than I can say for my attempt.\012')
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'syntax'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232\203f\201[\203^\213y\202\321')
handle_data('\203}\201[\203N\225t\202\257')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-text'})
handle_data('\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-chardata'})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(termref)
handle_data('\213y\202\321')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\252\215\254\215\335\202\267\202\351\202\340\202\314\202\306\202\265\202\304\215\\\220\254\202\267\202\351\201B')
handle_start_tag(termdef, {'id' : 'dt-markup', 'term' : 'Markup'})
handle_start_tag(term, {})
handle_data('\203}\201[\203N\225t\202\257')
handle_end_tag(term)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-etag'})
handle_data('\217I\227\271\203^\203O')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-empty'})
handle_data('\213\363\227v\221f')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-entref'})
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-charref'})
handle_data('\225\266\216\232\216Q\217\306')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-comment'})
handle_data('\203R\203\201\203\223\203g')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-cdsection'})
handle_data('CDATA\203Z\203N\203V\203\207\203\223')
handle_end_tag(termref)
handle_data(' \202\314\213\346\220\330\202\350\216q\201C')
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('\225\266\217\221\214^\220\351\214\276')
handle_end_tag(termref)
handle_data('\213y\202\321')
handle_start_tag(termref, {'def' : 'dt-pi'})
handle_data('\217\210\227\235\226\275\227\337')
handle_end_tag(termref)
handle_data('\202\314\214`\202\360\216\346\202\351\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-chardata', 'term' : 'Character Data'})
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\305\202\315\202\310\202\242\202\267\202\327\202\304\202\314\203e\203L\203X\203g\202\315\201C\225\266\217\221\202\314')
handle_start_tag(term, {})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(term)
handle_data('\202\360\215\\\220\254\202\267\202\351\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203A\203\223\203p\203T\203\223\203h\225\266\216\232 (')
handle_data('&')
handle_data(')\213y\202\321')
handle_data('\225s\223\231\215\206(\217\254\202\310\202\350)')
handle_data(' (')
handle_data('<')
handle_data(')\202\315\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\213\346\220\330\202\350\216q\202\306\202\265\202\304\201C\226\224\202\315')
handle_start_tag(termref, {'def' : 'dt-comment'})
handle_data('\203R\203\201\203\223\203g')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-pi'})
handle_data('\217\210\227\235\226\275\227\337')
handle_end_tag(termref)
handle_data('\216\341\202\265\202\255\202\315')
handle_start_tag(termref, {'def' : 'dt-cdsection'})
handle_data('CDATA\203Z\203N\203V\203\207\203\223')
handle_end_tag(termref)
handle_data('\223\340\202\305\216g\227p\202\267\202\351\217\352\215\207\202\311')
handle_start_tag(emph, {})
handle_data('\202\276\202\257')
handle_end_tag(emph)
handle_data('\201C\202\273\202\314\202\334\202\334\202\314\214`\202\305\217o\214\273\202\265\202\304\202\346\202\242\201B\202\261\202\352\202\347\202\314\225\266\216\232\202\315\201C\223\340\225\224\216\300\221\314\220\351\214\276\202\314')
handle_start_tag(termref, {'def' : 'dt-litentval'})
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l')
handle_end_tag(termref)
handle_data('\223\340\202\311\213L\217q\202\265\202\304\202\340\202\346\202\242\201B \217\332\202\265\202\255\202\315\201C')
handle_start_tag(titleref, {'href' : 'wf-entities'})
handle_data('\220\256\214`\216\256')
handle_data('\202\314\216\300\221\314')
handle_end_tag(titleref)
handle_data('\202\311\212\326\202\267\202\351\213K\222\350\202\360\216Q\217\306\201B')
handle_comment(' FINAL EDIT:  restore internal entity decl or leave it out. ')
handle_data('\202\261\202\352\202\347\202\314\225\266\216\232\202\252\221\274\202\314\225\224\225\252\202\305\225K\227v\202\310\217\352\215\207\201C\220\224\222l\202\311\202\346\202\351\225\266\216\232\216Q\217\306\226\224\202\315')
handle_data('\225\266\216\232\227\361')
handle_data('"')
handle_start_tag(code, {})
handle_data('&')
handle_data('amp;')
handle_end_tag(code)
handle_data('"\213y\202\321')
handle_data('\225\266\216\232\227\361')
handle_data('"')
handle_start_tag(code, {})
handle_data('&')
handle_data('lt;')
handle_end_tag(code)
handle_data('"\202\360\216g\227p\202\265\201C')
handle_start_tag(termref, {'def' : 'dt-escape'})
handle_data('\225\312\210\265\202\242')
handle_end_tag(termref)
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_data('\225s\223\231\215\206(\221\345\202\310\202\350)')
handle_data(' (>) \202\315\201C')
handle_data('\225\266\216\232\227\361')
handle_data('"')
handle_start_tag(code, {})
handle_data('&')
handle_data('gt;')
handle_end_tag(code)
handle_data('"\202\360\216g\227p\202\265\202\304\225\\\214\273\202\265\202\304\202\340\202\346\202\242\201B\223\340\227e\202\314\222\206\202\305\227\361"')
handle_start_tag(code, {})
handle_data(']]')
handle_data('>')
handle_end_tag(code)
handle_data('"\202\360\216g\227p\202\267\202\351\202\306\202\253\202\315\201C\202\273\202\352\202\252\201C')
handle_start_tag(termref, {'def' : 'dt-cdsection'})
handle_data('CDATA\203Z\203N\203V\203\207\203\223')
handle_end_tag(termref)
handle_data('\202\314\217I\227\271\202\360')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\265\202\310\202\242\214\300\202\350\201C')
handle_start_tag(termref, {'def' : 'dt-compat'})
handle_data('\214\335\212\267\220\253\202\314\202\275\202\337')
handle_end_tag(termref)
handle_data('\201C"')
handle_start_tag(code, {})
handle_data('&')
handle_data('gt;')
handle_end_tag(code)
handle_data('"\226\224\202\315\225\266\216\232\216Q\217\306\202\360\216g\227p\202\265\201C')
handle_data('\225\312\210\265\202\242')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\227v\221f\202\314\223\340\227e\202\305\202\315\201C\225\266\216\232\203f\201[\203^\202\315\201C\202\242\202\251\202\310\202\351')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\212J\216n\213\346\220\330\202\350\216q\202\360\212\334\202\334\202\310\202\242\224C\210\323\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306\202\267\202\351\201BCDATA\203Z\203N\203V\203\207\203\223\202\305\202\315\201C\225\266\216\232\203f\201[\203^\202\306\202\315\201CCDATA\203Z\203N\203V\203\207\203\223\202\314\217I\227\271\213\346\220\330\202\350\216q"')
handle_start_tag(code, {})
handle_data(']]')
handle_data('>')
handle_end_tag(code)
handle_data('"\202\360\212\334\202\334\202\310\202\242\224C\210\323\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\221\256\220\253\222l\202\311')
handle_data('\210\352\217d\210\370\227p\225\204')
handle_data('\213y\202\321')
handle_data('\223\361\217d\210\370\227p\225\204')
handle_data('\202\360\212\334\202\336\202\275\202\337\202\311\202\315\201C\203A\203|\203X\203g\203\215\203t\203B\226\224\202\315')
handle_data('\210\352\217d\210\370\227p\225\204')
handle_data('(\') \202\315\201C"')
handle_start_tag(code, {})
handle_data('&')
handle_data('apos;')
handle_end_tag(code)
handle_data('"\202\306\202\265\202\304\225\\\214\273\202\265\201C')
handle_data('\223\361\217d\210\370\227p\225\204')
handle_data('(")\202\315\201C"')
handle_start_tag(code, {})
handle_data('&')
handle_data('quot;')
handle_end_tag(code)
handle_data('"\202\306\202\265\202\304\225\\\214\273\202\267\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-CharData'})
handle_data('\012')
handle_start_tag(lhs, {})
handle_data('CharData')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('[^')
handle_data('<')
handle_data('&')
handle_data(']* - ([^')
handle_data('<')
handle_data('&')
handle_data("]* ']]")
handle_data('>')
handle_data("' [^")
handle_data('<')
handle_data('&')
handle_data(']*)')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012 \012')
handle_start_tag(div2, {'id' : 'sec-comments'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203R\203\201\203\223\203g')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-comment', 'term' : 'Comment'})
handle_start_tag(term, {})
handle_data('\203R\203\201\203\223\203g')
handle_end_tag(term)
handle_data('\202\315\201C\221\274\202\314')
handle_start_tag(termref, {'def' : 'dt-markup'})
handle_data('\203}\201[\203N\225t\202\257')
handle_end_tag(termref)
handle_data('\202\314\212O\202\310\202\347\202\316\201C\225\266\217\221\202\314\202\307\202\261\202\311\214\273\202\352\202\304\202\340\202\346\202\242\201B\202\263\202\347\202\311\201C\225\266\217\221\214^\220\351\214\276\223\340\202\305\201C\225\266\226@\202\252\213\226\202\267\217\352\217\212\202\311\214\273\202\352\202\304\202\340\202\346\202\242\201B\012')
handle_comment(' TB\012except in a <termref def="dt-cdsection">CDATA section</termref>, i.e. within\012<termref def="dt-elemcontent">element content</termref>, in \012<termref def="dt-mixed">mixed content</termref>, or in the prolog.  They must\012not occur within declarations or tags. ')
handle_data('\012\203R\203\201\203\223\203g\202\315\201C\225\266\217\221\202\314')
handle_start_tag(termref, {'def' : 'dt-chardata'})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(termref)
handle_data('\202\314\210\352\225\224\202\305\202\315\202\310\202\242\201BXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\252\203R\203\201\203\223\203g\202\314\203e\203L\203X\203g\202\360\216\346\202\350\217o\202\267\202\261\202\306\202\360\211\302\224\\\202\306\202\265\202\304\202\340\202\346\202\242\202\252\201C\202\273\202\244\202\265\202\310\202\255\202\306\202\340\202\346\202\242\201B\012')
handle_start_tag(termref, {'def' : 'dt-compat'})
handle_data('\214\335\212\267\220\253\202\314\202\275\202\337')
handle_end_tag(termref)
handle_data('\201C')
handle_data('\225\266\216\232\227\361')
handle_data('"')
handle_start_tag(code, {})
handle_data('--')
handle_end_tag(code)
handle_data('" \201i')
handle_data('\223\361\230A\203n\203C\203t\203\223')
handle_data('\201j\202\315\201C\203R\203\201\203\223\203g\223\340\202\305\214\273\202\352\202\304\202\315\202\310\202\347\202\310\202\242\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203R\203\201\203\223\203g')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Comment'})
handle_start_tag(lhs, {})
handle_data('Comment')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("!--'\012((")
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data(" - '-') \012| ('-' (")
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data(" - '-')))* \012'-->'")
handle_end_tag(rhs)
handle_data('\012')
handle_comment("\012<rhs>'&lt;!&como;' \012(<nt def='NT-Char'>Char</nt>* - \012(<nt def='NT-Char'>Char</nt>* '&comc;' <nt def='NT-Char'>Char</nt>*)) \012'&comc;&gt;'</rhs> ")
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203R\203\201\203\223\203g\202\314\227\341\202\360\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('!')
handle_data('--')
handle_data(' declarations for ')
handle_data('<')
handle_data('head> ')
handle_data('&')
handle_data(' ')
handle_data('<')
handle_data('body> ')
handle_data('--')
handle_data('>')
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'sec-pi'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\217\210\227\235\226\275\227\337')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-pi', 'term' : 'Processing instruction'})
handle_start_tag(term, {})
handle_data('\217\210\227\235\226\275\227\337')
handle_end_tag(term)
handle_data('(PI)\202\311\202\346\202\301\202\304\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\314\202\275\202\337\202\314\226\275\227\337\202\360\225\266\217\221\202\311\223\374\202\352\202\351\202\261\202\306\202\252\202\305\202\253\202\351\201B\012 \012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\217\210\227\235\226\275\227\337')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PI'})
handle_start_tag(lhs, {})
handle_data('PI')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("?' ")
handle_start_tag(nt, {'def' : 'NT-PITarget'})
handle_data('PITarget')
handle_end_tag(nt)
handle_data(' \012(')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012(')
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data('* - \012(')
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data('* ')
handle_data("'?>'")
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data('*)))?\012')
handle_data("'?>'")
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PITarget'})
handle_start_tag(lhs, {})
handle_data('PITarget')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(" - \012(('X' | 'x') ('M' | 'm') ('L' | 'l'))")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_end_tag(termdef)
handle_data('\012PI\202\315\201C\225\266\217\221\202\314')
handle_start_tag(termref, {'def' : 'dt-chardata'})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(termref)
handle_data('\202\314\210\352\225\224\202\305\202\315\202\310\202\242\202\252\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\223n\202\263\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201BPI\202\315\201C\226\275\227\337\202\252\223n\202\263\202\352\202\351')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\360')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\202\275\202\337\202\311\216g\227p\202\267\202\351')
handle_data('\203^\201[\203Q\203b\203g')
handle_data(' (')
handle_start_tag(nt, {'def' : 'NT-PITarget'})
handle_data('PITarget')
handle_end_tag(nt)
handle_data(') \202\305\216n\202\334\202\351\201B')
handle_data('\203^\201[\203Q\203b\203g')
handle_data('\226\274 "')
handle_start_tag(code, {})
handle_data('XML')
handle_end_tag(code)
handle_data('"\201C"')
handle_start_tag(code, {})
handle_data('xml')
handle_end_tag(code)
handle_data('"\202\310\202\307\202\315\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\214\273\215\335\202\314\224\305\226\224\202\315\217\253\227\210\202\314\224\305\202\314\213K\212i\211\273\227p\202\311\227\\\226\361\202\267\202\351\201BXML\202\314')
handle_start_tag(termref, {'def' : 'dt-notation'})
handle_data('\213L\226@')
handle_end_tag(termref)
handle_data('\213@\215\\\202\360\201CPI\202\314')
handle_data('\203^\201[\203Q\203b\203g')
handle_data('\202\360\220\351\214\276\202\267\202\351\202\275\202\337\202\311\216g\227p\202\265\202\304\202\340\202\346\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012 \012')
handle_start_tag(div2, {'id' : 'sec-cdata-sect'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('CDATA\203Z\203N\203V\203\207\203\223')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-cdsection', 'term' : 'CDATA Section'})
handle_start_tag(term, {})
handle_data('CDATA\203Z\203N\203V\203\207\203\223')
handle_end_tag(term)
handle_data('\202\315\201C\225\266\216\232\203f\201[\203^\202\252\217o\214\273\202\267\202\351\202\306\202\261\202\353\202\305\202\240\202\352\202\316\201C\202\307\202\261\202\311\217o\214\273\202\265\202\304\202\340\202\346\202\242\201B\202\261\202\352\202\315\201C\202\273\202\244\202\305\202\310\202\257\202\352\202\316\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\306\202\265\202\304\224F\216\257\202\267\202\351\225\266\216\232\202\360\212\334\202\336\201C\203e\203L\203X\203g\202\314\213\346\211\346\202\360')
handle_data('\225\312\210\265\202\242')
handle_data('\202\267\202\351\202\314\202\311\216g\227p\202\267\202\351\201BCDATA\203Z\203N\203V\203\207\203\223\202\315\201C')
handle_data('\225\266\216\232\227\361')
handle_data('"')
handle_start_tag(code, {})
handle_data('<')
handle_data('![CDATA[')
handle_end_tag(code)
handle_data('"\202\305\216n\202\334\202\350\201C')
handle_data('\225\266\216\232\227\361')
handle_data('\012"')
handle_start_tag(code, {})
handle_data(']]')
handle_data('>')
handle_end_tag(code)
handle_data('"\202\305\217I\202\355\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('CDATA\203Z\203N\203V\203\207\203\223')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-CDSect'})
handle_start_tag(lhs, {})
handle_data('CDSect')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-CDStart'})
handle_data('CDStart')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-CData'})
handle_data('CData')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-CDEnd'})
handle_data('CDEnd')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-CDStart'})
handle_start_tag(lhs, {})
handle_data('CDStart')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("![CDATA['")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-CData'})
handle_start_tag(lhs, {})
handle_data('CData')
handle_end_tag(lhs)
handle_data('\012\012')
handle_start_tag(rhs, {})
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data('* - \012(')
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data("* ']]")
handle_data('>')
handle_data("' ")
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data('*))\012')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-CDEnd'})
handle_start_tag(lhs, {})
handle_data('CDEnd')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("']]")
handle_data('>')
handle_data("'")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\012CDATA\203Z\203N\203V\203\207\203\223\223\340\202\305\202\315\201C\227\361')
handle_start_tag(nt, {'def' : 'NT-CDEnd'})
handle_data('CDEnd')
handle_end_tag(nt)
handle_data('\202\276\202\257\202\360')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\306\202\265\202\304\224F\216\257\202\267\202\351\202\314\202\305\201C')
handle_data('\225s\223\231\215\206(\217\254\202\310\202\350)')
handle_data('\213y\202\321\203A\203\223\203p\203T\203\223\203h\202\315\201C\202\273\202\314')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\214`\216\256\202\305\217o\214\273\202\265\202\304\202\346\202\242\201B\202\273\202\352\202\347\202\315\201C"')
handle_start_tag(code, {})
handle_data('&')
handle_data('lt;')
handle_end_tag(code)
handle_data('"\213y\202\321"')
handle_start_tag(code, {})
handle_data('&')
handle_data('amp;')
handle_end_tag(code)
handle_data('"\202\360\216g\227p\202\265\202\304')
handle_data('\225\312\210\265\202\242')
handle_data('\202\267\202\351\225K\227v\202\315\202\310\202\242\201BCDATA\203Z\203N\203V\203\207\203\223\202\315\201C\223\374\202\352\216q\202\311\202\315\202\305\202\253\202\310\202\242\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('"')
handle_start_tag(code, {})
handle_data('<')
handle_data('greeting>')
handle_end_tag(code)
handle_data('"\213y\202\321"')
handle_start_tag(code, {})
handle_data('<')
handle_data('/greeting>')
handle_end_tag(code)
handle_data('"\202\360\201C')
handle_start_tag(termref, {'def' : 'dt-markup'})
handle_data('\203}\201[\203N\225t\202\257')
handle_end_tag(termref)
handle_data('\202\305\202\315\202\310\202\255\201C')
handle_start_tag(termref, {'def' : 'dt-chardata'})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(termref)
handle_data('\202\306\202\265\202\304\224F\216\257\202\267\202\351CDATA\203Z\203N\203V\203\207\203\223\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('![CDATA[')
handle_data('<')
handle_data('greeting>Hello, world!')
handle_data('<')
handle_data('/greeting>]]')
handle_data('>')
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012 \012')
handle_start_tag(div2, {'id' : 'sec-prolog-dtd'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\217\221\202\253')
handle_data('\213y\202\321\225\266\217\221\214^\220\351\214\276')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-xmldecl', 'term' : 'XML Declaration'})
handle_data('XML\225\266\217\221\202\315\201C\216g\227p\202\267\202\351XML\202\314')
handle_data('\224\305')
handle_data('\202\360\216w\222\350\202\267\202\351')
handle_start_tag(term, {})
handle_data('XML\220\351\214\276')
handle_end_tag(term)
handle_data('\202\305\216n\202\337\202\304\202\340\202\346\202\255\201C\226\224\202\273\202\244\202\267\202\351\202\314\202\252\226]\202\334\202\265\202\242\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\202\261\202\314')
handle_data('\224\305')
handle_data('\202\311\223K\215\207\202\267\202\351\202\261\202\306\202\360\216\246\202\267\202\275\202\337\202\311\202\315\201C')
handle_data('\224\305')
handle_data('\224\324\215\206 "')
handle_start_tag(code, {})
handle_data('1.0')
handle_end_tag(code)
handle_data('" \202\360\216g\227p\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\240\202\351\225\266\217\221\202\252\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\202\261\202\314')
handle_data('\224\305')
handle_data('\202\311\223K\215\207\202\265\202\310\202\242\202\306\202\253\201C\222l"')
handle_start_tag(code, {})
handle_data('1.0')
handle_end_tag(code)
handle_data('"\202\360\216g\227p\202\267\202\351\202\314\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\267\202\351\201B\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\215\241\214\343\202\314')
handle_data('\224\305')
handle_data('\202\311"')
handle_start_tag(code, {})
handle_data('1.0')
handle_end_tag(code)
handle_data('"\210\310\212O\202\314\222l\202\360\225t\227^\202\267\202\351\202\261\202\306\202\252\201CXML\215\354\213\306\203O\203\213\201[\203v\202\314\210\323\220}\202\276\202\252\201CXML\202\314\217\253\227\210\202\314')
handle_data('\224\305')
handle_data('\202\360\215\354\220\254\202\267\202\351\202\261\202\306\202\314\212m\226\361\202\360\216\246\202\267\202\355\202\257\202\305\202\315\202\310\202\255\201C\215\354\220\254\202\265\202\275\202\306\202\265\202\304\202\340\201C\224\324\215\206\225t\202\257\202\311\202\302\202\242\202\304\201C\223\301\222\350\202\314\225\373\226@\202\360\216g\227p\202\267\202\351\202\261\202\306\202\314\212m\226\361\202\360\216\246\202\267\202\355\202\257\202\305\202\340\202\310\202\242\201B\217\253\227\210\202\314')
handle_data('\224\305')
handle_data('\202\314\211\302\224\\\220\253\202\360\217\234\212O\202\265\202\310\202\242\202\314\202\305\201C\225K\227v\202\310\217\352\215\207\201C\216\251\223\256\223I\202\310')
handle_data('\224\305')
handle_data('\202\314\224F\216\257\202\360\211\302\224\\\202\306\202\267\202\351\216\350\222i\202\306\202\265\202\304\201C\202\261\202\314\215\\\220\254\216q\202\360\222\361\213\237\202\267\202\351\201B')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\203T\203|\201[\203g\202\265\202\304\202\242\202\310\202\242')
handle_data('\224\305')
handle_data('\202\305\203\211\203x\203\213\225t\202\257\202\265\202\275\225\266\217\221\202\360\216\363\202\257\216\346\202\301\202\275\202\306\202\253\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\360\222\312\222m\202\265\202\304\202\340\202\346\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\225\266\217\221\223\340\202\314')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\213@\224\\\202\315\201C\213L\211\257\215\\\221\242\213y\202\321\230_\227\235\215\\\221\242\202\360\213L\217q\202\267\202\351\202\261\202\306\201C\225\300\202\321\202\311\221\256\220\253\213y\202\321\221\256\220\253\222l\202\314\221\316\202\360\230_\227\235\215\\\221\242\202\311\212\326\230A\202\303\202\257\202\351\202\261\202\306\202\311\202\240\202\351\201BXML\202\315\201C\230_\227\235\215\\\221\242\202\311\202\302\202\242\202\304\202\314\220\247\226\361\217\360\214\217\202\360\222\350\213`\202\267\202\351\202\275\202\337\201C\213y\202\321\202\240\202\347\202\251\202\266\202\337\222\350\213`\202\263\202\352\202\275\213L\211\257\222P\210\312\202\360\216g\227p\202\305\202\253\202\351\202\275\202\337\202\314\213@\215\\\202\306\202\265\202\304\201C')
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('\225\266\217\221\214^\220\351\214\276')
handle_end_tag(termref)
handle_data('\202\360\222\361\213\237\202\267\202\351\201B')
handle_comment(' old\012The function of the markup in an XML document is to describe its\012storage and logical structures, and associate attribute-value pairs with the\012logical structure.\012XML provides a\012mechanism, the <termref def="dt-doctype">document type declaration</termref>, \012to\012define constraints on that logical structure and to support the use of\012predefined storage units. ')
handle_start_tag(termdef, {'id' : 'dt-valid', 'term' : 'Validity'})
handle_data('XML\225\266\217\221\202\252')
handle_start_tag(term, {})
handle_data('\221\303\223\226')
handle_end_tag(term)
handle_data('\202\306\202\315\201C\225\266\217\221\214^\220\351\214\276\202\360\202\340\202\277\201C\202\273\202\314\225\266\217\221\214^\220\351\214\276\202\311\216\246\202\267\220\247\226\361\217\360\214\217\202\360\226\236\202\275\202\267\202\261\202\306\202\306\202\267\202\351\201B\012')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\266\217\221\214^\220\351\214\276\202\315\201C\225\266\217\221\202\314\215\305\217\211\202\314')
handle_start_tag(termref, {'def' : 'dt-element'})
handle_data('\227v\221f')
handle_end_tag(termref)
handle_data('\202\314\221O\202\311\214\273\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_start_tag(scrap, {'id' : 'xmldoc', 'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\217\221\202\253')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '6', 'pcw4' : '17.5', 'pcw5' : '9'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-prolog'})
handle_start_tag(lhs, {})
handle_data('prolog')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-XMLDecl'})
handle_data('XMLDecl')
handle_end_tag(nt)
handle_data('? \012')
handle_start_tag(nt, {'def' : 'NT-Misc'})
handle_data('Misc')
handle_end_tag(nt)
handle_data('* \012(')
handle_start_tag(nt, {'def' : 'NT-doctypedecl'})
handle_data('doctypedecl')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-Misc'})
handle_data('Misc')
handle_end_tag(nt)
handle_data('*)?')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-XMLDecl'})
handle_start_tag(lhs, {})
handle_data('XMLDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("?xml'")
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-VersionInfo'})
handle_data('VersionInfo')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-EncodingDecl'})
handle_data('EncodingDecl')
handle_end_tag(nt)
handle_data('? \012')
handle_start_tag(nt, {'def' : 'NT-SDDecl'})
handle_data('SDDecl')
handle_end_tag(nt)
handle_data('? \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('? \012')
handle_data("'?>'")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-VersionInfo'})
handle_start_tag(lhs, {})
handle_data('VersionInfo')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(" 'version' ")
handle_start_tag(nt, {'def' : 'NT-Eq'})
handle_data('Eq')
handle_end_tag(nt)
handle_data(' \012(\'"')
handle_start_tag(nt, {'def' : 'NT-VersionNum'})
handle_data('VersionNum')
handle_end_tag(nt)
handle_data('"\' \012| "\'')
handle_start_tag(nt, {'def' : 'NT-VersionNum'})
handle_data('VersionNum')
handle_end_tag(nt)
handle_data('\'")')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Eq'})
handle_start_tag(lhs, {})
handle_data('Eq')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '=' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('?')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-VersionNum'})
handle_data('\012')
handle_start_tag(lhs, {})
handle_data('VersionNum')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("([a-zA-Z0-9_.:] | '-')+")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Misc'})
handle_start_tag(lhs, {})
handle_data('Misc')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Comment'})
handle_data('Comment')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-PI'})
handle_data('PI')
handle_end_tag(nt)
handle_data(' | \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012\227\341\202\246\202\316\201C\216\237\202\311\216\246\202\267\212\256\221S\202\310XML\225\266\217\221\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-wellformed'})
handle_data('\220\256\214`\216\256')
handle_end_tag(termref)
handle_data('\202\305\202\240\202\351\202\252')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226')
handle_end_tag(termref)
handle_data('\202\305\202\315\202\310\202\242\201B\012')
handle_start_tag(eg, {})
handle_data('<?xml version="1.0"?>\012<greeting>Hello, world!</greeting>\012')
handle_end_tag(eg)
handle_data('\012\216\237\202\314\225\266\217\221\202\340\223\257\227l\202\306\202\267\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('<greeting>Hello, world!</greeting>\012')
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-doctype', 'term' : 'Document Type Declaration'})
handle_data('\012XML\202\314')
handle_start_tag(term, {})
handle_data('\225\266\217\221\214^\220\351\214\276')
handle_end_tag(term)
handle_data('\202\315\201C\202\240\202\351\225\266\217\221\203N\203\211\203X\202\314\202\275\202\337\202\314\225\266\226@\202\360\222\361\213\237\202\267\202\351')
handle_start_tag(termref, {'def' : 'dt-markupdecl'})
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276')
handle_end_tag(termref)
handle_data('\202\360\212\334\202\336\202\251\201C\226\224\202\315\216Q\217\306\202\267\202\351\201B\202\261\202\314\225\266\226@\202\360\201C\225\266\217\221\214^\222\350\213`\226\224\202\315')
handle_start_tag(term, {})
handle_data('DTD')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\201B\225\266\217\221\214^\220\351\214\276\202\315\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\360\212\334\202\361\202\276\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('(\223\301\225\312\202\310\216\355\227\336\202\314')
handle_start_tag(termref, {'def' : 'dt-extent'})
handle_data('\212O\225\224\216\300\221\314')
handle_end_tag(termref)
handle_data(')\202\360\216Q\217\306\202\305\202\253\201C\226\224\202\315\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\311\222\274\220\332')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\360\212\334\202\336\202\261\202\306\202\340\202\305\202\253\202\351\201B\202\263\202\347\202\311\201C\202\273\202\314\227\274\225\373\202\340\211\302\224\\\202\306\202\267\202\351\201B\202\240\202\351\225\266\217\221\202\314DTD\202\315\201C\227\274\225\373\202\314')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\360\202\334\202\306\202\337\202\275\202\340\202\314\202\306\202\265\202\304\215\\\220\254\202\267\202\351\201B')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-markupdecl', 'term' : 'markup declaration'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276')
handle_end_tag(term)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-eldecl'})
handle_data('\227v\221f\214^\220\351\214\276')
handle_end_tag(termref)
handle_data('\201C ')
handle_start_tag(termref, {'def' : 'dt-attdecl'})
handle_data('\221\256\220\253\203\212\203X\203g\220\351\214\276')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-entdecl'})
handle_data('\216\300\221\314\220\351\214\276')
handle_end_tag(termref)
handle_data('\226\224\202\315')
handle_start_tag(termref, {'def' : 'dt-notdecl'})
handle_data('\213L\226@\220\351\214\276')
handle_end_tag(termref)
handle_data('\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_data('\216\237\202\311\216\246\202\267')
handle_data('\220\256\214`\216\256')
handle_data('\220\247\226\361\213y\202\321')
handle_data('\221\303\223\226\220\253')
handle_data('\220\247\226\361\202\311\213K\222\350\202\267\202\351\202\252\201C\202\261\202\352\202\347\202\314\220\351\214\276\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-PE'})
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314')
handle_end_tag(termref)
handle_data('\223\340\202\311\221S\221\314\226\224\202\315\210\352\225\224\202\252\212\334\202\334\202\352\202\304\202\340\202\346\202\242\201B\217\332\202\265\202\242\213K\222\350\202\315\201C')
handle_start_tag(titleref, {'href' : 'sec-physical-struct', 'xml-link' : 'simple'})
handle_data('\225\250\227\235\215\\\221\242')
handle_end_tag(titleref)
handle_data('\202\311\212\326\202\267\202\351\213K\222\350\202\360\216Q\217\306\202\314\202\261\202\306\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(scrap, {'id' : 'dtd', 'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\217\221\214^\222\350\213`')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '6', 'pcw4' : '17.5', 'pcw5' : '9'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-doctypedecl'})
handle_start_tag(lhs, {})
handle_data('doctypedecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("!DOCTYPE' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' (')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-ExternalID'})
handle_data('ExternalID')
handle_end_tag(nt)
handle_data(')? \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? ('[' \012(")
handle_start_tag(nt, {'def' : 'NT-markupdecl'})
handle_data('markupdecl')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-PEReference'})
handle_data('PEReference')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(")*\012']' \012")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("?)? '>'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'vc-roottype'})
handle_end_tag(vc)
handle_data('\012')
handle_comment('<vc def="vc-nonnullDTD"/>')
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_comment("\012<prod id='NT-markupdecls'><lhs>markupdecls</lhs>\012<rhs>\012(<nt def='NT-S'>S</nt>?\012<nt def='NT-markupdecl'>markupdecl</nt>\012<nt def='NT-S'>S</nt>?)*\012</rhs></prod>\012")
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-markupdecl'})
handle_start_tag(lhs, {})
handle_data('markupdecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-elementdecl'})
handle_data('elementdecl')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-AttlistDecl'})
handle_data('AttlistDecl')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-EntityDecl'})
handle_data('EntityDecl')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-NotationDecl'})
handle_data('NotationDecl')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-PI'})
handle_data('PI')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-Comment'})
handle_data('Comment')
handle_end_tag(nt)
handle_data('\012')
handle_comment("| <nt def='NT-InternalPERef'>InternalPERef</nt> ")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'vc-PEinMarkupDecl'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'wfc-PEinInternalSubset'})
handle_end_tag(wfc)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_comment('\012<prod id="NT-InternalPERef"><lhs>InternalPERef</lhs>\012<rhs><nt def="NT-PEReference">PEReference</nt></rhs>\012<wfc def="wfc-integraldec"/>\012</prod>\012')
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'vc-roottype'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203\213\201[\203g')
handle_data('\227v\221f\214^')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\225\266\217\221\214^\220\351\214\276\202\311\202\250\202\257\202\351')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C')
handle_data('\203\213\201[\203g')
handle_data('\227v\221f\202\314\214^\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_comment('\012<vcnote id="vc-nonnullDTD">\012<head>Non-null DTD</head>\012<p>\012The internal and external subsets of the DTD must not both\012be empty.\012</p>\012</vcnote>\012')
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'vc-PEinMarkupDecl'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\220\351\214\276\213y\202\321')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\202\252\214\265\226\247\202\311\223\374\202\352\216q\202\360\202\310\202\267\202\261\202\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314')
handle_start_tag(termref, {'def' : 'dt-repltext'})
handle_data('\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\223\340\202\311\202\250\202\242\202\304\201C\214\265\226\247\202\311\223\374\202\352\216q\202\311\202\310\202\301\202\304\202\242\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\302\202\334\202\350\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276(')
handle_start_tag(nt, {'def' : 'NT-markupdecl'})
handle_data('markupdecl')
handle_end_tag(nt)
handle_data(')\202\314\215\305\217\211\226\224\202\315\215\305\214\343\202\314\225\266\216\232\202\252\201C')
handle_start_tag(termref, {'def' : 'dt-PERef'})
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(termref)
handle_data('\202\314\221\316\217\333\202\306\202\310\202\351')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\311\212\334\202\334\202\352\202\352\202\316\201C\227\274\225\373\202\306\202\340\223\257\202\266')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\311\212\334\202\334\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(wfcnote, {'id' : 'wfc-PEinInternalSubset'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\223\340\202\314')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('DTD\202\314\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\305\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-PERef'})
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\252\217o\214\273\211\302\224\\\202\310\217\352\217\212\202\276\202\257\202\311\217o\214\273\202\305\202\253\202\351\201B')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\223\340\202\311\202\315\217o\214\273\202\305\202\253\202\310\202\242(\202\261\202\314\220\247\226\361\202\315\201C\212O\225\224')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\226\224\202\315\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\305\202\314\216Q\217\306\202\311\202\315\223K\227p\202\265\202\310\202\242\201B)\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(wfcnote)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\314\202\306\202\253\202\306\223\257\227l\202\311\201C\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\213y\202\321DTD\202\311\202\250\202\242\202\304\216Q\217\306\202\267\202\351\224C\210\323\202\314\212O\225\224')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\202\315\201C\224\361\217I\222[\213L\215\206')
handle_start_tag(nt, {'def' : 'NT-markupdecl'})
handle_data('markupdecl')
handle_end_tag(nt)
handle_data('\202\311\202\346\202\301\202\304\213\226\202\263\202\352\202\351\214^\202\314\201C\210\352\230A\202\314\212\256\221S\202\310')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\305\215\\\220\254\202\263\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\314\212\324\202\311\202\315\201C\213\363\224\222\226\224\202\315')
handle_start_tag(termref, {'def' : 'dt-PERef'})
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(termref)
handle_data('\202\360\222u\202\242\202\304\202\340\202\346\202\242\201B\202\265\202\251\202\265\201C\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\226\224\202\315\212O\225\224')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\202\314\223\340\227e\202\314\210\352\225\224\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-cond-section'})
handle_data('\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223')
handle_end_tag(termref)
handle_data('\202\360\216g\227p\202\265\202\304\226\263\216\213\202\265\202\304\202\340\202\346\202\242\201B\223\340\225\224\203T\203u\203Z\203b\203g\202\305\202\315\201C\202\261\202\352\202\315\213\226\202\263\202\352\202\310\202\242\201B\012')
handle_comment('In the external subset, however,  parameter-entity references can\012be used to replace constructs prefixed by "<code>%</code>" in a production of\012the grammar, and <termref def="dt-cond-section">conditional sections</termref>\012may occur.\012In the internal subset, by contrast, conditional sections may not\012occur and the only parameter-entity references \012allowed are those which match the non-terminal \012<nt def="NT-InternalPERef">InternalPERef</nt>\012within the rule for <nt def="NT-doctypedecl">markupdecl</nt>. \012')
handle_data('\012')
handle_start_tag(scrap, {'id' : 'ext-Subset'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '6', 'pcw4' : '17.5', 'pcw5' : '9'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-extSubset'})
handle_start_tag(lhs, {})
handle_data('extSubset')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('(\012')
handle_start_tag(nt, {'def' : 'NT-markupdecl'})
handle_data('markupdecl')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-conditionalSect'})
handle_data('conditionalSect')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-PEReference'})
handle_data('PEReference')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('\012)*')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\213y\202\321\212O\225\224')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\202\315\201C\202\273\202\314\223\340\202\305\202\315\201C')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\202\252')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\314')
handle_start_tag(emph, {})
handle_data('\212\324')
handle_end_tag(emph)
handle_data('\202\276\202\257\202\305\202\310\202\255\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\314')
handle_start_tag(emph, {})
handle_data('\223\340')
handle_end_tag(emph)
handle_data('\202\305\202\340\224F\216\257\202\263\202\352\202\351\201C\202\306\202\242\202\244\223_\202\305\202\340\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\306\202\315\210\331\202\310\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\266\217\221\214^\220\351\214\276\225t\202\253\202\314XML\225\266\217\221\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<?xml version="1.0"?>\012<!DOCTYPE greeting SYSTEM "hello.dtd">\012<greeting>Hello, world!</greeting>\012')
handle_end_tag(eg)
handle_data('\012')
handle_start_tag(termref, {'def' : 'dt-sysid'})
handle_data('\203V\203X\203e\203\200')
handle_data('\216\257\225\312\216q')
handle_end_tag(termref)
handle_data(' "')
handle_start_tag(code, {})
handle_data('hello.dtd')
handle_end_tag(code)
handle_data('"\202\252\201C\225\266\217\221\202\314DTD\202\314URI\202\306\202\310\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\216\237\202\314\227\341\202\314\202\306\202\250\202\350\201C\220\351\214\276\202\360\213\307\217\212\223I\202\311\227^\202\246\202\351\202\261\202\306\202\340\202\305\202\253\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('<?xml version="1.0" encoding="UTF-8" ?>\012<!DOCTYPE greeting [\012  <!ELEMENT greeting (#PCDATA)>\012]>\012<greeting>Hello, world!</greeting>\012')
handle_end_tag(eg)
handle_data('\012\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\213y\202\321\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\314\227\274\225\373\202\360\216g\227p\202\267\202\351\202\306\202\253\202\315\201C\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\252\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\346\202\350\220\346\202\311\217o\214\273\202\265\202\275\202\306\214\251\202\310\202\267\201B')
handle_comment("* 'is considered to'? boo. whazzat mean? ")
handle_data('\202\261\202\352\202\315\201C\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\314\216\300\221\314\213y\202\321\221\256\220\253\203\212\203X\203g\220\351\214\276\202\252\201C\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\314\216\300\221\314\213y\202\321\221\256\220\253\203\212\203X\203g\220\351\214\276\202\346\202\350\227D\220\346\202\267\202\351\202\306\202\242\202\244\214\370\211\312\202\360\202\340\202\275\202\347\202\267\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'sec-rmd'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\225\266\217\221\202\314\223\340\227e\202\360\223n\202\267\202\252\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\315\201C\202\261\202\314\223\340\227e\202\311\211e\213\277\202\360\227^\202\246\202\351\202\261\202\306\202\252\202\240\202\351\201B\221\256\220\253\202\314')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\213y\202\321\216\300\221\314\220\351\214\276\202\360\202\273\202\314\227\341\202\306\202\267\202\351\201BXML\220\351\214\276\202\314\210\352\225\224\225\252\202\306\202\265\202\304\217o\214\273\202\305\202\253\202\351')
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276\202\315\201C\225\266\217\221\202\252\201C\202\273\202\314')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\314\221\266\215\335\202\311\202\346\202\301\202\304\211e\213\277\202\263\202\352\202\310\202\242\202\261\202\306\202\360\216w\202\265\216\246\202\267\201i\225\201\222\312\201C\202\273\202\314')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\252\221\266\215\335\202\265\202\310\202\242\202\275\202\337\202\311\201C\202\261\202\352\202\252\202\242\202\246\202\351\201B\201j\201B\012')
handle_start_tag(scrap, {'id' : 'fulldtd', 'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '4', 'pcw4' : '19.5', 'pcw5' : '9'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-SDDecl'})
handle_start_tag(lhs, {})
handle_data('SDDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('\012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(" \012'standalone' ")
handle_start_tag(nt, {'def' : 'NT-Eq'})
handle_data('Eq')
handle_end_tag(nt)
handle_data(' "\'" (\'yes\' | \'no\') "\'" \012')
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('\012| ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(" \012'standalone' ")
handle_start_tag(nt, {'def' : 'NT-Eq'})
handle_data('Eq')
handle_end_tag(nt)
handle_data(' \'"\' (\'yes\' | \'no\') \'"\'\012')
handle_end_tag(rhs)
handle_start_tag(vc, {'def' : 'vc-check-rmd'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276\202\311\202\250\202\242\202\304\202\315, "')
handle_start_tag(code, {})
handle_data('yes')
handle_end_tag(code)
handle_data('"\202\314\222l\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-docent'})
handle_data('\225\266\217\221\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\314\212O\225\224\202\311\201iDTD\202\314\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\223\340\202\311\201C\226\224\202\315\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\251\202\347\216Q\217\306\202\263\202\352\202\351\212O\225\224\203p\203\211\203\201\203^\216\300\221\314\223\340\202\311\201j\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\251\202\347')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\326\202\306\223n\202\263\202\352\202\351\217\356\225\361\202\311\211e\213\277\202\267\202\351')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\252\221\266\215\335\202\265\202\310\202\242\202\261\202\306\202\360\210\323\226\241\202\267\202\351\201B"')
handle_start_tag(code, {})
handle_data('no')
handle_end_tag(code)
handle_data('"\202\314\222l\202\315\201C\202\273\202\314\212O\225\224')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\252\221\266\215\335\202\267\202\351\202\251\201C\226\224\202\315\221\266\215\335\202\267\202\351\211\302\224\\\220\253\202\252\202\240\202\351\202\261\202\306\202\360\210\323\226\241\202\267\202\351\201B')
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276\202\315\201C\202\273\202\314')
handle_start_tag(emph, {})
handle_data('\220\351\214\276')
handle_end_tag(emph)
handle_data
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\202\314\217\363\221\324\202\311\202\315\211e\213\277\202\360\227^\202\246\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\212O\225\224\202\311')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\252\221\266\215\335\202\265\202\310\202\257\202\352\202\316\201C')
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276\202\315\210\323\226\241\202\360\202\340\202\275\202\310\202\242\201B\212O\225\224\202\311')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\252\221\266\215\335\202\265\201C')
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276\202\252\221\266\215\335\202\265\202\310\202\242\217\352\215\207\202\315\201C')
handle_start_tag(code, {})
handle_data('"no"')
handle_end_tag(code)
handle_data(' \202\314\222l\202\314\220\335\222\350\202\360\211\274\222\350\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\225\266\217\221\202\305 ')
handle_start_tag(code, {})
handle_data('standalone="no"')
handle_end_tag(code)
handle_data(' \202\252\220\335\222\350\202\263\202\352\202\304\202\242\202\351\202\340\202\314\202\315\201C\202\240\202\351\203A\203\213\203S\203\212\203Y\203\200\202\305')
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\202\311\225\317\212\267\202\305\202\253\201C\202\261\202\314\225\266\217\221\202\315\201C\203l\203b\203g\203\217\201[\203N\224z\220M')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\202\306\202\301\202\304\226]\202\334\202\265\202\242\202\251\202\340\202\265\202\352\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'vc-check-rmd'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276\202\315\201C\211\275\202\347\202\251\202\314\212O\225\224')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\220\351\214\276\202\252\216\237\202\314\202\242\202\270\202\352\202\251\202\360\220\351\214\276\202\265\202\304\202\242\202\351\202\306\202\253\202\315\201C\222l "')
handle_start_tag(code, {})
handle_data('no')
handle_end_tag(code)
handle_data('" \202\360\216\346\202\347\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) ')
handle_start_tag(termref, {'def' : 'dt-default'})
handle_data('\203f\203t\203H\203\213\203g')
handle_end_tag(termref)
handle_data('\222l\225t\202\253\202\314\221\256\220\253\202\305\202\240\202\301\202\304\201C\202\261\202\314\221\256\220\253\202\252\223K\227p\202\263\202\352\202\351\227v\221f\202\252\201C\221\256\220\253\222l\202\360\216w\222\350\202\271\202\270\202\311\225\266\217\221\223\340\202\311\214\273\202\352\202\351\202\340\202\314\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) ')
handle_start_tag(code, {})
handle_data('amp')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('lt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('gt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('apos')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('quot')
handle_end_tag(code)
handle_data('\210\310\212O\202\314\216\300\221\314\202\305\202\240\202\301\202\304\201C\202\273\202\314\216\300\221\314\202\311\221\316\202\267\202\351')
handle_start_tag(termref, {'def' : 'dt-entref'})
handle_data('\216Q\217\306')
handle_end_tag(termref)
handle_data('\202\252\225\266\217\221\223\340\202\311\217o\214\273\202\267\202\351\202\340\202\314\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) \222l\202\252')
handle_start_tag(titleref, {'href' : 'AVNormalize'})
handle_data('\220\263\213K\211\273')
handle_end_tag(titleref)
handle_data('\202\314\221\316\217\333\202\306\202\310\202\351\221\256\220\253\202\305\202\240\202\301\202\304\201C\220\263\213K\211\273\202\314\214\213\211\312\202\306\202\265\202\304\225\317\211\273\202\267\202\351\222l\202\252\225\266\217\221\223\340\202\305\221\256\220\253\202\311\216w\222\350\202\263\202\352\202\351\202\340\202\314\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('d) ')
handle_start_tag(termref, {'def' : 'dt-elemcontent'})
handle_data('\227v\221f\223\340\227e')
handle_end_tag(termref)
handle_data('\202\360\202\340\202\302\227v\221f\214^\202\305\202\240\202\301\202\304\201C\213\363\224\222\202\252\202\273\202\314\227v\221f\214^\202\314\202\242\202\270\202\352\202\251\202\314\203C\203\223\203X\203^\203\223\203X\223\340\202\311\222\274\220\332\214\273\202\352\202\351\202\340\202\314\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203X\203^\203\223\203h\203A\203\215\203\223')
handle_data('\225\266\217\221\220\351\214\276\225t\202\253\202\314XML\220\351\214\276\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('?xml version="')
handle_data('1.0')
handle_data('" standalone=\'yes\'?>')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'sec-white-space'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213\363\224\222\202\314\216\346\210\265\202\242')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\225\266\217\221\202\360\225\322\217W\202\267\202\351\202\306\202\253\202\315\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\360\226\332\227\247\202\275\202\271\223\307\202\335\202\342\202\267\202\255\202\267\202\351\202\275\202\337\202\311\201C\201g\213\363\224\222\201h(')
handle_data('\203X\203y\201[\203X')
handle_data('\201C\203^\203u\213y\202\321\213\363\224\222\215s\201B\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\305\202\315\201C\224\361\217I\222[\213L\215\206\202\314')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('\202\305\225\\\202\267)\202\360\216g\202\244\202\306\225\326\227\230\202\310\202\261\202\306\202\252\221\275\202\242\201B\202\273\202\314\213\363\224\222\202\315\201C\224z\225z\202\267\202\351')
handle_data('\224\305')
handle_data('\202\314\225\266\217\221\202\314\210\352\225\224\202\306\202\265\202\304\212\334\202\337\202\351\202\261\202\306\202\360\210\323\220}\202\265\202\310\202\242\202\314\202\360\225\201\222\312\202\306\202\267\202\351\201B\202\265\202\251\202\265\201C\201g\210\323\226\241\202\314\202\240\202\351\201h\213\363\224\222\202\305\202\240\202\301\202\304\201C\224z\225z\202\267\202\351')
handle_data('\224\305')
handle_data('\202\311\216c\202\263\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\202\340\202\314\202\340\221\275\202\242\201B\227\341\202\246\202\316\201C\216\215\213y\202\321\203\\\201[\203X\203R\201[\203h\202\311\202\250\202\257\202\351\213\363\224\222\202\252\202\240\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\315\201C\225\266\217\221\223\340\202\314')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\210\310\212O\202\314\202\267\202\327\202\304\202\314\225\266\216\232\202\360\201C\202\273\202\314\202\334\202\334\225\317\215X\202\271\202\270\202\311')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\223n\202\263\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_start_tag(termref, {'def' : 'dt-validating'})
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\267\202\351')
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-elemcontent'})
handle_data('\227v\221f\223\340\227e')
handle_end_tag(termref)
handle_data('\202\314\222\206\202\314\213\363\224\222\202\360\221\274\202\314\224\361')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\225\266\216\232\202\251\202\347\213\346\225\312\202\265\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\221\244\202\311\227v\221f\223\340\227e\202\314\222\206\202\314\213\363\224\222\202\252\217d\227v\202\305\202\310\202\242\202\306\202\242\202\244\202\261\202\306\202\360\223`\202\246\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012"')
handle_start_tag(code, {})
handle_data('xml:space')
handle_end_tag(code)
handle_data('"\202\306\202\242\202\244\223\301\225\312\202\310')
handle_start_tag(termref, {'def' : 'dt-attr'})
handle_data('\221\256\220\253')
handle_end_tag(termref)
handle_data('\202\360\225\266\217\221\202\311\221}\223\374\202\267\202\351\202\261\202\306\202\311\202\346\202\301\202\304\201C\213\363\224\222\202\360\217d\227v\202\306\202\267\202\351\210\323\220}\202\360\216\246\202\265\202\304\202\340\202\346\202\242\201B\202\261\202\314\221\256\220\253\202\360\223K\227p\202\267\202\351\227v\221f\202\311\214\273\202\352\202\351\213\363\224\222\202\360\201C\203A\203v\203\212\203P\201[\203V\203\207\203\223\202\252\217d\227v\202\310\202\340\202\314\202\306\202\265\202\304\210\265\202\244\202\261\202\306\202\360\227v\213\201\202\267\202\351\201C\202\306\202\242\202\244\210\323\220}\202\360\216\246\202\267\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\221\303\223\226')
handle_data('\202\310\225\266\217\221\202\305\202\315\201C\202\261\202\314\221\256\220\253\202\360\216g\227p\202\267\202\351\217\352\215\207\202\315\201C\221\274\202\314\221\256\220\253\202\306\223\257\202\266\202\346\202\244\202\311')
handle_start_tag(termref, {'def' : 'dt-attdecl'})
handle_data('\220\351\214\276')
handle_end_tag(termref)
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\220\351\214\276\202\267\202\351\202\306\202\253\202\315\201C\216\346\202\350\223\276\202\351\222l\202\360"')
handle_start_tag(code, {})
handle_data('default')
handle_end_tag(code)
handle_data('"\213y\202\321 "')
handle_start_tag(code, {})
handle_data('preserve')
handle_end_tag(code)
handle_data('"\202\276\202\257\202\306\202\267\202\351')
handle_start_tag(termref, {'def' : 'dt-enumerated'})
handle_data('\227\361\213\223\214^')
handle_end_tag(termref)
handle_data('\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\222l"')
handle_start_tag(code, {})
handle_data('default')
handle_end_tag(code)
handle_data('"\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\314')
handle_data('\203f\203t\203H\203\213\203g')
handle_data('\202\314\213\363\224\222\217\210\227\235\203\202\201[\203h\202\360\201C\202\273\202\314\227v\221f\202\311\223K\227p\211\302\224\\\202\306\202\267\202\351\202\261\202\306\202\360\210\323\226\241\202\267\202\351\201B\222l"')
handle_start_tag(code, {})
handle_data('preserve')
handle_end_tag(code)
handle_data('"\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\252\202\267\202\327\202\304\202\314\213\363\224\222\202\360\225\333\221\266\202\267\202\351\202\261\202\306\202\360\210\323\226\241\202\267\202\351\201B\202\261\202\314\220\351\214\276\202\314\210\323\220}\202\315\201C"')
handle_start_tag(code, {})
handle_data('xml:space')
handle_end_tag(code)
handle_data('" \221\256\220\253\202\314\225\312\202\314\216w\222\350\202\305\217\343\217\221\202\253\202\265\202\310\202\242\214\300\202\350\201C\227v\221f\202\314\223\340\227e\202\311\214\273\202\352\202\351\202\267\202\327\202\304\202\314\227v\221f\202\311\223K\227p\202\267\202\351\202\306\211\360\216\337\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\266\217\221\202\314')
handle_start_tag(termref, {'def' : 'dt-root'})
handle_data('\203\213\201[\203g')
handle_data('\227v\221f')
handle_end_tag(termref)
handle_data('\202\311\202\302\202\242\202\304\202\315\201C\202\261\202\314\221\256\220\253\202\314\222l\202\360\216w\222\350\202\267\202\351\202\251\201C\226\224\202\315\202\261\202\314\221\256\220\253\202\314')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\252\202\240\202\351\217\352\215\207\202\360\217\234\202\242\202\304\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\202\346\202\351\213\363\224\222\202\314\216\346\210\265\202\242\202\311\202\302\202\242\202\304\201C\202\242\202\251\202\310\202\351\210\323\220}\202\340\216\246\202\263\202\310\202\242\202\306\211\360\216\337\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227\341\202\360\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data("    <!ATTLIST poem   xml:space (default|preserve) 'preserve'>")
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'sec-line-ends'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\215s\226\226\202\314\216\346\210\265\202\242')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\202\314')
handle_start_tag(termref, {'def' : 'dt-parsedent'})
handle_data('\215\\\225\266')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\315\201C\222\312\217\355\203R\203\223\203s\203\205\201[\203^\202\314\203t\203@\203C\203\213\223\340\202\311\225\333\221\266\202\263\202\352\201C\225\322\217W\202\314\225\326\213X\202\314\202\275\202\337\202\311\225\241\220\224\202\314\215s\202\311\225\252\202\257\202\351\202\261\202\306\202\252\221\275\202\242\201B\202\261\202\352\202\347\202\314\215s\202\315\201C\225\201\222\312\202\315\201C')
handle_start_tag(code, {})
handle_data('CR')
handle_end_tag(code)
handle_data(' (#xD)\203R\201[\203h\213y\202\321 ')
handle_start_tag(code, {})
handle_data('LF')
handle_end_tag(code)
handle_data(' (#xA)\203R\201[\203h\202\314\211\275\202\347\202\251\202\314\221g\215\207\202\271\202\311\202\346\202\301\202\304\225\252\202\257\202\347\202\352\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-app'})
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_end_tag(termref)
handle_data('\202\314\217\210\227\235\202\360\212\310\222P\202\311\202\267\202\351\202\275\202\337\201C\212O\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\226\224\202\315\223\340\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\314')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l\202\252\201C"')
handle_start_tag(code, {})
handle_data('#xD#xA')
handle_end_tag(code)
handle_data('" \202\314\202Q\225\266\216\232\202\314\230A\221\261\202\306\202\267\202\351')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\226\224\202\315')
handle_start_tag(code, {})
handle_data('#xD')
handle_end_tag(code)
handle_data('\202\314\222P\223\306\202\314')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\360\212\334\202\336\217\352\215\207\202\311\201C')
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\222P\210\352\202\314\225\266\216\232')
handle_start_tag(code, {})
handle_data('#xA')
handle_end_tag(code)
handle_data('\202\276\202\257\202\360\223n\202\263\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242(\202\261\202\314\217\210\227\235\202\315\201C\223\374\227\315\223\340\202\311\221\266\215\335\202\267\202\351\211\374\215s\203R\201[\203h\202\360\215\\\225\266\211\360\220\315\202\314\221O\202\311\220\263\213K\211\273\202\267\202\351\202\261\202\306\202\311\202\346\202\301\202\304\201C\227e\210\325\202\311\216\300\214\273\202\305\202\253\202\351\201B)\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'sec-lang-tag'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\214\276\214\352\216\257\225\312')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\266\217\221\217\210\227\235\202\311\202\250\202\242\202\304\202\315\201C\202\273\202\314\225\266\217\221\202\314\222\206\220g\202\252\202\307\202\361\202\310\216\251\221R\214\276\214\352\226\224\202\315\214`\216\256\214\276\214\352\202\305\217\221\202\251\202\352\202\304\202\242\202\351\202\251\226\276\216\246\202\267\202\351\202\261\202\306\202\252\201C\226\360\202\311\227\247\202\302\202\261\202\306\202\252\221\275\202\242\201B')
handle_comment('\202\261\202\261\202\305\216g\227p\202\267\202\351\201g\214\276\214\352\201h\202\306\202\242\202\244\214\276\227t\202\314\210\323\226\241\202\315\201C"Espa&#x00F1;ol" \213y\202\321"EBNF"\202\314\221o\225\373\202\305\227\341\216\246\202\263\202\352\202\351\210\323\226\241\202\306\202\267\202\351\201B')
handle_comment(" x00F1: spanish's small ntilde")
handle_end_tag(p)
handle_data('\012')
handle_comment('; \202\261\202\314\217\356\225\361\202\315\201i\227\341\202\360\202\240\202\260\202\352\202\316\201j\225\266\217\221\202\314\225\266\216\232\202\314\225\\\216\246\201C\225\300\202\321\202\311\217\356\225\361\222\212\217o\202\314\202\275\202\337\202\314\214\352\212\262\201E\214`\221\324\221f\211\360\220\315\213y\202\321\203e\203L\203X\203g\203u\203\215\203b\203N\202\314\220\256\214`\202\311\211e\213\277\202\360\213y\202\332\202\267\211\302\224\\\220\253\202\252\202\240\202\351\201B')
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\225\266\217\221\223\340\202\314\227v\221f\202\314\202\340\202\302\223\340\227e\226\224\202\315\221\256\220\253\222l\202\311\202\250\202\242\202\304\216g\227p\202\267\202\351')
handle_comment('\216\251\221R\226\224\202\315\214`\216\256')
handle_data('\214\276\214\352\202\360\216w\222\350\202\267\202\351\202\275\202\337\202\311\201C"')
handle_start_tag(code, {})
handle_data('xml:lang')
handle_end_tag(code)
handle_data('" \202\306\202\242\202\244\226\274\221O\202\314\223\301\225\312\202\310')
handle_start_tag(termref, {'def' : 'dt-attr'})
handle_data('\221\256\220\253')
handle_end_tag(termref)
handle_data('\202\360\201C\225\266\217\221\223\340\202\311\221}\223\374\202\265\202\304\202\340\202\346\202\242\201B\012')
handle_comment('; \202\261\202\314\221\256\220\253\202\315XML\213K\222\350\202\314\210\352\225\224\202\306\202\265\202\304\201C\225\241\220\224\202\314XML&application;\202\314\221\212\214\335\211^\227p\220\253\202\360\215\202\202\337\202\351\202\275\202\337\202\311\222\350\213`\202\267\202\351\201B')
handle_data('\012\221\256\220\253\202\314\222l\202\315\201C')
handle_start_tag(bibref, {'ref' : 'RFC1766'})
handle_end_tag(bibref)
handle_data('\201gRFC1766\201F')
handle_data('\214\276\214\352\216\257\225\312')
handle_data('\202\314\202\275\202\337\202\314\203^\203O\201h\202\311\202\346\202\301\202\304\213K\222\350\202\263\202\352\202\351')
handle_data('\214\276\214\352\216\257\225\312')
handle_data('\203R\201[\203h\202\311\217]\202\244\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\214\276\214\352\216\257\225\312')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-LanguageID'})
handle_start_tag(lhs, {})
handle_data('LanguageID')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Langcode'})
handle_data('Langcode')
handle_end_tag(nt)
handle_data(" \012('-' ")
handle_start_tag(nt, {'def' : 'NT-Subcode'})
handle_data('Subcode')
handle_end_tag(nt)
handle_data(')*')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Langcode'})
handle_start_tag(lhs, {})
handle_data('Langcode')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-ISO639Code'})
handle_data('ISO639Code')
handle_end_tag(nt)
handle_data(' | \012')
handle_start_tag(nt, {'def' : 'NT-IanaCode'})
handle_data('IanaCode')
handle_end_tag(nt)
handle_data(' | \012')
handle_start_tag(nt, {'def' : 'NT-UserCode'})
handle_data('UserCode')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-ISO639Code'})
handle_start_tag(lhs, {})
handle_data('ISO639Code')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('([a-z] | [A-Z]) ([a-z] | [A-Z])')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-IanaCode'})
handle_start_tag(lhs, {})
handle_data('IanaCode')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("('i' | 'I') '-' ([a-z] | [A-Z])+")
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-UserCode'})
handle_start_tag(lhs, {})
handle_data('UserCode')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("('x' | 'X') '-' ([a-z] | [A-Z])+")
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Subcode'})
handle_start_tag(lhs, {})
handle_data('Subcode')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('([a-z] | [A-Z])+')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_start_tag(nt, {'def' : 'NT-Langcode'})
handle_data('Langcode')
handle_end_tag(nt)
handle_data('\202\315\201C\216\237\202\314\202\307\202\352\202\305\202\340\202\346\202\242\201B\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) ')
handle_start_tag(bibref, {'ref' : 'ISO639'})
handle_end_tag(bibref)
handle_data('\201g\214\276\214\352\202\314\226\274\221O\225\\\214\273\202\314\202\275\202\337\202\314\203R\201[\203h\201h\202\305\213K\222\350\202\263\202\352\202\3512\225\266\216\232\202\314')
handle_data('\214\276\214\352\203R\201[\203h')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) Internet Assigned Numbers Authority (IANA)\202\305\223o\230^\202\263\202\352\202\304\202\242\202\351')
handle_data('\214\276\214\352\203R\201[\203h')
handle_data('\201B\202\261\202\352\202\315\201C\220\346\223\252\202\252 "')
handle_start_tag(code, {})
handle_data('i-')
handle_end_tag(code)
handle_data('" (\226\224\202\315"')
handle_start_tag(code, {})
handle_data('I-')
handle_end_tag(code)
handle_data('")\202\305\216n\202\334\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) ')
handle_data('\203\206\201[\203U')
handle_data('\202\311\202\346\202\301\202\304\222\350\202\337\202\347\202\352\202\275')
handle_data('\214\276\214\352\203R\201[\203h')
handle_data('\201C\226\224\202\315\216\204\223I\202\310\216g\227p\202\314\202\275\202\337\202\311\225\241\220\224\202\314\222c\221\314\212\324\202\252\216\346\202\350\214\210\202\337\202\275\203R\201[\203h\201B\202\261\202\352\202\347\202\315\201C\215\241\214\343IANA\202\311\202\250\202\242\202\304\225W\217\200\211\273\226\224\202\315\223o\230^\202\263\202\352\202\351\203R\201[\203h\202\306\202\314\213\243\215\207\202\360\224\360\202\257\202\351\202\275\202\337\202\311\201C\220\346\223\252\202\360"')
handle_start_tag(code, {})
handle_data('x-')
handle_end_tag(code)
handle_data('" \226\224\202\315 "')
handle_start_tag(code, {})
handle_data('X-')
handle_end_tag(code)
handle_data('" \202\305\216n\202\337\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(nt, {'def' : 'NT-Subcode'})
handle_data('Subcode')
handle_end_tag(nt)
handle_data('\202\315\201C\225\241\220\224\211\361\216g\202\301\202\304\202\340\202\346\202\242\201B\215\305\217\211\202\314\203T\203u\203R\201[\203h\202\252\221\266\215\335\202\265\201C\202\273\202\314\223\340\227e\202\252\223\361\202\302\202\314\225\266\216\232\202\251\202\347\220\254\202\351\202\306\202\253\202\315\201C')
handle_start_tag(bibref, {'ref' : 'ISO3166'})
handle_end_tag(bibref)
handle_data('ISO3166\202\314\201g\215\221\226\274\202\360\225\\\202\267\203R\201[\203h(\215\221\203R\201[\203h)\201h\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\215\305\217\211\202\314\203T\203u\203R\201[\203h\202\2523\225\266\216\232\210\310\217\343\202\251\202\347\220\254\202\351\202\306\202\253\202\315\201C')
handle_start_tag(nt, {'def' : 'NT-Langcode'})
handle_data('Langcode')
handle_end_tag(nt)
handle_data('\202\314\220\346\223\252\202\252\201C"')
handle_start_tag(code, {})
handle_data('x-')
handle_end_tag(code)
handle_data('" \226\224\202\315 "')
handle_start_tag(code, {})
handle_data('X-')
handle_end_tag(code)
handle_data('"\202\305\216n\202\334\202\347\202\310\202\242\214\300\202\350\201C\216w\222\350\202\265\202\275\214\276\214\352\202\311\221\316\202\267\202\351\203T\203u\203R\201[\203h\202\306\202\265\201CIANA\202\311\223o\230^\202\263\202\352\202\275\202\340\202\314\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\214\276\214\352\203R\201[\203h')
handle_data('\202\315\201C\217\254\225\266\216\232\202\305\202\314\225\\\213L\202\360\201C')
handle_data('\215\221\203R\201[\203h')
handle_data('\202\315\201C(\221\266\215\335\202\267\202\351\202\310\202\347\202\316)\221\345\225\266\216\232\202\305\202\314\225\\\213L\202\360\212\265\215s\202\306\202\267\202\351\201B\202\265\202\251\202\265\201CXML\225\266\217\221\223\340\202\311\202\250\202\257\202\351\221\274\202\314\226\274\221O\202\306\202\315\210\331\202\310\202\350\201C\202\261\202\352\202\347\202\314\222l\202\311\202\302\202\242\202\304\202\315\201C\221\345\225\266\216\232\213y\202\321\217\254\225\266\216\232\202\314\213\346\225\312\202\360\202\265\202\310\202\242\202\261\202\306\202\311\222\215\210\323\202\267\202\351\202\261\202\306\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227\341\202\360\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<p xml:lang="en">The quick brown fox jumps over the lazy dog.</p>\012<p xml:lang="en-GB">What colour is it?</p>\012<p xml:lang="en-US">What color is it?</p>\012<sp who="Faust" desc=\'leise\' xml:lang="de">\012  <l>Habe nun, ach! Philosophie,</l>\012  <l>Juristerei, und Medizin</l>\012  <l>und leider auch Theologie</l>\012  <l>')
handle_comment(" x00DF german's es-zet; x00FC german's u-umlaut ")
handle_data('durchaus studiert mit hei')
handle_data('\337')
handle_data('em Bem')
handle_data('\374')
handle_data("h'n.")
handle_data('</l>\012  </sp>')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_comment('<p>xml:lang \202\314\222l\202\315\201C\227v\221f\202\314\223\340\227e\213y\202\321(\221\256\220\253\202\314&default-value;\202\305\222\350\202\337\202\310\202\242\214\300\202\350)\203t\203\212\201[\203e\203L\203X\203g(CDATA)\202\314\222l\202\360\202\340\202\302\202\273\202\314\227v\221f\202\326\202\314\202\267\202\327\202\304\202\314\221\256\220\253\202\314\222l\202\311\202\302\202\242\202\304\201C\202\273\202\314\227\274\225\373\202\311\223K\227p\202\267\202\351\201B')
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('xml:lang')
handle_end_tag(code)
handle_data('\202\305\220\351\214\276\202\267\202\351\210\323\220}\202\315\201C')
handle_start_tag(code, {})
handle_data('xml:lang')
handle_end_tag(code)
handle_data('\202\314\225\312\202\314\216w\222\350\202\305\217\343\217\221\202\265\202\310\202\242\214\300\202\350\201C\216w\222\350\202\265\202\275\227v\221f\202\314\223\340\227e\202\311\212\334\202\336\202\267\202\327\202\304\202\314\227v\221f\202\311\223K\227p\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_comment('\202\240\202\351\227v\221f\202\311\202\250\202\257\202\351 xml:lang \221\256\220\253\202\314\222l\202\252\222\350\202\337\202\347\202\352\202\304\202\250\202\347\202\270\201CDTD\202\311\202\250\202\242\202\304\202\273\202\314&default-value;\202\252\222\350\202\337\202\347\202\352\202\304\202\242\202\310\202\242\217\352\215\207\201C\202\273\202\314\227v\221f\202\314xml:lang \221\256\220\253\202\314\222l\202\315\201C\220e\227v\221f\202\305\202\314\222l\202\252\221\266\215\335\202\267\202\351\217\352\215\207\202\315\201C\202\273\202\352\202\360\210\370\202\253\214p\202\256\201B \216\237\202\314\227\341\202\311\202\250\202\257\202\351\223\361\202\302\202\314<term>\202\306\202\242\202\244\226\274\221O\202\314\220\352\226\345\227p\214\352\202\360\225\\\202\267\227v\221f\202\315\201Cxml:lang\202\314\222l\202\311\212\326\202\265\202\304\202\315\201C\216\300\215\333\217\343\201C\223\257\202\266\222l\202\360\202\340\202\302\201B\012\012  <p xml:lang="en">Here the keywords are\012  <term xml:lang="en">shift</term> and\012  <term>reduce</term>. ...</p>\012\012XML&processor;\202\305\202\315\202\310\202\255&application;\202\252\201C\202\261\202\314\221\256\220\253\222l\202\314\214p\217\263\202\311\202\302\202\242\202\304\220\323\224C\202\360\202\340\202\302\201B\012')
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_data('\221\303\223\226')
handle_data('\202\310\225\266\217\221\202\311\202\250\202\242\202\304\202\315\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\221\274\202\314\217\352\217\212\202\305\213K\222\350\202\267\202\351\202\306\202\250\202\350\201C\202\261\202\314\221\256\220\253\202\360\225K\202\270\220\351\214\276\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\222\312\217\355\201C\220\351\214\276\202\315\201C\216\237\202\314\214`\202\306\202\267\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('xml:lang  NMTOKEN  #IMPLIED')
handle_end_tag(eg)
handle_data('\012\225K\227v\202\310\202\347\202\316\201C\223\301\222\350\202\314')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\360\227^\202\246\202\304\202\340\202\346\202\242\201B\211p\214\352\202\360\225\352\214\352\202\306\202\267\202\351\212w\220\266\227p\202\314\203t\203\211\203\223\203X\214\352\202\314\216\215\217W\202\305\202\315\201C\220\340\226\276\213y\202\321\222\215\202\360\211p\214\352\202\305\213L\217q\202\267\202\352\202\316\201Cxml:lang \221\256\220\253\202\360\216\237\202\314\202\306\202\250\202\350\202\311\220\351\214\276\202\267\202\351\202\261\202\306\202\306\202\310\202\351\201B\012')
handle_start_tag(eg, {})
handle_data("    <!ATTLIST poem   xml:lang NMTOKEN 'fr'>\012    <!ATTLIST gloss  xml:lang NMTOKEN 'en'>\012    <!ATTLIST note   xml:lang NMTOKEN 'en'>")
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_comment('\012DTD\202\314\220\335\214v\216\322\202\315\201C\203X\203N\203\212\203v\203g\202\360\214\276\214\352(\213y\202\321\202\273\202\314\224h\220\266\221\314)\202\311\225\357\220\333\202\265\202\304\210\265\202\244\202\314\202\305\202\315\202\310\202\255\201C\203X\203N\203\212\203v\203g\213y\202\321\214\276\214\352\202\360\223\257\216\237\214\263\202\305\210\265\202\244\202\314\202\252\223K\223\226\202\310\217\352\215\207\201C\214\276\214\352\221\256\220\253\202\306\223\257\227l\202\311\203X\203N\203\212\203v\203g\221\256\220\253\202\252\221\266\215\335\202\267\202\352\202\316\227L\227p\202\276\202\306\216v\202\244\202\251\202\340\202\265\202\352\202\310\202\242\201B\203\212\203\223\203N\227v\221f\202\311\202\250\202\242\202\304\201C\216Q\217\306\202\263\202\352\202\275\226\224\202\315\203\212\203\223\203N\202\263\202\352\202\275\203\212\203\\\201[\203X\202\311\202\250\202\257\202\351(\216\345\227v\202\310)\214\276\214\352(\217\352\215\207\202\311\202\346\202\301\202\304\202\315\225\241\220\224)\202\360\225\\\202\267\227v\221f\202\360\222\350\213`\202\267\202\351\202\314\202\340\226]\202\334\202\265\202\242\201B\202\265\202\251\202\265\201C\202\261\202\352\202\347\202\314&application;\202\315\201C\202\261\202\314&TR-or-Rec;\202\252\213K\222\350\202\267\202\351\224\315\210\315\212O\202\306\202\267\202\351\201B')
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_end_tag(div1)
handle_data('\012')
handle_comment(' &Elements; ')
handle_data('\012\012')
handle_start_tag(div1, {'id' : 'sec-logical-struct'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\230_\227\235\215\\\221\242')
handle_end_tag(head)
handle_data('\012\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-element', 'term' : 'Element'})
handle_data('\202\242\202\251\202\310\202\351')
handle_start_tag(termref, {'def' : 'dt-xml-doc'})
handle_data('XML\225\266\217\221')
handle_end_tag(termref)
handle_data('\202\340\201C\210\352\202\302\210\310\217\343\202\314')
handle_start_tag(term, {})
handle_data('\227v\221f')
handle_end_tag(term)
handle_data('\202\360\212\334\202\336\201B\227v\221f\202\314\213\253\212E\202\315, ')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(termref)
handle_data('\213y\202\321')
handle_start_tag(termref, {'def' : 'dt-etag'})
handle_data('\217I\227\271\203^\203O')
handle_end_tag(termref)
handle_data('\202\311\202\346\202\301\202\304\213\346\220\330\202\351\201B\227v\221f\202\252')
handle_start_tag(termref, {'def' : 'dt-empty'})
handle_data('\213\363')
handle_end_tag(termref)
handle_data('\227v\221f\202\314\202\306\202\253\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-eetag'})
handle_data('\213\363\227v\221f\203^\203O')
handle_end_tag(termref)
handle_data('\202\305\216\246\202\267\201B\212e\201X\202\314\227v\221f\202\315\201C\214^\202\360\202\340\202\302\201B\227v\221f\214^\202\315\226\274\221O(\213\244\222\312')
handle_data('\216\257\225\312\216q')
handle_data('(generic identifier)\226\224\202\315GI\202\306\214\304\202\324\202\261\202\306\202\252\202\240\202\351\201B)\202\311\202\346\202\301\202\304')
handle_data('\223\301\222\350\202\263\202\352\202\351')
handle_data('\201B\227v\221f\202\315\201C\202\242\202\255\202\302\202\251\202\314\221\256\220\253\202\360\202\340\202\302\202\261\202\306\202\252\202\305\202\253\202\351\201B')
handle_end_tag(termdef)
handle_data('\221\256\220\253\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-attrname'})
handle_data('\226\274\221O')
handle_end_tag(termref)
handle_data('\213y\202\321')
handle_start_tag(termref, {'def' : 'dt-attrval'})
handle_data('\222l')
handle_end_tag(termref)
handle_data('\202\360\202\340\202\302\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_start_tag(head, {})
handle_data('\227v\221f')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-element'})
handle_start_tag(lhs, {})
handle_data('element')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-EmptyElemTag'})
handle_data('EmptyElemTag')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('| ')
handle_start_tag(nt, {'def' : 'NT-STag'})
handle_data('STag')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-content'})
handle_data('content')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-ETag'})
handle_data('ETag')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_start_tag(wfc, {'def' : 'GIMatch'})
handle_end_tag(wfc)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\315\201C\227v\221f\214^\213y\202\321\221\256\220\253\202\314\210\323\226\241\201C\216g\227p\225\373\226@\201C\226\224\202\315(\215\\\225\266\202\311\212\326\202\267\202\351\202\261\202\306\202\360\217\234\202\253)\226\274\221O\202\311\220\247\226\361\202\360\227^\202\246\202\310\202\242\201B\202\275\202\276\202\265\201C\220\346\223\252\202\252')
handle_start_tag(code, {})
handle_data("(('X'|'x')('M'|'m')('L'|'l'))")
handle_end_tag(code)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\226\274\221O\202\315\201C\202\261\202\314\224\305\226\224\202\315\215\241\214\343\202\314\224\305\202\314\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\305\202\314\225W\217\200\211\273\202\314\202\275\202\337\202\311\227\\\226\361\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(wfcnote, {'id' : 'GIMatch'})
handle_start_tag(head, {})
handle_data('\227v\221f\214^\202\314')
handle_data('\203}\203b\203`')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227v\221f\202\314\217I\227\271\203^\203O\202\314')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('\226\274\221O')
handle_end_tag(nt)
handle_data('\202\315\201C\202\273\202\314\227v\221f\202\314\212J\216n\203^\203O\202\311\202\250\202\257\202\351\214^\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(wfcnote)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'sec-starttags'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\212J\216n\203^\203O\201C\217I\227\271\203^\203O\213y\202\321\213\363\227v\221f\203^\203O')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-stag', 'term' : 'Start-Tag'})
handle_data('\213\363\202\305\202\310\202\242\224C\210\323\202\314XML\227v\221f\202\314\216n\202\334\202\350\202\315\201C')
handle_start_tag(term, {})
handle_data('\212J\216n\203^\203O')
handle_end_tag(term)
handle_data('\202\311\202\346\202\301\202\304')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\267\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_start_tag(head, {})
handle_data('\212J\216n\203^\203O')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '6', 'pcw4' : '15', 'pcw5' : '11.5'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-STag'})
handle_start_tag(lhs, {})
handle_data('STag')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("' ")
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' (')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Attribute'})
handle_data('Attribute')
handle_end_tag(nt)
handle_data(')* ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '>'")
handle_end_tag(rhs)
handle_start_tag(wfc, {'def' : 'uniqattspec'})
handle_end_tag(wfc)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Attribute'})
handle_start_tag(lhs, {})
handle_data('Attribute')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Eq'})
handle_data('Eq')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_start_tag(vc, {'def' : 'ValueType'})
handle_end_tag(vc)
handle_start_tag(wfc, {'def' : 'NoExternalRefs'})
handle_end_tag(wfc)
handle_start_tag(wfc, {'def' : 'CleanAttrVals'})
handle_end_tag(wfc)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\212J\216n\203^\203O\213y\202\321\217I\227\271\203^\203O\223\340\202\314')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C\227v\221f\202\314')
handle_start_tag(term, {})
handle_data('\214^')
handle_end_tag(term)
handle_data('\202\360\225\\\202\355\202\267\201B')
handle_end_tag(termdef)
handle_start_tag(termdef, {'id' : 'dt-attr', 'term' : 'Attribute'})
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\213y\202\321')
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data('\202\314\221\316\202\360\227v\221f\202\314')
handle_start_tag(term, {})
handle_data('\221\256\220\253\216w\222\350')
handle_end_tag(term)
handle_data('\202\306\202\242\202\242')
handle_end_tag(termdef)
handle_data('\201C')
handle_start_tag(termdef, {'id' : 'dt-attrname', 'term' : 'Attribute Name'})
handle_data('\214\302\201X\202\314\221\316\202\311\202\250\202\257\202\351')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C')
handle_start_tag(term, {})
handle_data('\221\256\220\253\226\274')
handle_end_tag(term)
handle_end_tag(termdef)
handle_data('\213y\202\321')
handle_start_tag(termdef, {'id' : 'dt-attrval', 'term' : 'Attribute Value'})
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data('\202\314\223\340\227e(\213\346\220\330\202\350\216q')
handle_start_tag(code, {})
handle_data("'")
handle_end_tag(code)
handle_data('\226\224\202\315')
handle_start_tag(code, {})
handle_data('"')
handle_end_tag(code)
handle_data('\202\314\212\324\202\314')
handle_data('\225\266\216\232\227\361')
handle_data(')\202\360')
handle_start_tag(term, {})
handle_data('\221\256\220\253\222l')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(wfcnote, {'id' : 'uniqattspec'})
handle_start_tag(head, {})
handle_data('\221\256\220\253\216w\222\350\202\314\210\352\210\323\220\253')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\212J\216n\203^\203O\226\224\202\315\213\363\227v\221f\203^\203O\202\305\202\315\201C\223\257\210\352\202\314\221\256\220\253\226\274\202\252\202Q\223x\210\310\217\343\217o\214\273\202\265\202\304\202\315\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(wfcnote)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'ValueType'})
handle_start_tag(head, {})
handle_data('\221\256\220\253\222l\202\314\214^')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\221\256\220\253\202\315\220\351\214\276\202\263\202\352\202\304\202\242\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\221\256\220\253\222l\202\314\214^\202\315\201C\202\273\202\314\221\256\220\253\202\311\221\316\202\265\202\304\220\351\214\276\202\265\202\275\214^\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242(\221\256\220\253\202\314\214^\202\311\202\302\202\242\202\304\202\315\201C')
handle_start_tag(titleref, {'href' : 'AttDecls'})
handle_data('\221\256\220\253\203\212\203X\203g\220\351\214\276')
handle_end_tag(titleref)
handle_data('\202\311\202\302\202\242\202\304\202\314\213K\222\350\202\360\216Q\217\306\201B)\201B')
handle_end_tag(p)
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(wfcnote, {'id' : 'NoExternalRefs'})
handle_start_tag(head, {})
handle_data('\212O\225\224\216\300\221\314\202\326\202\314\216Q\217\306\202\252\202\310\202\242\202\261\202\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\221\256\220\253\222l\202\311\202\315\201C\212O\225\224\216\300\221\314\202\326\202\314\222\274\220\332\223I\226\224\202\315\212\324\220\332\223I\202\310\216Q\217\306\202\360\212\334\202\336\202\261\202\306\202\315\202\305\202\253\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(wfcnote)
handle_data('\012')
handle_start_tag(wfcnote, {'id' : 'CleanAttrVals'})
handle_start_tag(head, {})
handle_data('\221\256\220\253\222l\202\311')
handle_start_tag(code, {})
handle_data('<')
handle_end_tag(code)
handle_data('\202\360\212\334\202\334\202\310\202\242\202\261\202\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\221\256\220\253\222l\223\340\202\305\222\274\220\332\223I\226\224\202\315\212\324\220\332\223I\202\311\216Q\217\306\202\267\202\351\216\300\221\314(')
handle_start_tag(code, {})
handle_data('&')
handle_data('lt;')
handle_end_tag(code)
handle_data('\202\360\217\234\202\255\201B)\202\314')
handle_start_tag(termref, {'def' : 'dt-repltext'})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\311\202\315\201C')
handle_start_tag(code, {})
handle_data('<')
handle_end_tag(code)
handle_data('\202\360\212\334\202\361\202\305\202\315\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(wfcnote)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\212J\216n\203^\203O\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('termdef id="dt-dog" term="dog">')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-etag', 'term' : 'End Tag'})
handle_data('\212J\216n\203^\203O\202\305\216n\202\334\202\351\227v\221f\202\314\217I\202\355\202\350\202\315\201C')
handle_start_tag(term, {})
handle_data('\217I\227\271\203^\203O')
handle_end_tag(term)
handle_data('\202\305')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\261\202\314\217I\227\271\203^\203O\202\315\201C\221\316\211\236\202\267\202\351\212J\216n\203^\203O\202\314\227v\221f\214^\202\306\223\257\202\266\226\274\221O\202\360\202\340\202\302\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_start_tag(head, {})
handle_data('\217I\227\271\203^\203O')
handle_end_tag(head)
handle_start_tag(prodgroup, {'pcw2' : '6', 'pcw4' : '15', 'pcw5' : '11.5'})
handle_start_tag(prod, {'id' : 'NT-ETag'})
handle_start_tag(lhs, {})
handle_data('ETag')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("/' ")
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '>'")
handle_end_tag(rhs)
handle_end_tag(prod)
handle_end_tag(prodgroup)
handle_end_tag(scrap)
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\217I\227\271\203^\203O\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('/termdef>')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-content', 'term' : 'Content'})
handle_data('\227v\221f\202\314\212J\216n\203^\203O\202\306\217I\227\271\203^\203O\202\306\202\314\212\324\202\314')
handle_start_tag(termref, {'def' : 'dt-text'})
handle_data('\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\360\201C\202\273\202\314\227v\221f\202\314')
handle_start_tag(term, {})
handle_data('\223\340\227e')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_start_tag(head, {})
handle_data('\227v\221f\202\314\223\340\227e')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '6', 'pcw4' : '15', 'pcw5' : '11.5'})
handle_start_tag(prod, {'id' : 'NT-content'})
handle_start_tag(lhs, {})
handle_data('content')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-element'})
handle_data('element')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-CharData'})
handle_data('CharData')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-Reference'})
handle_data('Reference')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-CDSect'})
handle_data('CDSect')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-PI'})
handle_data('PI')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-Comment'})
handle_data('Comment')
handle_end_tag(nt)
handle_data(')*')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_end_tag(prodgroup)
handle_end_tag(scrap)
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-empty', 'term' : 'Empty'})
handle_data('\227v\221f\202\252')
handle_start_tag(term, {})
handle_data('\213\363')
handle_end_tag(term)
handle_data('\202\314\202\306\202\253\201C\202\273\202\314\227v\221f\202\315\201C\222\274\214\343\202\311\217I\227\271\203^\203O\202\360\202\340\202\302\212J\216n\203^\203O\226\224\202\315\213\363\227v\221f\203^\203O\202\305\225\\\214\273\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(termdef)
handle_start_tag(termdef, {'id' : 'dt-eetag', 'term' : 'empty-element tag'})
handle_start_tag(term, {})
handle_data('\213\363\227v\221f\203^\203O')
handle_end_tag(term)
handle_data('\202\315\201C\216\237\202\314\223\301\225\312\202\310\214`\216\256\202\360\202\306\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_start_tag(head, {})
handle_data('\213\363\227v\221f\202\314\202\275\202\337\202\314\203^\203O')
handle_end_tag(head)
handle_start_tag(prodgroup, {'pcw2' : '6', 'pcw4' : '15', 'pcw5' : '11.5'})
handle_start_tag(prod, {'id' : 'NT-EmptyElemTag'})
handle_start_tag(lhs, {})
handle_data('EmptyElemTag')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("' ")
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' (')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Attribute'})
handle_data('Attribute')
handle_end_tag(nt)
handle_data(')* ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '/")
handle_data('>')
handle_data("'")
handle_end_tag(rhs)
handle_start_tag(wfc, {'def' : 'uniqattspec'})
handle_end_tag(wfc)
handle_end_tag(prod)
handle_end_tag(prodgroup)
handle_end_tag(scrap)
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012\012')
handle_comment(' \226\345\224n\201F\217\343\202\314\201g\213\363\227v\221f\202\314\202\275\202\337\202\314\203^\203O(tags for empty elements)\201h\202\315\201g\213\363\227v\221f\203^\203O(empty-element tag)\201h\202\306\202\267\202\327\202\253\202\276\202\306\216v\202\242\202\334\202\267\202\252\201C\202\242\202\251\202\252\202\305\202\265\202\345\202\244\202\251 ')
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\213\363\227v\221f\203^\203O\202\315\201C\223\340\227e\202\360\202\340\202\275\202\310\202\242\224C\210\323\202\314\227v\221f\202\314\225\\\214\273\202\311\227\230\227p\202\305\202\253\202\351\201B\213\363\227v\221f\203^\203O\202\305\225\\\214\273\202\267\202\351\227v\221f\202\360\201C\203L\201[\203\217\201[\203h')
handle_start_tag(kw, {})
handle_data('EMPTY')
handle_end_tag(kw)
handle_data('\202\360\227p\202\242\202\304\220\351\214\276\202\265\202\310\202\255\202\306\202\340\202\346\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\213\363\227v\221f\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('IMG align="left" src="http://www.w3.org/Icons/WWW/w3c_home" />')
handle_data('<')
handle_data('br>')
handle_data('<')
handle_data('/br>')
handle_data('<')
handle_data('br/>')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'elemdecls'})
handle_start_tag(head, {})
handle_data('\227v\221f\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226\220\253')
handle_end_tag(termref)
handle_data('\202\360\225\333\217\330\202\267\202\351\202\275\202\337\201C\227v\221f\220\351\214\276\213y\202\321\221\256\220\253\203\212\203X\203g\220\351\214\276\202\360\227p\202\242\202\304')
handle_start_tag(termref, {'def' : 'dt-xml-doc'})
handle_data('XML\225\266\217\221')
handle_end_tag(termref)
handle_data('\202\314')
handle_start_tag(termref, {'def' : 'dt-element'})
handle_data('\227v\221f')
handle_end_tag(termref)
handle_data('\202\314\215\\\221\242\202\311\201C\220\247\226\361\202\360\211\301\202\246\202\351\202\261\202\306\202\252\202\305\202\253\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227v\221f\220\351\214\276\202\315\201C\227v\221f\202\314')
handle_start_tag(termref, {'def' : 'dt-content'})
handle_data('\223\340\227e')
handle_end_tag(termref)
handle_data('\202\311\202\302\202\242\202\304\202\314\220\247\226\361\202\306\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227v\221f\220\351\214\276\202\315\201C\227v\221f\202\314')
handle_start_tag(termref, {'def' : 'dt-parentchild'})
handle_data('\216q')
handle_end_tag(termref)
handle_data('\202\306\202\265\202\304\217o\214\273\211\302\224\\\202\310\227v\221f\214^\202\311\202\302\202\242\202\304\201C\220\247\226\361\202\360\211\301\202\246\202\351\202\261\202\306\202\252\221\275\202\242\201B')
handle_data('\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
handle_data('\201C\227v\221f\220\351\214\276\202\360\202\340\202\275\202\310\202\242\227v\221f\214^\202\252\221\274\202\314\227v\221f\220\351\214\276\202\311\202\346\202\301\202\304\216Q\217\306\202\263\202\352\202\352\202\316\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\214x\215\220\202\360\217o\202\265\202\304\202\340\202\346\202\242\201B\202\265\202\251\202\265\201C\202\261\202\352\202\315')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\315\202\265\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-eldecl', 'term' : 'Element Type declaration'})
handle_start_tag(term, {})
handle_data('\227v\221f\214^\220\351\214\276')
handle_end_tag(term)
handle_data('\202\315\201C\216\237\202\314\214`\216\256\202\360\202\306\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_start_tag(head, {})
handle_data('\227v\221f\214^\220\351\214\276')
handle_end_tag(head)
handle_start_tag(prodgroup, {'pcw2' : '5.5', 'pcw4' : '18', 'pcw5' : '9'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-elementdecl'})
handle_start_tag(lhs, {})
handle_data('elementdecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("!ELEMENT' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-contentspec'})
handle_data('contentspec')
handle_end_tag(nt)
handle_data('\012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '>'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'EDUnique'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-contentspec'})
handle_start_tag(lhs, {})
handle_data('contentspec')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'EMPTY' \012| 'ANY' \012| ")
handle_start_tag(nt, {'def' : 'NT-Mixed'})
handle_data('Mixed')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-children'})
handle_data('children')
handle_end_tag(nt)
handle_data('\012')
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'elementvalid'})
handle_end_tag(vc)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\202\261\202\261\202\305\201C')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C\220\351\214\276\202\263\202\352\202\304\202\242\202\351\227v\221f\202\314\214^\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'EDUnique'})
handle_start_tag(head, {})
handle_data('\227v\221f\220\351\214\276\202\314\210\352\210\323\220\253')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227v\221f\214^\202\360\202Q\223x\210\310\217\343\220\351\214\276\202\305\202\253\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(vcnote)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'elementvalid'})
handle_start_tag(head, {})
handle_data('\227v\221f\202\314')
handle_data('\221\303\223\226\220\253')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227v\221f\202\252')
handle_comment(' said to be ')
handle_data('\221\303\223\226')
handle_data('\202\306\202\315\201C')
handle_start_tag(nt, {'def' : 'NT-elementdecl'})
handle_data('elementdecl')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\220\351\214\276\202\305\202\240\202\301\202\304\201C\202\273\202\314')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\252\202\273\202\314\227v\221f\214^\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\201C\216\237\202\314\202\242\202\270\202\352\202\251\202\314\217\360\214\217\202\360\226\236\202\275\202\267\217\352\215\207\202\306\202\267\202\351\201B')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) \220\351\214\276\202\252')
handle_start_tag(kw, {})
handle_data('EMPTY')
handle_end_tag(kw)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\201C\227v\221f\202\252')
handle_start_tag(termref, {'def' : 'dt-content'})
handle_data('\223\340\227e')
handle_end_tag(termref)
handle_data('\202\360\202\340\202\275\202\310\202\242\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) \220\351\214\276\202\252')
handle_start_tag(nt, {'def' : 'NT-children'})
handle_data('children')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\201C\227v\221f\202\314')
handle_start_tag(termref, {'def' : 'dt-parentchild'})
handle_data('\216q\227v\221f')
handle_end_tag(termref)
handle_data('\202\314\225\300\202\321\202\252\201C\223\340\227e\203\202\203f\203\213\202\314\220\263\213K\225\\\214\273\202\311\202\346\202\301\202\304\220\266\220\254\202\263\202\352\202\351\214\276\214\352\202\311\221\256\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) \220\351\214\276\202\252')
handle_start_tag(nt, {'def' : 'NT-Mixed'})
handle_data('mixed')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\201C\227v\221f\202\314\223\340\227e\202\252')
handle_start_tag(termref, {'def' : 'dt-chardata'})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(termref)
handle_data('\213y\202\321')
handle_start_tag(termref, {'def' : 'dt-parentchild'})
handle_data('\216q\227v\221f')
handle_end_tag(termref)
handle_data('\202\251\202\347\202\310\202\351\201B\216q\227v\221f\202\314\227v\221f\214^\202\315\201C\227v\221f\202\314\223\340\227e\203\202\203f\203\213\202\311\217o\214\273\202\267\202\351\226\274\221O\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('d) \220\351\214\276\202\252')
handle_start_tag(kw, {})
handle_data('ANY')
handle_end_tag(kw)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\201C\202\307\202\314')
handle_start_tag(termref, {'def' : 'dt-parentchild'})
handle_data('\216q\227v\221f')
handle_end_tag(termref)
handle_data('\202\314\227v\221f\214^\202\340\220\351\214\276\202\263\202\352\202\304\202\242\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_end_tag(ulist)
handle_data('\012\012')
handle_end_tag(p)
handle_end_tag(vcnote)
handle_data('\012')
handle_comment(' with the new VC, I don\'t think the next few paras add anything -TWB\012<p><termdef id="dt-model" term="content model">An element can declared using a <term>content model</term>, in which case its content can be categorized as <termref def="dt-elemcontent">element content</termref> or <termref def=\'dt-mixed\'>mixed content</termref>, as explained below.</termdef></p>\012<p>An element whose type declared using the keyword <kw>EMPTY</kw> must be <termref def="dt-empty">empty</termref> and may be tagged using an <termref def="dt-eetag">empty-element tag</termref> when it appears in the document.</p>\012<p>If an element type is declared using the keyword <kw>ANY</kw>, then there are no validity constraints on its content:  it may contain <termref def=\'dt-parentchild\'>child elements</termref> of any type and number, interspersed with character data.</p> ')
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\227v\221f\220\351\214\276\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('\012')
handle_data('<')
handle_data('!ELEMENT br EMPTY>\012')
handle_data('<')
handle_data('!ELEMENT p (#PCDATA|emph)* >\012')
handle_data('<')
handle_data('!ELEMENT %name.para; %content.para; >\012')
handle_data('<')
handle_data('!ELEMENT container ANY>\012')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(div3, {'id' : 'sec-element-content'})
handle_start_tag(head, {})
handle_data('\227v\221f\223\340\227e')
handle_end_tag(head)
handle_data('\012\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-elemcontent', 'term' : 'Element content'})
handle_data('\202\240\202\351\214^\202\314\227v\221f\202\252')
handle_start_tag(termref, {'def' : 'dt-parentchild'})
handle_data('\216q')
handle_end_tag(termref)
handle_data('\227v\221f\202\276\202\257\202\360\212\334\202\336(\225\266\216\232\203f\201[\203^\202\360\212\334\202\334\202\310\202\242\201B)\202\306\202\253\201C\202\273\202\314\227v\221f')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\214^')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_start_tag(term, {})
handle_data('\227v\221f\223\340\227e')
handle_end_tag(term)
handle_data('\202\360\202\340\202\302\201C\202\306\202\242\202\244\201B')
handle_end_tag(termdef)
handle_data('\202\261\202\314\217\352\215\207\201C\220\247\226\361\202\315\201C\223\340\227e\203\202\203f\203\213\202\360\212\334\202\336\201B\223\340\227e\203\202\203f\203\213\202\315\201C\216q\227v\221f\202\314\214^\213y\202\321\216q\227v\221f\202\314\217o\214\273\217\207\217\230\202\360\220\247\214\344\202\267\202\351\212\310\222P\202\310\225\266\226@\202\306\202\267\202\351\201B\202\261\202\314\225\266\226@\202\315\201C')
handle_data('\223\340\227e\221f\216q')
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-cp'})
handle_data('cp')
handle_end_tag(nt)
handle_data('s)\202\251\202\347\202\310\202\351\201B')
handle_data('\223\340\227e\221f\216q')
handle_data('\202\315\201C\226\274\221O\201C')
handle_data('\223\340\227e\221f\216q')
handle_data('\202\314\221I\221\360\203\212\203X\203g\226\224\202\315')
handle_data('\223\340\227e\221f\216q')
handle_data('\202\314\227\361\203\212\203X\203g\202\251\202\347\215\\\220\254\202\263\202\352\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_start_tag(head, {})
handle_data('\227v\221f\223\340\227e\203\202\203f\203\213')
handle_end_tag(head)
handle_start_tag(prodgroup, {'pcw2' : '5.5', 'pcw4' : '16', 'pcw5' : '11'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-children'})
handle_start_tag(lhs, {})
handle_data('children')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-choice'})
handle_data('choice')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-seq'})
handle_data('seq')
handle_end_tag(nt)
handle_data(") ('?' | '*' | '+')?")
handle_end_tag(rhs)
handle_end_tag(prod)
handle_start_tag(prod, {'id' : 'NT-cp'})
handle_start_tag(lhs, {})
handle_data('cp')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-choice'})
handle_data('choice')
handle_end_tag(nt)
handle_data(' | ')
handle_start_tag(nt, {'def' : 'NT-seq'})
handle_data('seq')
handle_end_tag(nt)
handle_data(") ('?' | '*' | '+')?")
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-choice'})
handle_start_tag(lhs, {})
handle_data('choice')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data("'(' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('? cp ( ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '|' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('? ')
handle_start_tag(nt, {'def' : 'NT-cp'})
handle_data('cp')
handle_end_tag(nt)
handle_data(' )*')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? ')'")
handle_end_tag(rhs)
handle_start_tag(vc, {'def' : 'vc-PEinGroup'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-seq'})
handle_start_tag(lhs, {})
handle_data('seq')
handle_end_tag(lhs)
handle_start_tag(rhs, {})
handle_data("'(' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('? cp ( ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? ',' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('? ')
handle_start_tag(nt, {'def' : 'NT-cp'})
handle_data('cp')
handle_end_tag(nt)
handle_data(' )*')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? ')'")
handle_end_tag(rhs)
handle_start_tag(vc, {'def' : 'vc-PEinGroup'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_comment(' <prod id=\'NT-cps\'><lhs>cps</lhs><rhs><nt def=\'NT-S\'>S</nt>? <nt def=\'NT-cp\'>cp</nt> <nt def=\'NT-S\'>S</nt>?</rhs></prod>\012<prod id=\'NT-choice\'><lhs>choice</lhs><rhs>\'(\' <nt def=\'NT-S\'>S</nt>? <nt def=\'NT-ctokplus\'>ctokplus</nt> (<nt def=\'NT-S\'>S</nt>? \'|\' <nt def=\'NT-S\'>S</nt>? <nt def=\'NT-ctoks\'>ctoks</nt>)* <nt def=\'NT-S\'>S</nt>? \')\'</rhs></prod>\012<prod id="NT-ctokplus"><lhs>ctokplus</lhs><rhs><nt def="NT-cps">cps</nt>(\'|\' <nt def="NT-cps">cps</nt>)+</rhs></prod>\012<prod id="NT-ctoks"><lhs>ctoks</lhs><rhs><nt def="NT-cps">cps</nt>(\'|\' <nt def="NT-cps">cps</nt>)*</rhs></prod>\012<prod id=\'NT-seq\'><lhs>seq</lhs><rhs>\'(\' <nt def=\'NT-S\'>S</nt>?<nt def=\'NT-stoks\'>stoks</nt> (<nt def=\'NT-S\'>S</nt>? \',\' <nt def=\'NT-S\'>S</nt>? <nt def=\'NT-stoks\'>stoks</nt>)*<nt def=\'NT-S\'>S</nt>? \')\'</rhs></prod>\012<prod id="NT-stoks"><lhs>stoks</lhs><rhs><nt def="NT-cps">cps</nt>(\',\' <nt def="NT-cps">cps</nt>)*</rhs></prod>\012')
handle_data('\012')
handle_end_tag(prodgroup)
handle_end_tag(scrap)
handle_data('\012\202\261\202\261\202\305\201C')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-parentchild'})
handle_data('\216q')
handle_end_tag(termref)
handle_data('\202\306\202\265\202\304\217o\214\273\202\265\202\304\202\346\202\242\227v\221f\202\314\214^\202\360\216\246\202\267\201B\202\261\202\314\225\266\226@\202\305\221I\221\360\203\212\203X\203g\202\252\214\273\202\352\202\351\210\312\222u\202\305\202\315\201C\221I\221\360\203\212\203X\203g\223\340\202\314\202\242\202\270\202\352\202\314')
handle_data('\223\340\227e\221f\216q')
handle_data('\202\340')
handle_start_tag(termref, {'def' : 'dt-elemcontent'})
handle_data('\227v\221f\223\340\227e')
handle_end_tag(termref)
handle_data('\202\314\222\206\202\311\214\273\202\352\202\304\202\346\202\242\201B\227\361\203\212\203X\203g\202\311\214\273\202\352\202\351')
handle_data('\223\340\227e\221f\216q')
handle_data('\202\315\201C\203\212\203X\203g\202\305\216w\222\350\202\267\202\351\217\207\224\324\202\314\202\306\202\250\202\350\202\311\201C')
handle_start_tag(termref, {'def' : 'dt-elemcontent'})
handle_data('\227v\221f\223\340\227e')
handle_end_tag(termref)
handle_data('\202\311\214\273\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\226\274\221O\226\224\202\315\203\212\203X\203g\202\314\214\343\202\311\217o\214\273\202\267\202\351\203I\203v\203V\203\207\203\223\202\314\225\266\216\232')
handle_comment(' \226\345\224n\201Fcharacter\202\360\225\266\216\232\202\306\226\363\202\265\202\334\202\265\202\275 ')
handle_data('\202\315\201C\203\212\203X\203g\223\340\202\314\227v\221f\226\224\202\315')
handle_data('\223\340\227e\221f\216q')
handle_data('\202\252\201C1\211\361\210\310\217\343\224C\210\323\202\314\211\361\220\224(')
handle_start_tag(code, {})
handle_data('+')
handle_end_tag(code)
handle_data(')\201C0\211\361\210\310\217\343\224C\210\323\202\314\211\361\220\224(')
handle_start_tag(code, {})
handle_data('*')
handle_end_tag(code)
handle_data(')\226\224\202\3150\211\361\216\341\202\265\202\255\202\3151\211\361(')
handle_start_tag(code, {})
handle_data('?')
handle_end_tag(code)
handle_data(')\217o\214\273\211\302\224\\\202\310\202\261\202\306\202\360\213K\222\350\202\267\202\351\201B\202\261\202\261\202\305\216\246\202\267\215\\\225\266\213y\202\321\210\323\226\241\202\315\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\311\202\250\202\257\202\351\220\266\220\254\213K\221\245\202\305\227p\202\242\202\351\202\340\202\314\202\306\223\257\210\352\202\306\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_comment(' \226\345\224n\201F\217\343\202\314\225\266\202\305\202\315\201C\201gname\226\224\202\315list\202\314\214\343\202\311\221\261\202\255\225\266\216\232\201h\202\252\201glist\202\314\217o\214\273\202\360\213K\222\350\202\267\202\351\201h\202\306\202\240\202\301\202\304\201Cname\202\314\217o\214\273\202\360\213K\222\350\202\267\202\351\202\306\202\315\217\221\202\242\202\304\202\240\202\350\202\334\202\271\202\361\201B\217C\220\263\202\252\225K\227v\202\306\215l\202\246\202\334\202\267\201B ')
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\227v\221f\202\314\223\340\227e\202\252\223\340\227e\203\202\203f\203\213\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\314\202\315\201C\227\361\201C\221I\221\360\213y\202\321\214J\225\324\202\265\211\211\216Z\216q\202\311\202\265\202\275\202\252\202\301\202\304\201C\223\340\227e\202\314\222\206\202\314\227v\221f\202\306\223\340\227e\203\202\203f\203\213\223\340\202\314\227v\221f\214^\202\306\202\360')
handle_data('\203}\203b\203`')
handle_data('\202\263\202\271\202\310\202\252\202\347\201C\223\340\227e\203\202\203f\203\213\223\340\202\314\210\352\202\302\202\314\203p\203X\202\360\202\275\202\307\202\352\202\351\202\306\202\253\202\311\214\300\202\351\201B')
handle_start_tag(termref, {'def' : 'dt-compat'})
handle_data('\214\335\212\267\220\253\202\314\202\275\202\337')
handle_end_tag(termref)
handle_data('\201C\225\266\217\221\223\340\202\314\227v\221f\202\252\201C\223\340\227e\203\202\203f\203\213\202\311\202\250\202\257\202\351\227v\221f\214^\202\314\225\241\220\224\202\314\217o\214\273\210\312\222u\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\261\202\306\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\267\202\351\201B\217\332\215\327\202\310\213K\222\350\202\311\202\302\202\242\202\304\202\315\201C\225\215\221\256\217\221\202\314')
handle_start_tag(titleref, {'href' : 'determinism', 'xml-link' : 'simple'})
handle_data('\214\210\222\350\223I\223\340\227e\203\202\203f\203\213')
handle_end_tag(titleref)
handle_data('\202\314\215\200\202\360\216Q\217\306\201B\012')
handle_comment(' appendix <specref ref="determinism"/>. ')
handle_data('\012')
handle_comment(' appendix on deterministic content models. ')
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'vc-PEinGroup'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203O\203\213\201[\203v\213y\202\321\203p\203\211\203\201\203^\216\300\221\314\202\252\214\265\226\247\202\310\223\374\202\352\216q\202\360\202\310\202\265\202\304\202\242\202\351\202\261\202\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203p\203\211\203\201\203^\216\300\221\314\202\314')
handle_start_tag(termref, {'def' : 'dt-repltext'})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_data('\202\251\202\301\202\261')
handle_data('\202\305\210\315\202\334\202\352\202\275\203O\203\213\201[\203v\202\311\202\346\202\301\202\304\201C\214\265\226\247\202\310\223\374\202\352\216q\202\360\215\\\220\254\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\302\202\334\202\350\201C')
handle_start_tag(nt, {'def' : 'NT-choice'})
handle_data('\221I\221\360')
handle_end_tag(nt)
handle_data('\201C')
handle_start_tag(nt, {'def' : 'NT-seq'})
handle_data('\227\361')
handle_end_tag(nt)
handle_data('\226\224\202\315')
handle_start_tag(nt, {'def' : 'NT-Mixed'})
handle_data('\215\254\215\335')
handle_end_tag(nt)
handle_data('\225\224\225i\202\311\201C')
handle_data('\212J\202\253\202\251\202\301\202\261')
handle_data('\226\224\202\315')
handle_data('\225\302\202\266\202\251\202\301\202\261')
handle_data('\202\314\202\242\202\270\202\352\202\251\210\352\225\373\202\252')
handle_start_tag(termref, {'def' : 'dt-PERef'})
handle_data('\203p\203\211\203\201\203^\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\311\212\334\202\352\202\352\202\316\201C\221\274\225\373\202\340\223\257\202\266')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\311\212\334\202\334\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-interop'})
handle_data('\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337')
handle_end_tag(termref)
handle_data('\201C\203p\203\211\203\201\203^\216\300\221\314\216Q\217\306\202\252')
handle_start_tag(nt, {'def' : 'NT-choice'})
handle_data('\221I\221\360')
handle_end_tag(nt)
handle_data('\201C')
handle_start_tag(nt, {'def' : 'NT-seq'})
handle_data('\227\361')
handle_end_tag(nt)
handle_data('\226\224\202\315')
handle_start_tag(nt, {'def' : 'NT-Mixed'})
handle_data('\215\254\215\335')
handle_end_tag(nt)
handle_data('\223\340\227e\202\311\212\334\202\334\202\352\202\352\202\316\201C\202\273\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\315\213\363\202\305\202\310\202\242\202\261\202\306\202\252\226]\202\334\202\265\202\255\201C')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\314\220\346\223\252\213y\202\321\226\226\224\366\202\314\213\363\224\222\202\305\202\310\202\242\225\266\216\232\202\315\201C\203R\203l\203N\203^(')
handle_start_tag(code, {})
handle_data('|')
handle_end_tag(code)
handle_data('\226\224\202\315')
handle_start_tag(code, {})
handle_data(',')
handle_end_tag(code)
handle_data(')\202\305\202\310\202\242\225\373\202\252\202\346\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227v\221f\223\340\227e\203\202\203f\203\213\202\314\202\242\202\255\202\302\202\251\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('!ELEMENT spec (front, body, back?)>\012')
handle_data('<')
handle_data('!ELEMENT div1 (head, (p | list | note)*, div2*)>\012')
handle_data('<')
handle_data('!ELEMENT dictionary-body (%div.mix; | %dict.mix;)*>')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012\012')
handle_start_tag(div3, {'id' : 'sec-mixed-content'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\215\254\215\207\223\340\227e')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-mixed', 'term' : 'Mixed Content'})
handle_data('\202\240\202\351\227v\221f\214^\202\314\227v\221f\223\340\202\311\201C')
handle_start_tag(termref, {'def' : 'dt-parentchild'})
handle_data('\216q')
handle_end_tag(termref)
handle_data('\227v\221f\202\311\215\254\215\335\202\265\202\304\225\266\216\232\203f\201[\203^\202\252\212\334\202\334\202\352\202\351\211\302\224\\\220\253\202\252\202\240\202\351\202\306\202\253\201C\202\273\202\314\227v\221f')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\214^')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_start_tag(term, {})
handle_data('\215\254\215\207\223\340\227e')
handle_end_tag(term)
handle_data('\202\360\202\340\202\302\202\306\202\242\202\244\201B')
handle_end_tag(termdef)
handle_data('\202\261\202\314\217\352\215\207\201C\216q\227v\221f\202\314\214^\202\311\202\302\202\242\202\304\202\314\220\247\226\361\202\252\221\266\215\335\202\265\202\304\202\340\202\346\202\242')
handle_comment(' \226\345\224n\201F\201gmay be constrained\201h\202\360\222P\202\311\201u\220\247\226\361\202\263\202\352\202\351\201v\202\306\226\363\202\265\202\334\202\265\202\275\201B ')
handle_data('\202\252\201C\216q\227v\221f\202\314\217\207\217\230\226\224\202\315\217o\214\273\211\361\220\224\202\311\202\302\202\242\202\304\202\314\220\247\226\361\202\315\202\310\202\242\202\306\202\267\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\215\254\215\207\223\340\227e')
handle_data('\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '5.5', 'pcw4' : '16', 'pcw5' : '11'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Mixed'})
handle_start_tag(lhs, {})
handle_data('Mixed')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'(' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? \012'#PCDATA'\012(")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? \012'|' \012")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('? \012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(')* \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? \012')*' ")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| '(' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '#PCDATA' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? ')'\012")
handle_end_tag(rhs)
handle_start_tag(vc, {'def' : 'vc-PEinGroup'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(vc, {'def' : 'vc-MixedChildrenUnique'})
handle_end_tag(vc)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_comment('\012<prod id="NT-Mtoks"><lhs>Mtoks</lhs>\012<rhs><nt def="NT-Name">Name</nt>\012(<nt def=\'NT-S\'>S</nt>? \012\'|\' \012<nt def=\'NT-S\'>S</nt>? \012<nt def="NT-Name">Name</nt>)*\012</rhs>\012</prod>\012')
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\202\261\202\261\202\305\201C')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C\216q\202\306\202\265\202\304\217o\214\273\202\265\202\304\202\340\202\346\202\242\227v\221f\202\314\214^\202\360\216\246\202\267\201B\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'vc-MixedChildrenUnique'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\227v\221f\214^\202\314\217d\225\241\202\314\213\326\216~')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\210\352\202\302\202\314')
handle_data('\215\254\215\207\223\340\227e')
handle_data('\220\351\214\276\223\340\202\311\201C\223\257\202\266\226\274\221O\202\252\225\241\220\224\211\361\217o\214\273\202\265\202\304\202\315\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\215\254\215\207\223\340\227e')
handle_data('\220\351\214\276\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('!ELEMENT p (#PCDATA|a|ul|b|i|em)*>\012')
handle_data('<')
handle_data('!ELEMENT p (#PCDATA | %font; | %phrase; | %special; | %form;)* >\012')
handle_data('<')
handle_data('!ELEMENT b (#PCDATA)>')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012\012')
handle_start_tag(div2, {'id' : 'attdecls'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\221\256\220\253\203\212\203X\203g\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termref, {'def' : 'dt-attr'})
handle_data('\221\256\220\253')
handle_end_tag(termref)
handle_data('\202\315\201C\226\274\221O\213y\202\321\222l\202\314\221\316\202\360')
handle_start_tag(termref, {'def' : 'dt-element'})
handle_data('\227v\221f')
handle_end_tag(termref)
handle_data('\202\311\212\326\230A\225t\202\257\202\351\202\275\202\337\202\311\227p\202\242\202\351\201B\221\256\220\253\216w\222\350\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(termref)
handle_data('\226\224\202\315')
handle_start_tag(termref, {'def' : 'dt-eetag'})
handle_data('\213\363\227v\221f')
handle_end_tag(termref)
handle_data('\203^\203O\223\340\202\305\202\276\202\257\211\302\224\\\202\306\202\267\202\351\201B\202\265\202\275\202\252\202\301\202\304\201C\221\256\220\253\202\360\224F\216\257\202\267\202\351\202\275\202\337\202\314\220\266\220\254\213K\221\245\202\315\201C')
handle_start_tag(titleref, {'href' : 'sec-starttags'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(titleref)
handle_data('\202\311\202\302\202\242\202\304\202\314\213K\222\350\202\305\216\246\202\267\201B\221\256\220\253\203\212\203X\203g\220\351\214\276\202\315\201C\216\237\202\314\226\332\223I\202\305\227p\202\242\202\351\201B\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) \202\240\202\351\227v\221f\214^\202\311\223K\227p\202\267\202\351\221\256\220\253\202\314\217W\215\207\202\360\213K\222\350\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) \221\256\220\253\202\326\202\314\214^\220\247\226\361\202\360\220\335\222\350\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) \221\256\220\253\202\314')
handle_start_tag(termref, {'def' : 'dt-default'})
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_end_tag(termref)
handle_data('\202\360\213K\222\350\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-attdecl', 'term' : 'Attribute-List Declaration'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\221\256\220\253\203\212\203X\203g\220\351\214\276')
handle_end_tag(term)
handle_data('\202\315\201C\202\240\202\351\227v\221f\214^\202\306\212\326\230A\225t\202\257\202\347\202\352\202\275\212e\221\256\220\253\202\311\221\316\202\265\201C\226\274\221O\201C\203f\201[\203^\214^\213y\202\321(\221\266\215\335\202\267\202\352\202\316)')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\360\213K\222\350\202\267\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\221\256\220\253\203\212\203X\203g\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-AttlistDecl'})
handle_start_tag(lhs, {})
handle_data('AttlistDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("!ATTLIST' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-AttDef'})
handle_data('AttDef')
handle_end_tag(nt)
handle_data('*\012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '")
handle_data('>')
handle_data("'")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-AttDef'})
handle_start_tag(lhs, {})
handle_data('AttDef')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-AttType'})
handle_data('AttType')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Default'})
handle_data('Default')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\012')
handle_start_tag(nt, {'def' : 'NT-AttlistDecl'})
handle_data('AttlistDecl')
handle_end_tag(nt)
handle_data('\213K\221\245\202\311\221\266\215\335\202\267\202\351')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C\227v\221f\214^\202\314\226\274\221O\202\306\202\267\202\351\201B')
handle_data('\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
handle_data('\201C\220\351\214\276\202\265\202\304\202\242\202\310\202\242\227v\221f\214^\202\311\221\316\202\265\221\256\220\253\202\360\220\351\214\276\202\265\202\275\202\310\202\347\202\316\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\214x\215\220\202\360\217o\202\265\202\304\202\340\202\346\202\242\201B\202\265\202\251\202\265\201C\202\261\202\352\202\315')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\315\202\265\202\310\202\242\201B\012')
handle_start_tag(nt, {'def' : 'NT-AttDef'})
handle_data('AttDef')
handle_end_tag(nt)
handle_data('\213K\221\245\202\311\202\250\202\257\202\351')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C\221\256\220\253\202\314\226\274\221O\202\306\202\267\202\351\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\202\240\202\351\227v\221f\202\311\221\316\202\265\202\304\201C\225\241\220\224\202\314')
handle_start_tag(nt, {'def' : 'NT-AttlistDecl'})
handle_data('AttlistDecl')
handle_end_tag(nt)
handle_data('\202\360\227^\202\246\202\351\217\352\215\207\201C\202\261\202\352\202\347\202\267\202\327\202\304\202\314\223\340\227e\202\315\203}\201[\203W\202\267\202\351\201B\202\240\202\351\227v\221f\214^\202\314\223\257\202\266\221\256\220\253\202\311\201C\225\241\220\224\202\314\222\350\213`\202\360\227^\202\246\202\351\217\352\215\207\202\311\202\315\201C\215\305\217\211\202\314\220\351\214\276\202\360\227L\214\370\202\306\202\265\201C\221\274\202\314\220\351\214\276\202\315\226\263\216\213\202\267\202\351\201B')
handle_start_tag(termref, {'def' : 'dt-interop'})
handle_data('\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337\202\311')
handle_end_tag(termref)
handle_data('\201CDTD\202\314\215\354\220\254\216\322\202\315\201C\202\240\202\351\227v\221f\214^\202\311\202\315\215\202\201X\210\352\202\302\202\314\221\256\220\253\203\212\203X\203g\220\351\214\276\202\265\202\251\227^\202\246\202\310\202\242\201C\202\240\202\351\221\256\220\253\226\274\202\311\202\315\215\202\201X\210\352\202\302\202\314\221\256\220\253\222\350\213`\202\265\202\251\227^\202\246\202\310\202\242\201C\213y\202\321\202\267\202\327\202\304\202\314\221\256\220\253\203\212\203X\203g\220\351\214\276\202\311\202\315\217\255\202\310\202\255\202\306\202\340\210\352\202\302\202\314\221\256\220\253\222\350\213`\202\360\227^\202\246\202\351\201C\202\306\202\242\202\244\221I\221\360\202\360\202\265\202\304\202\340\202\346\202\242\201B\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337\202\311\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C')
handle_data('\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
handle_data('\201C\202\240\202\351\227v\221f\214^\202\311\225\241\220\224\202\314\221\256\220\253\203\212\203X\203g\220\351\214\276\202\360\227^\202\246\202\275\202\350\201C\202\240\202\351\221\256\220\253\202\311\225\241\220\224\202\314\221\256\220\253\222\350\213`\202\360\227^\202\246\202\275\202\350\202\265\202\275\202\306\202\253\202\311\201C\214x\215\220\202\360\217o\202\265\202\304\202\340\202\346\202\242\201B\202\265\202\251\202\265\201C\202\261\202\352\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\315\202\265\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(div3, {'id' : 'sec-attribute-types'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\221\256\220\253\202\314\214^')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012XML\202\314\221\256\220\253\202\314\214^\202\315\201C\202R\216\355\227\336\202\306\202\267\202\351\201B\202\261\202\352\202\347\202\315\201C')
handle_data('\225\266\216\232\227\361')
handle_data('\214^\201C')
handle_data('\203g\201[\203N\203\223')
handle_data('\211\273\214^\213y\202\321\227\361\213\223\214^\202\306\202\267\202\351\201B')
handle_data('\225\266\216\232\227\361')
handle_data('\214^\202\315\201C\222l\202\306\202\265\202\304\224C\210\323\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\360\202\306\202\351\201B')
handle_data('\203g\201[\203N\203\223')
handle_data('\211\273\214^\202\315\201C\216\237\202\311\216\246\202\267\216\232\213\345\213y\202\321\210\323\226\241\202\311\212\326\202\267\202\351\227l\201X\202\310\220\247\226\361\202\360\202\340\202\302\201B\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('Attribute Types')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw4' : '14', 'pcw5' : '11.5'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-AttType'})
handle_start_tag(lhs, {})
handle_data('AttType')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-StringType'})
handle_data('StringType')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-TokenizedType'})
handle_data('TokenizedType')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-EnumeratedType'})
handle_data('EnumeratedType')
handle_end_tag(nt)
handle_data('\012')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-StringType'})
handle_start_tag(lhs, {})
handle_data('StringType')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'CDATA'")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-TokenizedType'})
handle_start_tag(lhs, {})
handle_data('TokenizedType')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'ID'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'id'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(vc, {'def' : 'one-id-per-el'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(vc, {'def' : 'id-default'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| 'IDREF'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'idref'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| 'IDREFS'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'idref'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| 'ENTITY'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'entname'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| 'ENTITIES'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'entname'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| 'NMTOKEN'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'nmtok'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| 'NMTOKENS'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'nmtok'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'id'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('ID')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\202\261\202\314\214^\202\314\222l\202\315\201C\220\266\220\254\213K\221\245')
handle_start_tag(code, {})
handle_data('Name')
handle_end_tag(code)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\210\352\202\302\202\314XML\225\266\217\221\223\340\202\305\202\315\201C\210\352\202\302\202\314\226\274\221O\202\252\201C\202\261\202\314\214^\202\314\222l\202\306\202\265\202\304\225\241\220\224\211\361\214\273\202\352\202\304\202\315\202\310\202\347\202\310\202\242\201B\202\302\202\334\202\350\201CID\202\314\222l\202\315\201C\227v\221f\202\360\210\352\210\323\202\311')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'one-id-per-el'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('1\227v\221f\202\262\202\306\202\3111ID')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\227v\221f\214^\202\315\201C\225\241\220\224\202\314ID\221\256\220\253\222l\202\360\202\340\202\301\202\304\202\315\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'id-default'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('ID\221\256\220\253\202\314')
handle_data('\203f\203t\203H\203\213\203g')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012ID\221\256\220\253\202\315\201C')
handle_data('\203f\203t\203H\203\213\203g')
handle_data('\202\306\202\265\202\304\201C')
handle_start_tag(code, {})
handle_data('#IMPLIED')
handle_end_tag(code)
handle_data('\226\224\202\315')
handle_start_tag(code, {})
handle_data('#REQUIRED')
handle_end_tag(code)
handle_data('\202\360\220\351\214\276\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'idref'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('IDREF')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(kw, {})
handle_data('IDREF')
handle_end_tag(kw)
handle_data('\214^\202\314\222l\202\315\201C\220\266\220\254\213K\221\245')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_start_tag(kw, {})
handle_data('IDREFS')
handle_end_tag(kw)
handle_data('\214^\202\314\222l\202\315\201C\220\266\220\254\213K\221\245')
handle_start_tag(nt, {'def' : 'NT-Names'})
handle_data('Names')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\212e\201X\202\314')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201CXML\225\266\217\221\223\340\202\311\221\266\215\335\202\267\202\351\227v\221f\202\314ID\221\256\220\253\202\314\222l\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\302\202\334\202\350\201C')
handle_start_tag(kw, {})
handle_data('IDREF')
handle_end_tag(kw)
handle_data('\202\314\222l\202\315\201C\202\240\202\351ID\221\256\220\253\202\314\222l\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'entname'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\226\274')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(kw, {})
handle_data('ENTITY')
handle_end_tag(kw)
handle_data('\214^\202\314\222l\202\315\201C\220\266\220\254\213K\221\245')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_start_tag(kw, {})
handle_data('ENTITIES')
handle_end_tag(kw)
handle_data('\214^\202\314\222l\202\315\201C\220\266\220\254\213K\221\245')
handle_start_tag(nt, {'def' : 'NT-Names'})
handle_data('Names')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\212e\201X\202\314')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('DTD')
handle_end_tag(termref)
handle_data('\202\305\220\351\214\276\202\267\202\351')
handle_start_tag(termref, {'def' : 'dt-unparsed'})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'nmtok'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\226\274\221O')
handle_data('\203g\201[\203N\203\223')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(kw, {})
handle_data('NMTOKEN')
handle_end_tag(kw)
handle_data('\214^\202\314\222l\202\315\201C\224\361\217I\222[\213L\215\206')
handle_start_tag(termref, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(termref)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351')
handle_data('\225\266\216\232\227\361')
handle_data('\202\251\202\347\215\\\220\254\202\263\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_start_tag(kw, {})
handle_data('NMTOKENS')
handle_end_tag(kw)
handle_data('\214^\202\314\222l\202\315\201C\224\361\217I\222[\213L\215\206')
handle_start_tag(termref, {'def' : 'NT-Nmtokens'})
handle_data('Nmtokens')
handle_end_tag(termref)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351')
handle_data('\225\266\216\232\227\361')
handle_data('\202\251\202\347\215\\\220\254\202\263\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\221\256\220\253\222l\202\360\223n\202\267\221O\202\311\201C')
handle_start_tag(titleref, {'href' : 'AVNormalize'})
handle_data('\221\256\220\253\222l\202\314\220\263\213K\211\273')
handle_end_tag(titleref)
handle_data('\202\305\213K\222\350\202\267\202\351\202\306\202\250\202\350\202\311\201C\221\256\220\253\222l\202\360\220\263\213K\211\273\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-enumerated', 'term' : 'Enumerated Attribute Values'})
handle_start_tag(term, {})
handle_data('\227\361\213\223\214^\202\314\221\256\220\253')
handle_end_tag(term)
handle_data('\202\315\201C\220\351\214\276\202\265\202\275\222l\202\314\210\352\202\302\202\360\216\346\202\351\202\261\202\306\202\252\202\305\202\253\202\351\201B')
handle_end_tag(termdef)
handle_data('\227\361\213\223\214^\202\311\202\315\201C2\216\355\227\336\202\240\202\351\201B\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\227\361\213\223\221\256\220\253\202\314\214^')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-EnumeratedType'})
handle_start_tag(lhs, {})
handle_data('EnumeratedType')
handle_end_tag(lhs)
handle_data(' \012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-NotationType'})
handle_data('NotationType')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-Enumeration'})
handle_data('Enumeration')
handle_end_tag(nt)
handle_data('\012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-NotationType'})
handle_start_tag(lhs, {})
handle_data('NotationType')
handle_end_tag(lhs)
handle_data(' \012')
handle_start_tag(rhs, {})
handle_data("'NOTATION' \012")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(" \012'(' \012")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('?  \012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \012(')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '|' ")
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(')*\012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? ')'\012")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'notatn'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Enumeration'})
handle_start_tag(lhs, {})
handle_data('Enumeration')
handle_end_tag(lhs)
handle_data(' \012')
handle_start_tag(rhs, {})
handle_data("'(' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('?\012')
handle_start_tag(nt, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(nt)
handle_data(' \012(')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '|' \012")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('?  \012')
handle_start_tag(nt, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(nt)
handle_data(')* \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? \012')'")
handle_end_tag(rhs)
handle_data(' \012')
handle_start_tag(vc, {'def' : 'enum'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'notatn'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213L\226@\221\256\220\253')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314\214^\202\314\222l\202\315\201C\220\351\214\276\202\265\202\304\202\242\202\351')
handle_start_tag(titleref, {'href' : 'Notations'})
handle_data('\213L\226@')
handle_end_tag(titleref)
handle_data('\202\314\226\274\221O\202\314\210\352\202\302\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\302\202\334\202\350\201C\220\351\214\276\202\311\221\266\215\335\202\267\202\351\213L\226@\226\274\202\315\201C\202\267\202\327\202\304\220\351\214\276\202\263\202\352\202\304\202\242\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(vcnote, {'id' : 'enum'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\227\361\213\223')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\202\261\202\314\214^\202\314\222l\202\315\201C\220\351\214\276\202\311\221\266\215\335\202\267\202\351')
handle_start_tag(nt, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(nt)
handle_data('\203g\201[\203N\203\223')
handle_data('\202\314\210\352\202\302\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termref, {'def' : 'dt-interop'})
handle_data('\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337')
handle_end_tag(termref)
handle_data('\201C\223\257\202\266')
handle_start_tag(nt, {'def' : 'NT-Nmtoken'})
handle_data('Nmtoken')
handle_end_tag(nt)
handle_data('\202\315\201C\222P\210\352\227v\221f\214^\202\314\227\361\213\223\214^\202\314\221\256\220\253\202\306\202\265\202\304\201C\225\241\220\224\211\361\214\273\202\352\202\310\202\242\225\373\202\252\202\346\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012\012')
handle_start_tag(div3, {'id' : 'sec-attr-defaults'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\221\256\220\253\202\314')
handle_data('\203f\203t\203H\203\213\203g')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termref, {'def' : 'dt-attdecl'})
handle_data('\221\256\220\253\220\351\214\276')
handle_end_tag(termref)
handle_data('\202\315\201C\221\256\220\253\202\314\216w\222\350\202\252\225K\220{\202\251\202\307\202\244\202\251\202\311\202\302\202\242\202\304\202\314\217\356\225\361\202\360\227^\202\246\202\351\201B\225K\220{\202\305\202\310\202\242\217\352\215\207\202\311\202\315\201C\225\266\217\221\223\340\202\305\221\256\220\253\202\360\216w\222\350\202\265\202\310\202\242\202\306\202\253\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\314\217\210\227\235\225\373\226@\202\314\217\356\225\361\202\340\227^\202\246\202\351\201B\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\221\256\220\253\202\314')
handle_data('\203f\203t\203H\203\213\203g')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw4' : '14', 'pcw5' : '11.5'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Default'})
handle_start_tag(lhs, {})
handle_data('Default')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'#REQUIRED' \012|")
handle_data('\240')
handle_data("'#IMPLIED' ")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| (('#FIXED' S)? ")
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data(')')
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'defattrvalid'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'CleanAttrVals'})
handle_end_tag(wfc)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_comment(' improved by bosak\012<scrap lang=\'ebnf\'>\012<head>Attribute Defaults</head>\012<prod id=\'NT-Default\'><lhs>Default</lhs>\012<rhs>\'#REQUIRED\' \012|&nbsp;\'#IMPLIED\' </rhs>\012<vc def=\'defattrvalid\'/>\012<wfc def="CleanAttrVals"/>\012<rhs>| ((\'#FIXED\' S)? <nt def=\'NT-AttValue\'>AttValue</nt>)</rhs>\012</prod>\012</scrap>')
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'defattrvalid'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\221\256\220\253')
handle_data('\203f\203t\203H\203\213\203g')
handle_data('\202\314\220\263\202\265\202\263')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\220\351\214\276\202\265\202\275')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\315\201C\220\351\214\276\202\265\202\275\221\256\220\253\214^\202\314\216\232\213\345\220\247\226\361\202\360\226\236\202\275\202\263\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(kw, {})
handle_data('#REQUIRED')
handle_end_tag(kw)
handle_data('\202\360\216w\222\350\202\265\202\275\202\306\202\253\201C\202\261\202\314\227v\221f\214^\202\314')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(termref)
handle_data('\202\305\202\240\202\301\202\304\201C\202\261\202\314\221\256\220\253\202\311\222l\202\360\227^\202\246\202\310\202\242\202\340\202\314\202\360XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\214\251\202\302\202\257\202\275\202\310\202\347\202\316\201C\202\273\202\314\225\266\217\221\202\315')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226')
handle_end_tag(termref)
handle_data('\202\306\202\315\202\265\202\310\202\242\201B')
handle_start_tag(kw, {})
handle_data('#IMPLIED')
handle_end_tag(kw)
handle_data('\202\360\216w\222\350\202\265\202\275\202\306\202\253\201C\202\261\202\314\221\256\220\253\202\360\217\310\227\252\202\265\202\275\202\347\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\221\256\220\253\222l\202\360\216w\222\350\202\265\202\310\202\242\202\261\202\306\202\360\203A\203v\203\212\203P\201[\203V\203\207\203\223\202\311\223`\202\246\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\261\202\314\202\306\202\253\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\314\220U\225\221\202\242\202\311\202\302\202\242\202\304\202\314\220\247\226\361\202\315\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-default', 'term' : 'Attribute Default'})
handle_data('\012\221\256\220\253\202\252')
handle_start_tag(kw, {})
handle_data('#REQUIRED')
handle_end_tag(kw)
handle_data('\202\305\202\340')
handle_start_tag(kw, {})
handle_data('#IMPLIED')
handle_end_tag(kw)
handle_data('\202\305\202\340\202\310\202\242\202\306\202\253\202\311\202\315\201C')
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data('\202\314\222l\202\252\201C')
handle_start_tag(term, {})
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_end_tag(term)
handle_data('\202\306\202\310\202\351\201B')
handle_start_tag(kw, {})
handle_data('#FIXED')
handle_end_tag(kw)
handle_data('\202\314\217\352\215\207\201C')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\306\210\331\202\310\202\351\222l\202\252\216w\222\350\202\263\202\352\202\352\202\316\201C\202\273\202\314\225\266\217\221\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226')
handle_end_tag(termref)
handle_data('\202\306\202\265\202\310\202\242\201B')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\360\220\351\214\276\202\265\202\304\202\242\202\351\217\352\215\207\201C\202\261\202\314\221\256\220\253\202\314\217\310\227\252\202\360\214\251\202\302\202\257\202\275\202\347\201C\220\351\214\276\202\265\202\275')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\360\221\256\220\253\222l\202\311\216w\222\350\202\265\202\304\202\242\202\351\202\306\202\265\202\304\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\220U\202\351\225\221\202\244\202\261\202\306\202\252\226]\202\334\202\265\202\242\201B\012')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\221\256\220\253\203\212\203X\203g\220\351\214\276\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('!ATTLIST termdef\012          id      ID      #REQUIRED\012          name    CDATA   #IMPLIED>\012')
handle_data('<')
handle_data('!ATTLIST list\012          type    (bullets|ordered|glossary)  "ordered">\012')
handle_data('<')
handle_data('!ATTLIST form\012          method  CDATA   #FIXED "POST">')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012\012')
handle_start_tag(div3, {'id' : 'AVNormalize'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\221\256\220\253\222l\202\314\220\263\213K\211\273')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\221\256\220\253\222l\202\360')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\223n\202\267\221O\202\311\201C\216\237\202\314\202\306\202\250\202\350\202\311\220\263\213K\211\273\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('a) \202\334\202\270\201C\221\256\220\253\222l\213y\202\321\202\273\202\314\222\206\202\314\216\300\221\314\223\340\202\305\201C\215s\226\226\226\224\202\315\215s\213\253\212E(\226\224\202\315\203V\203X\203e\203\200\202\311\202\346\202\301\202\304\202\315\203\214\203R\201[\203h\213\253\212E)\202\306\202\265\202\304\216g\202\355\202\352\202\351')
handle_data('\225\266\216\232\227\361')
handle_data('\202\360\201C')
handle_data('\203X\203y\201[\203X\225\266\216\232')
handle_data('(#x20)\210\352\202\302\202\311\222u\202\253\212\267\202\246\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242(\201u')
handle_start_tag(titleref, {'href' : 'sec-line-ends', 'xml-link' : 'simple'})
handle_data('\215s\226\226\202\314\210\265\202\242')
handle_end_tag(titleref)
handle_data('\201v\202\340\216Q\217\306\202\314\202\261\202\306\201B)\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('b) \216\237\202\311\201C\225\266\216\232\216Q\217\306\213y\202\321\223\340\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\326\202\314\216Q\217\306\202\315\201C\223W\212J\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\212O\225\224\216\300\221\314\202\326\202\314\216Q\217\306\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('c) \215\305\214\343\202\311\201C\221\256\220\253\202\314\214^\202\252')
handle_start_tag(kw, {})
handle_data('CDATA')
handle_end_tag(kw)
handle_data('\202\305\202\310\202\257\202\352\202\316\201C\213\363\224\222')
handle_data('\225\266\216\232\227\361')
handle_data('\202\315\201C\202\267\202\327\202\304')
handle_data('\203X\203y\201[\203X\225\266\216\232')
handle_data('(#x20)\210\352\202\302\202\311\220\263\213K\211\273\202\265\201C\216c\202\350\202\314\213\363\224\222\225\266\216\232\202\315\201C\215\355\217\234\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012\012')
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\265\202\310\202\242')
handle_data('\203p\201[\203T')
handle_data('\202\315\201C\220\351\214\276\202\252\214\251\202\302\202\251\202\347\202\310\202\242\221\256\220\253\202\315\201C\202\267\202\327\202\304\201C')
handle_start_tag(kw, {})
handle_data('CDATA')
handle_end_tag(kw)
handle_data('\202\360\220\351\214\276\202\265\202\304\202\242\202\351\202\306\202\265\202\304\210\265\202\244\202\261\202\306\202\252\226]\202\334\202\265\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'sec-condition-sect'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-cond-section', 'term' : 'conditional section'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223')
handle_end_tag(term)
handle_data('\202\306\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('\225\266\217\221\214^\220\351\214\276\202\314\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_end_tag(termref)
handle_data('\202\314\210\352\225\224\202\306\202\265\201C\220\247\214\344\203L\201[\203\217\201[\203h\202\314\216w\222\350\202\311\202\346\202\301\202\304\201CDTD\202\314\230_\227\235\215\\\221\242\202\311\212\334\202\337\202\275\202\350\201C\217\234\202\242\202\275\202\350\202\267\202\351\225\224\225\252\202\306\202\267\202\351\201B\012')
handle_end_tag(termdef)
handle_data('\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '9', 'pcw4' : '14.5'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-conditionalSect'})
handle_start_tag(lhs, {})
handle_data('conditionalSect')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-includeSect'})
handle_data('includeSect')
handle_end_tag(nt)
handle_data('\012| ')
handle_start_tag(nt, {'def' : 'NT-ignoreSect'})
handle_data('ignoreSect')
handle_end_tag(nt)
handle_data('\012')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-includeSect'})
handle_start_tag(lhs, {})
handle_data('includeSect')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("![' S? 'INCLUDE' S? '[' \012")
handle_comment(' (<nt def=\'NT-markupdecl\'>markupdecl</nt> \012      | <nt def="NT-conditionalSect">conditionalSect</nt>  \012      | <nt def="NT-S">S</nt>)*\012')
handle_data('\012')
handle_start_tag(nt, {'def' : 'NT-extSubset'})
handle_data('extSubset')
handle_end_tag(nt)
handle_data("\012']]")
handle_data('>')
handle_data("'\012")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-ignoreSect'})
handle_start_tag(lhs, {})
handle_data('ignoreSect')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("![' S? 'IGNORE' S? '[' \012")
handle_start_tag(nt, {'def' : 'NT-ignoreSectContents'})
handle_data('ignoreSectContents')
handle_end_tag(nt)
handle_data("*\012']]")
handle_data('>')
handle_data("'")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-ignoreSectContents'})
handle_start_tag(lhs, {})
handle_data('ignoreSectContents')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Ignore'})
handle_data('Ignore')
handle_end_tag(nt)
handle_data("\012('")
handle_data('<')
handle_data("![' ")
handle_start_tag(nt, {'def' : 'NT-ignoreSectContents'})
handle_data('ignoreSectContents')
handle_end_tag(nt)
handle_data("\012']]")
handle_data('>')
handle_data("' \012")
handle_start_tag(nt, {'def' : 'NT-Ignore'})
handle_data('Ignore')
handle_end_tag(nt)
handle_data(')*')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Ignore'})
handle_start_tag(lhs, {})
handle_data('Ignore')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data('* - \012(')
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data("* ('")
handle_data('<')
handle_data("![' | ']]")
handle_data('>')
handle_data("') \012")
handle_start_tag(nt, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(nt)
handle_data('*)\012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_comment('<rhs>\012((<nt def=\'NT-SkipLit\'>SkipLit</nt> \012| <nt def=\'NT-Comment\'>Comment</nt>\012| <nt def=\'NT-PI\'>PI</nt>) - \012(<nt def=\'NT-Char\'>Char</nt>* \']]&gt;\' <nt def=\'NT-Char\'>Char</nt>*))\012| (\'&lt;![\' <nt def=\'NT-ignoreSectContents\'>ignoreSectContents</nt>*\012\']]&gt;\')\012</rhs>\012<rhs>\012| (<nt def=\'NT-Char\'>Char</nt> - (\']\' | [&lt;\'"]))\012</rhs>\012<rhs>\012| (\'&lt;!\' (<nt def=\'NT-Char\'>Char</nt> - (\'-\' | \'[\')))\012</rhs>')
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\315\201CDTD\202\314\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\213y\202\321\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\306\223\257\227l\202\311\201C\212\256\221S\202\310\220\351\214\276\201C\203R\203\201\203\223\203g\226\224\202\315\223\374\202\352\216q\202\311\202\310\202\301\202\275\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\360\201C\202\242\202\255\202\302\202\251\212\334\202\361\202\305\202\346\202\242\201B\202\261\202\352\202\347\202\314\212\324\202\311\201C\213\363\224\222\202\252\214\273\202\352\202\304\202\340\202\346\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\314\203L\201[\203\217\201[\203h\202\252')
handle_start_tag(code, {})
handle_data('INCLUDE')
handle_end_tag(code)
handle_data('\202\310\202\347\202\316\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\202\261\202\314\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\314\223\340\227e\202\360\201C\225\266\217\221\202\314\210\352\225\224\202\306\202\265\202\304\210\265\202\355\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\314\203L\201[\203\217\201[\203h\202\252')
handle_start_tag(code, {})
handle_data('IGNORE')
handle_end_tag(code)
handle_data('\202\310\202\347\202\316\201C\202\273\202\314\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\314\223\340\227e\202\315\201C\225\266\217\221\202\314\210\352\225\224\202\306\202\265\202\304\210\265\202\355\202\310\202\242\201B\215\\\225\266\211\360\220\315\202\360\220\263\202\265\202\255\215s\202\244\202\275\202\337\202\311\202\315\201C\226\263\216\213\202\267\202\351\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223(IGNORE)\202\311\212\326\202\265\202\304\202\340\201C\223\340\227e\202\360\223\307\202\334\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\202\261\202\306\202\311\222\215\210\323\202\267\202\351\202\261\202\306\201B\202\261\202\352\202\315\201C\223\374\202\352\216q\202\311\202\310\202\301\202\275\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\360\214\251\202\302\202\257\201C(\226\263\216\213\202\267\202\351)\215\305\202\340\212O\221\244\202\314\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\360\220\263\202\265\202\255\214\237\217o\202\267\202\351\202\275\202\337\202\306\202\267\202\351\201B\203L\201[\203\217\201[\203h\202\360')
handle_start_tag(code, {})
handle_data('INCLUDE')
handle_end_tag(code)
handle_data('\202\306\202\267\202\351\217\254\202\263\202\310\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\252\201C\203L\201[\203\217\201[\203h\202\360')
handle_start_tag(code, {})
handle_data('IGNORE')
handle_end_tag(code)
handle_data('\202\306\202\267\202\351\202\346\202\350\221\345\202\253\202\310\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\311\212\334\202\334\202\352\202\351\202\310\202\347\202\316\201C\212O\221\244\213y\202\321\223\340\221\244\202\314\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\314\227\274\225\373\202\306\202\340\226\263\216\213\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\314\203L\201[\203\217\201[\203h\202\252\203p\203\211\203\201\203^\216\300\221\314\216Q\217\306\202\310\202\347\202\316\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\217\360\214\217\225t\202\253\203Z\203N\203V\203\207\203\223\202\314\210\265\202\242\202\360\224\273\222f\202\267\202\351\221O\202\311\201C\202\261\202\314\203p\203\211\203\201\203^\216\300\221\314\202\360\223W\212J\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\227\341\202\360\216\237\202\311\216\246\202\267\201B\012\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data("!ENTITY % draft 'INCLUDE' >\012")
handle_data('<')
handle_data("!ENTITY % final 'IGNORE' >\012 \012")
handle_data('<')
handle_data('![%draft;[\012')
handle_data('<')
handle_data('!ELEMENT book (comments*, title, body, supplements?)>\012]]')
handle_data('>')
handle_data('\012')
handle_data('<')
handle_data('![%final;[\012')
handle_data('<')
handle_data('!ELEMENT book (title, body, supplements?)>\012]]')
handle_data('>')
handle_data('\012')
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_comment(" \012<div2 id='sec-pass-to-app'>\012<head>XML Processor Treatment of Logical Structure</head>\012<p>When an XML processor encounters a start-tag, it must make\012at least the following information available to the application:\012<ulist>\012<item>\012<p>the element type's generic identifier</p>\012</item>\012<item>\012<p>the names of attributes known to apply to this element type\012(validating processors must make available names of all attributes\012declared for the element type; non-validating processors must\012make available at least the names of the attributes for which\012values are specified.\012</p>\012</item>\012</ulist>\012</p>\012</div2>\012")
handle_data(' \012\012')
handle_end_tag(div1)
handle_data('\012')
handle_comment(' &Entities; ')
handle_data('\012\012')
handle_start_tag(div1, {'id' : 'sec-physical-struct'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\250\227\235\215\\\221\242')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-entity', 'term' : 'Entity'})
handle_data('\012XML\225\266\217\221\202\315\201C\210\352\202\302\210\310\217\343\202\314\213L\211\257\222P\210\312\202\251\202\347\215\\\220\254\202\267\202\351\201B\202\261\202\314\213L\211\257\222P\210\312\202\360\201C')
handle_start_tag(term, {})
handle_data('\216\300\221\314')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\201B\216\300\221\314\202\315\201C')
handle_start_tag(term, {})
handle_data('\223\340\227e')
handle_end_tag(term)
handle_data('\202\360\202\340\202\277\201C\225\266\217\221\216\300\221\314(\210\310\215~\216Q\217\306)\213y\202\321')
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('\212O\225\224DTD')
handle_data('\203T\203u\203Z\203b\203g')
handle_end_tag(termref)
handle_data('\202\360\217\234\202\242\202\304\201C')
handle_start_tag(term, {})
handle_data('\226\274\221O')
handle_end_tag(term)
handle_data('\202\305')
handle_data('\223\301\222\350\202\263\202\352\202\351')
handle_data('\201B\012')
handle_end_tag(termdef)
handle_data('\012\012')
handle_comment(' Added for CFG ')
handle_data('\012')
handle_comment(' obscurity amputated by TWB ')
handle_data('\012')
handle_comment(' entire sentence amputated by CMSMcQ:  no one but NO ONE is\012ready for entities declared as\012<!ENTITY foo "http://www.foo.com/bar.xml#id">\012and it\'s pointless to suggest that it\'s possible\012under current circumstances. ')
handle_data('\012')
handle_comment(' An entity may be stored in, ')
handle_data('\012')
handle_comment('but need not be coterminous with, ')
handle_data('\012')
handle_comment(' but need not comprise the whole of,  ')
handle_data('\012')
handle_comment(' a single physical storage object such as a file or ')
handle_data('\012')
handle_comment(' database field. ')
handle_data('\012')
handle_comment(' End sentence added for CFG ')
handle_data('\212eXML\225\266\217\221\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-docent'})
handle_data('\225\266\217\221\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\306\214\304\202\324\216\300\221\314\202\360\210\352\202\302\202\340\202\302\201B')
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\315\201C\202\261\202\314\225\266\217\221\216\300\221\314\202\251\202\347\217\210\227\235\202\360\212J\216n\202\267\202\351\201B\225\266\217\221\216\300\221\314\202\252\201C\225\266\217\221\202\314\202\267\202\327\202\304\202\360\212\334\202\361\202\305\202\340\202\346\202\242\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\216\300\221\314\202\315\201C')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\226\224\202\315')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\306\202\267\202\351\201B')
handle_start_tag(termdef, {'id' : 'dt-parsedent', 'term' : 'Text Entity'})
handle_start_tag(term, {})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(term)
handle_data('\202\314\223\340\227e\202\315\201C')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\314')
handle_start_tag(termref, {'def' : 'dt-repltext'})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\306\214\304\202\324\201B\202\261\202\314')
handle_start_tag(termref, {'def' : 'dt-text'})
handle_data('\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\315\201C\225\266\217\221\202\314\226{\221\314\202\314\210\352\225\224\202\306\202\265\202\304\211\360\216\337\202\267\202\351\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-unparsed', 'term' : 'Unparsed Entity'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(term)
handle_data('\202\315\201C\223\340\227e\202\252')
handle_start_tag(termref, {'def' : 'dt-text'})
handle_data('\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\305\202\340\202\273\202\244\202\305\202\310\202\255\202\306\202\340\202\346\202\242\203\212\203\\\201[\203X\202\306\202\267\202\351\201B\203e\203L\203X\203g\202\314\217\352\215\207\201CXML\202\305\202\310\202\255\202\306\202\340\202\346\202\242\201B\212e')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\311\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-notation'})
handle_data('\213L\226@')
handle_end_tag(termref)
handle_data('\202\252\212\326\230A\225t\202\257\202\347\202\352\201C\202\261\202\314\213L\226@\202\315\201C\226\274\221O\202\305')
handle_data('\223\301\222\350\202\263\202\352\202\351')
handle_data('\201B\213L\226@\202\314\226\274\221O\213y\202\321\212\326\230A\225t\202\257\202\347\202\352\202\275')
handle_data('\216\257\225\312\216q')
handle_data('\202\360\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\223n\202\267\202\306\202\242\202\244\227v\214\217\210\310\212O\202\315\201CXML\202\315\201C')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\314\223\340\227e\202\360\220\247\214\300\202\265\202\310\202\242\201B\012')
handle_end_tag(termdef)
handle_data(' \012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C\216\300\221\314\216Q\217\306\202\311\202\346\202\301\202\304\226\274\221O\202\305\214\304\202\321\217o\202\267\201B')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\315\201C')
handle_start_tag(kw, {})
handle_data('ENTITY')
handle_end_tag(kw)
handle_data('\214^\226\224\202\315')
handle_start_tag(kw, {})
handle_data('ENTITIES')
handle_end_tag(kw)
handle_data('\214^\202\314\221\256\220\253\202\314\222l\202\306\202\265\202\304\201C\226\274\221O\202\305\216Q\217\306\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'gen-entity', 'term' : 'general entity'})
handle_start_tag(term, {})
handle_data('\210\352\224\312\216\300\221\314')
handle_end_tag(term)
handle_data('\202\315\201C\225\266\217\221\223\340\227e\202\314\222\206\202\305\216g\227p\202\267\202\351')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\306\202\267\202\351\201B\202\240\202\242\202\334\202\242\202\311\202\310\202\347\202\310\202\242\214\300\202\350\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\305\202\315\201C\210\352\224\312\216\300\221\314\202\360\222P\202\311')
handle_start_tag(emph, {})
handle_data('\216\300\221\314')
handle_end_tag(emph)
handle_data('\202\306\214\304\202\324\201B')
handle_end_tag(termdef)
handle_start_tag(termdef, {'id' : 'dt-PE', 'term' : 'Parameter entity'})
handle_data('\203p\203\211\203\201\203^\216\300\221\314\202\315\201CDTD\223\340\202\305\216g\227p\202\267\202\351')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_data('\202\261\202\352\202\347\202\314\202Q\216\355\227\336\202\314\216\300\221\314\202\315\201C\210\331\202\310\202\351\217\221\216\256\202\305\216Q\217\306\202\265\201C\210\331\202\310\202\351\225\266\226\254\202\305\224F\216\257\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_comment("\012<div2 id='sec-synchro'>\012<head>Logical and Physical Structures</head>\012<p>The logical and physical structures (elements and entities)\012in an XML document must\012be properly nested.\012<termref def='dt-stag'>Tags</termref> and <termref def='dt-element'>elements</termref> must\012each begin and end in the same <termref def='dt-entity'>entity</termref>,  but may\012refer to other \012entities internally; <termref def='dt-comment'>comments</termref>, \012<termref def='dt-pi'>processing instructions</termref>, \012<termref def='dt-charref'>character\012references</termref>, and \012<termref def='dt-entref'>entity references</termref> must each be contained entirely\012within a single entity. Entities must each contain an integral number\012of elements, comments, processing instructions, and references,\012possibly together with character data not contained within any element\012in the entity, or else they must contain non-textual data, which by\012definition contains no elements.</p></div2>\012")
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'sec-references'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232\216Q\217\306\213y\202\321\216\300\221\314\216Q\217\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-charref', 'term' : 'Character Reference'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\225\266\216\232\216Q\217\306')
handle_end_tag(term)
handle_data('\202\315\201CISO/IEC 10646\225\266\216\232\217W\215\207\202\314\223\301\222\350\202\314\225\266\216\232\201C\227\341\202\246\202\316\201C\223\374\227\315\213@\212\355\202\251\202\347\222\274\220\332\223\374\227\315\225s\211\302\224\\\202\310\225\266\216\232\202\360\216Q\217\306\202\267\202\351\201B\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232\216Q\217\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-CharRef'})
handle_start_tag(lhs, {})
handle_data('CharRef')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('&')
handle_data("#' [0-9]+ ';' ")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| '")
handle_data('&')
handle_data('#x')
handle_data("' [0-9a-fA-F]+ ';'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'wf-Legalchar'})
handle_end_tag(wfc)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_start_tag(wfcnote, {'id' : 'wf-Legalchar'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\220\263\223\226\202\310\225\266\216\232')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\266\216\232\216Q\217\306\202\305\216Q\217\306\202\267\202\351\225\266\216\232\202\315\201C\224\361\217I\222[\213L\215\206')
handle_start_tag(termref, {'def' : 'NT-Char'})
handle_data('Char')
handle_end_tag(termref)
handle_data('\202\311\217]\202\355\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(wfcnote)
handle_data('\012\225\266\216\232\202\252 "')
handle_start_tag(code, {})
handle_data('&')
handle_data('#x')
handle_end_tag(code)
handle_data('" \202\305\216n\202\334\202\352\202\316\201C\217I\222[\202\314 "')
handle_start_tag(code, {})
handle_data(';')
handle_end_tag(code)
handle_data('" \202\334\202\305\202\314\220\224\216\232\213y\202\321\203A\203\213\203t\203@\203x\203b\203g\202\315\201CISO/IEC 10646 \202\314\225\266\216\232\203R\201[\203h\202\31416\220i\220\224\225\\\214\273\202\306\202\267\202\351\201B\012')
handle_comment('\223\372\226{\214\352\226\363\202\311\202\302\202\242\202\304: letter\202\315\203A\203\213\203t\203@\203x\203b\203g\202\306\226\363\202\265\202\275\201B \216O\215D ')
handle_data('\012\225\266\216\232\202\252 "')
handle_start_tag(code, {})
handle_data('&')
handle_data('#')
handle_end_tag(code)
handle_data('" \202\305\216n\202\334\202\352\202\316\201C\217I\222[\202\314 "')
handle_start_tag(code, {})
handle_data(';')
handle_end_tag(code)
handle_data('" \202\334\202\305\202\314\220\224\216\232\202\315\201C\225\266\216\232\203R\201[\203h\202\31410\220i\220\224\225\\\214\273\202\306\202\267\202\351\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-entref', 'term' : 'Entity Reference'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(term)
handle_data('\202\315\201C\226\274\221O\202\314\225t\202\242\202\275\216\300\221\314\202\314\223\340\227e\202\360\216Q\217\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_start_tag(termdef, {'id' : 'dt-GERef', 'term' : 'General Entity Reference'})
handle_data('\210\352\224\312\216\300\221\314\202\326\202\314\216Q\217\306\202\315\201C\203A\203\223\203p\203T\203\223\203h(')
handle_start_tag(code, {})
handle_data('&')
handle_end_tag(code)
handle_data(')\213y\202\321\203Z\203~\203R\203\215\203\223(')
handle_start_tag(code, {})
handle_data(';')
handle_end_tag(code)
handle_data(')\202\360\213\346\220\330\202\350\216q\202\306\202\265\202\304\227p\202\242\202\351\201B')
handle_end_tag(termdef)
handle_start_tag(termdef, {'id' : 'dt-PERef', 'term' : 'Parameter-entity reference'})
handle_start_tag(term, {})
handle_data('\203p\203\211\203\201\203^\216\300\221\314')
handle_end_tag(term)
handle_data('\202\326\202\314\216Q\217\306\202\315\201C\203p\201[\203Z\203\223\203g\213L\215\206(')
handle_start_tag(code, {})
handle_data('%')
handle_end_tag(code)
handle_data(')\213y\202\321\203Z\203~\203R\203\215\203\223(')
handle_start_tag(code, {})
handle_data(';')
handle_end_tag(code)
handle_data(')\202\360\213\346\220\330\202\350\216q\202\306\202\265\202\304\227p\202\242\202\351\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Reference'})
handle_start_tag(lhs, {})
handle_data('Reference')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-EntityRef'})
handle_data('EntityRef')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-CharRef'})
handle_data('CharRef')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-EntityRef'})
handle_start_tag(lhs, {})
handle_data('EntityRef')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('&')
handle_data("' ")
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(" ';'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'wf-entdeclared'})
handle_end_tag(wfc)
handle_data('\012')
handle_start_tag(vc, {'def' : 'vc-entdeclared'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'textent'})
handle_end_tag(wfc)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'norecursion'})
handle_end_tag(wfc)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PEReference'})
handle_start_tag(lhs, {})
handle_data('PEReference')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'%' ")
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(" ';'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'wf-entdeclared'})
handle_end_tag(wfc)
handle_data('\012')
handle_start_tag(vc, {'def' : 'vc-entdeclared'})
handle_end_tag(vc)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'textent'})
handle_end_tag(wfc)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'norecursion'})
handle_end_tag(wfc)
handle_data('\012')
handle_start_tag(wfc, {'def' : 'indtd'})
handle_end_tag(wfc)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\012')
handle_start_tag(wfcnote, {'id' : 'wf-entdeclared'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\202\252\220\351\214\276\202\263\202\352\202\304\202\242\202\351\202\261\202\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('DTD\202\360\202\340\202\275\202\310\202\242\225\266\217\221\201C\203p\203\211\203\201\203^\216\300\221\314\216Q\217\306\202\360\212\334\202\334\202\310\202\242\223\340\225\224DTD')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\276\202\257\202\360\202\340\202\302\225\266\217\221\201C\226\224\202\315 "')
handle_start_tag(code, {})
handle_data("standalone='yes'")
handle_end_tag(code)
handle_data('" \202\360\202\340\202\302\225\266\217\221\202\311\202\250\202\242\202\304\201C\216\300\221\314\216Q\217\306\202\305\227p\202\242\202\351 ')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \202\315\201C\202\273\202\314\216\300\221\314\202\314\220\351\214\276\202\305\227^\202\246\202\351\226\274\221O\202\306\201C')
handle_start_tag(termref, {'def' : 'dt-match'})
handle_data('\203}\203b\203`')
handle_end_tag(termref)
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\275\202\276\202\265\201C')
handle_data('\220\256\214`\216\256')
handle_data('\202\314\225\266\217\221\202\315\201C\216\300\221\314')
handle_start_tag(code, {})
handle_data('amp')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('lt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('gt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('apos')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('quot')
handle_end_tag(code)
handle_data(' \202\360\220\351\214\276\202\267\202\351\225K\227v\202\315\202\310\202\242\201B\203p\203\211\203\201\203^\216\300\221\314\202\314\217\352\215\207\202\315\201C\220\351\214\276\202\315\201C\216Q\217\306\202\311\220\346\215s\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\223\257\227l\202\311\201C\210\352\224\312\216\300\221\314\202\314\217\352\215\207\202\315\201C\221\256\220\253\203\212\203X\203g\220\351\214\276\202\314')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\223\340\202\305\202\314\216Q\217\306\202\346\202\350\220\346\202\311\201C\220\351\214\276\202\252\214\273\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\226\224\202\315\212O\225\224\203p\203\211\203\201\203^\216\300\221\314\202\305\216\300\221\314\202\360\220\351\214\276\202\267\202\351\202\306\202\253\201C')
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\265\202\310\202\242')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\201C\220\351\214\276\202\360\223\307\202\335\201C\217\210\227\235\202\267\202\351\202\261\202\306\202\360')
handle_start_tag(titleref, {'href' : 'include-if-valid'})
handle_data('\213`\226\261\202\303\202\257\202\310\202\242')
handle_end_tag(titleref)
handle_data('\201B\202\273\202\352\202\347\202\314\225\266\217\221\202\305\202\315\201C\216\300\221\314\202\315\220\351\214\276\202\263\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\202\306\202\242\202\244\213K\221\245\202\315\201C')
handle_data('\220\256\214`\216\256')
handle_data('\220\247\226\361\202\305\202\315\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(wfcnote)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'vc-entdeclared'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\202\252\220\351\214\276\202\263\202\352\202\304\202\242\202\351\202\261\202\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\226\224\202\315\212O\225\224\203p\203\211\203\201\203^\216\300\221\314\202\360\202\340\202\301\202\304\202\242\202\304\201C"')
handle_start_tag(code, {})
handle_data("standalone='no'")
handle_end_tag(code)
handle_data('"\202\360\202\340\202\302\225\266\217\221\202\311\202\250\202\242\202\304\201C\216\300\221\314\216Q\217\306\202\305\227p\202\242\202\351 ')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \202\315\201C\202\273\202\314\216\300\221\314\202\314\220\351\214\276\202\305\227^\202\246\202\351\226\274\221O\202\306')
handle_start_tag(termref, {'def' : 'dt-match'})
handle_data('\203}\203b\203`')
handle_end_tag(termref)
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337\201C')
handle_data('\221\303\223\226')
handle_data('\202\310\225\266\217\221\202\315')
handle_start_tag(titleref, {'href' : 'sec-escapes'})
handle_data('\202\240\202\347\202\251\202\266\202\337\222\350\213`\202\265\202\275\216\300\221\314\202\314\213K\222\350')
handle_end_tag(titleref)
handle_data('\202\305\216w\222\350\202\265\202\275\217\221\216\256\202\311\202\346\202\301\202\304\201C\216\300\221\314 ')
handle_start_tag(code, {})
handle_data('amp')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('lt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('gt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('apos')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('quot')
handle_end_tag(code)
handle_data('\202\360\220\351\214\276\202\267\202\351\202\261\202\306\202\252\226]\202\334\202\265\202\242\201B\203p\203\211\203\201\203^\216\300\221\314\202\314\217\352\215\207\202\315\201C\220\351\214\276\202\315\201C\216Q\217\306\202\311\220\346\215s\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\223\257\227l\202\311\201C\210\352\224\312\216\300\221\314\202\314\217\352\215\207\202\315\201C\221\256\220\253\203\212\203X\203g\220\351\214\276\202\314')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\223\340\202\305\202\314\216Q\217\306\202\346\202\350\202\340\220\346\202\311\201C\220\351\214\276\202\252\214\273\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012\012')
handle_comment(' FINAL EDIT:  is this duplication too clumsy? ')
handle_data('\012\012')
handle_start_tag(wfcnote, {'id' : 'textent'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\216\300\221\314\216Q\217\306\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-unparsed'})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\314\226\274\221O\202\360\212\334\202\361\202\305\202\242\202\304\202\315\202\310\202\347\202\310\202\242\201B')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\315\201C')
handle_start_tag(kw, {})
handle_data('ENTITY')
handle_end_tag(kw)
handle_data('\214^\226\224\202\315')
handle_start_tag(kw, {})
handle_data('ENTITIES')
handle_end_tag(kw)
handle_data(' \214^\202\306\202\265\202\304\220\351\214\276\202\265\202\275')
handle_start_tag(termref, {'def' : 'dt-attrval'})
handle_data('\221\256\220\253\222l')
handle_end_tag(termref)
handle_data('\202\306\202\265\202\304\202\276\202\257\216Q\217\306\202\305\202\253\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(wfcnote)
handle_data('\012\012')
handle_start_tag(wfcnote, {'id' : 'norecursion'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\215\304\213A\202\310\202\265')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C\202\273\202\352\216\251\221\314\202\326\202\314\216Q\217\306\202\360\201C\222\274\220\332\202\311\202\340\212\324\220\332\202\311\202\340\212\334\202\361\202\305\202\315\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(wfcnote)
handle_data('\012\012')
handle_start_tag(wfcnote, {'id' : 'indtd'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('DTD\202\314\222\206')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\203p\203\211\203\201\203^\216\300\221\314\216Q\217\306\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('DTD')
handle_end_tag(termref)
handle_data('\223\340\202\311\202\276\202\257\201C\217o\214\273\202\265\202\304\202\346\202\242\201B\012')
handle_comment('\012In the external DTD subset, a parameter-entity reference is \012recognized only at the locations where\012the nonterminal <nt def="NT-PEReference">PEReference</nt> or the\012special operator <code>%</code> appears in a production of the\012grammar.  In the internal subset, parameter-entity references\012are recognized only when they match \012the <nt def="NT-InternalPERef">InternalPERef</nt> non-terminal\012in the production for <nt def="NT-markupdecl">markupdecl</nt>.\012')
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(wfcnote)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012\225\266\216\232\216Q\217\306\213y\202\321\216\300\221\314\216Q\217\306\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('Type ')
handle_data('<')
handle_data('key>less-than')
handle_data('<')
handle_data('/key> (')
handle_data('&')
handle_data('#x')
handle_data('3C;) to save options.\012This document was prepared on ')
handle_data('&')
handle_data('docdate; and\012is classified ')
handle_data('&')
handle_data('security-level;.')
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012\203p\203\211\203\201\203^\216\300\221\314\216Q\217\306\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('!ENTITY % ISOLat2\012         SYSTEM "http://www.xml.com/iso/isolat2-xml.entities" >\012%ISOLat2;\012')
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012 \012')
handle_start_tag(div2, {'id' : 'sec-entity-decl'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\220\351\214\276')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-entdecl', 'term' : 'entity declaration'})
handle_data('\012\216\300\221\314\202\315\201C\216\237\202\314\202\306\202\250\202\350\202\311\220\351\214\276\202\267\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw2' : '5', 'pcw4' : '18.5'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-EntityDecl'})
handle_start_tag(lhs, {})
handle_data('EntityDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-GEDecl'})
handle_data('GEDecl')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_start_tag(com, {})
handle_data('\210\352\224\312\216\300\221\314')
handle_end_tag(com)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('| ')
handle_start_tag(nt, {'def' : 'NT-PEDecl'})
handle_data('PEDecl')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_start_tag(com, {})
handle_data('\203p\203\211\203\201\203^\216\300\221\314')
handle_end_tag(com)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-GEDecl'})
handle_start_tag(lhs, {})
handle_data('GEDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("!ENTITY' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-EntityDef'})
handle_data('EntityDef')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '")
handle_data('>')
handle_data("'")
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PEDecl'})
handle_start_tag(lhs, {})
handle_data('PEDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| '")
handle_data('<')
handle_data("!ENTITY' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(" '%' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-PEDef'})
handle_data('PEDef')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '")
handle_data('>')
handle_data("'")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(com, {})
handle_data('\203p\203\211\203\201\203^\216\300\221\314')
handle_end_tag(com)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-EntityDef'})
handle_start_tag(lhs, {})
handle_data('EntityDef')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data('\012')
handle_end_tag(rhs)
handle_data('\012')
handle_comment('<wfc def="WF-EntityValue"/>')
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('| ')
handle_start_tag(nt, {'def' : 'NT-ExternalDef'})
handle_data('ExternalDef')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_comment('<wfc def="WF-External"/>')
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_comment(' FINAL EDIT: what happened to WFs here? ')
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PEDef'})
handle_start_tag(lhs, {})
handle_data('PEDef')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-ExternalID'})
handle_data('ExternalID')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \202\315\201C')
handle_start_tag(termref, {'def' : 'dt-entref'})
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(termref)
handle_data('\202\311\202\250\202\242\202\304\216\300\221\314\202\360')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\201B')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\310\202\347\202\316\201C')
handle_start_tag(kw, {})
handle_data('ENTITY')
handle_end_tag(kw)
handle_data(' \214^\226\224\202\315')
handle_start_tag(kw, {})
handle_data('ENTITIES')
handle_end_tag(kw)
handle_data('\214^\202\314\221\256\220\253\222l\223\340\202\305\201C\216\300\221\314\202\360')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\201B\223\257\210\352\202\314\216\300\221\314\202\252\210\352\211\361\210\310\217\343\220\351\214\276\202\263\202\352\202\352\202\316\201C\215\305\217\211\202\314\220\351\214\276\202\360\227p\202\242\202\351\201B')
handle_data('\203\206\201[\203U\202\314\203I\203v\203V\203\207\203\223\216w\222\350\202\311\202\346\202\301\202\304\202\315')
handle_data('\201C\225\241\220\224\211\361\220\351\214\276\202\263\202\352\202\351\216\300\221\314\202\311\212\326\202\265\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\214x\215\220\202\360\217o\202\265\202\304\202\340\202\346\202\242\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_comment('\012<wfcnote id="WF-Entityvalue">\012<head>Well-Formed Internal Entity</head>\012<p>General entities defined by an <nt\012def="NT-EntityValue">EntityValue</nt> must be well-formed, as defined\012in section <specref ref="wf-entities"/>.\012</p>\012</wfcnote>\012<wfcnote id="WF-External">\012<head>Well-Formed External Entity</head>\012<p>General text entities defined by an <nt\012def="NT-ExternalDef">ExternalDef</nt>, must be well-formed, as defined\012in the section on <titleref xml-link="simple"\012href="wf-entities">well-formed entities.</titleref>.</p>\012</wfcnote>\012')
handle_data(' \012\012')
handle_start_tag(div3, {'id' : 'sec-internal-ent'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\223\340\225\224\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-internent', 'term' : 'Internal Entity Replacement Text'})
handle_data('\012\216\300\221\314\202\314\222\350\213`\202\252 ')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data('\202\314\202\306\202\253\201C\202\261\202\352\202\360')
handle_start_tag(term, {})
handle_data('\223\340\225\224\216\300\221\314')
handle_end_tag(term)
handle_data('\202\306\202\242\202\244\201B\202\261\202\352\202\315\201C\225\312\214\302\202\314\225\250\227\235\223I\213L\211\257\222P\210\312\202\360\202\340\202\275\202\270\201C\216\300\221\314\202\314\223\340\227e\202\315\201C\220\351\214\276\223\340\202\305\227^\202\246\202\351\201B')
handle_end_tag(termdef)
handle_data('\220\263\202\265\202\255')
handle_start_tag(termref, {'def' : 'dt-repltext'})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\360\220\266\220\254\202\267\202\351\202\311\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-litentval'})
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l')
handle_end_tag(termref)
handle_data('\223\340\202\305\202\314\216\300\221\314\216Q\217\306\213y\202\321\225\266\216\232\216Q\217\306\202\314\217\210\227\235\202\252\201C\225K\227v\202\306\202\310\202\351\202\251\202\340\202\265\202\352\202\310\202\242\202\261\202\306\202\311\222\215\210\323\202\267\202\351\201B\217\332\215\327\202\315\201C')
handle_start_tag(titleref, {'href' : 'intern-replacement'})
handle_data('\223\340\225\224\216\300\221\314\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\314\215\\\222z')
handle_end_tag(titleref)
handle_data('\202\360\216Q\217\306\201B\012\012')
handle_comment(' redundant -TWB\012Within the <nt def="NT-EntityValue">EntityValue</nt>,\012parameter-entity references and character references are recognized\012and expanded immediately. \012General-entity references within the\012replacement text are not recognized\012at the time the entity declaration is parsed, though they may be\012recognized when the entity itself is referred to.\012')
handle_data('\012\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012\223\340\225\224\216\300\221\314\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-parsedent'})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\223\340\225\224\216\300\221\314\220\351\214\276\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('!ENTITY Pub-Status "This is a pre-release of the specification.">')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012 \012')
handle_start_tag(div3, {'id' : 'sec-external-ent'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\212O\225\224\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-extent', 'term' : 'External Entity'})
handle_data('\012\216\300\221\314\202\252\223\340\225\224\216\300\221\314\202\305\202\310\202\257\202\352\202\316\201C')
handle_start_tag(term, {})
handle_data('\212O\225\224\216\300\221\314')
handle_end_tag(term)
handle_data('\202\306\202\265\201C\216\237\202\314\202\306\202\250\202\350\202\311\220\351\214\276\202\267\202\351\201B\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\212O\225\224\216\300\221\314\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-ExternalDef'})
handle_start_tag(lhs, {})
handle_data('ExternalDef')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-ExternalID'})
handle_data('ExternalID')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-NDataDecl'})
handle_data('NDataDecl')
handle_end_tag(nt)
handle_data('?')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-ExternalID'})
handle_start_tag(lhs, {})
handle_data('ExternalID')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'SYSTEM' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-SystemLiteral'})
handle_data('SystemLiteral')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("| 'PUBLIC' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-PubidLiteral'})
handle_data('PubidLiteral')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-SystemLiteral'})
handle_data('SystemLiteral')
handle_end_tag(nt)
handle_data('\012')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-NDataDecl'})
handle_start_tag(lhs, {})
handle_data('NDataDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(" 'NDATA' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(vc, {'def' : 'not-declared'})
handle_end_tag(vc)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012\012')
handle_start_tag(nt, {'def' : 'NT-NDataDecl'})
handle_data('NDataDecl')
handle_end_tag(nt)
handle_data(' \202\252\221\266\215\335\202\267\202\352\202\316\201C\202\261\202\314\216\300\221\314\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-unparsed'})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\306\202\265\201C\202\273\202\244\202\305\202\310\202\257\202\352\202\316\201C')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(vcnote, {'id' : 'not-declared'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213L\226@\202\252\220\351\214\276\202\263\202\352\202\304\202\242\202\351\202\261\202\306')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \202\315\201C\220\351\214\276\202\265\202\275')
handle_start_tag(termref, {'def' : 'dt-notation'})
handle_data('\213L\226@')
handle_end_tag(termref)
handle_data('\202\314\226\274\221O\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(vcnote)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-sysid', 'term' : 'System Identifier'})
handle_data('\012\203L\201[\203\217\201[\203h ')
handle_start_tag(kw, {})
handle_data('SYSTEM')
handle_end_tag(kw)
handle_data(' \202\314\214\343\202\314 ')
handle_start_tag(nt, {'def' : 'NT-SystemLiteral'})
handle_data('SystemLiteral')
handle_end_tag(nt)
handle_data(' \202\360\201C\216\300\221\314\202\314')
handle_start_tag(term, {})
handle_data('\203V\203X\203e\203\200')
handle_data('\216\257\225\312\216q')
handle_end_tag(term)
handle_data('\202\306\214\304\202\324\201B\202\261\202\352\202\315URI\202\306\202\265\201C\202\273\202\314\216\300\221\314\202\314\223\340\227e\202\360\216\346\202\350\217o\202\267\202\314\202\311\227p\202\242\202\304\202\340\202\346\202\242\201B')
handle_end_tag(termdef)
handle_data('URI\202\306\213\244\202\311\216g\202\244\202\261\202\306\202\314\221\275\202\242\203n\203b\203V\203\205("')
handle_start_tag(code, {})
handle_data('#')
handle_end_tag(code)
handle_data('")\213y\202\321\203t\203\211\203O\203\201\203\223\203g')
handle_data('\216\257\225\312\216q')
handle_data('\202\315\201C\220\263\216\256\202\311\202\315\201CURI\216\251\221\314\202\314\210\352\225\224\202\306\202\315\202\265\202\310\202\242\201B\203t\203\211\203O\203\201\203\223\203g')
handle_data('\216\257\225\312\216q')
handle_data('\202\252\201C\203V\203X\203e\203\200')
handle_data('\216\257\225\312\216q')
handle_data('\202\314\225\224\225\252\202\306\202\265\202\304\227^\202\246\202\347\202\352\202\304\202\242\202\351\217\352\215\207\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\360\217o\202\265\202\304\202\340\202\346\202\242\201B\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\314\224\315\210\315\212O\202\314\217\356\225\361(\227\341\202\246\202\316\201C\202\240\202\351\223\301\222\350\202\314DTD\202\314\223\301\225\312\202\310XML\227v\221f\226\224\202\315\223\301\222\350\202\314')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\314\216d\227l\202\311\202\346\202\301\202\304\222\350\213`\202\263\202\352\202\275\217\210\227\235\226\275\227\337)\202\311\202\346\202\301\202\304\217\343\217\221\202\253\202\263\202\352\202\310\202\242\214\300\202\350\201C\221\212\221\316\223I\202\310URI\202\315\201C\202\273\202\314\216\300\221\314\202\314\210\312\222u\201C\202\267\202\310\202\355\202\277\201C\202\273\202\314\216\300\221\314\202\314\220\351\214\276\202\252\202\240\202\351\203t\203@\203C\203\213\202\311\221\212\221\316\223I\202\306\202\267\202\351\201B\202\265\202\275\202\252\202\301\202\304\201CDTD\202\314\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\311\202\240\202\351\216\300\221\314\220\351\214\276\202\305\202\314\221\212\221\316\223I\202\310URI\202\315\201C\225\266\217\221\202\314\210\312\222u\202\311\202\302\202\242\202\304\221\212\221\316\223I\202\306\202\267\202\351\201B\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\311\202\240\202\351\216\300\221\314\220\351\214\276\202\305\202\314\221\212\221\316\223I\202\310URI\202\315\201C\202\273\202\314\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\360\212\334\202\336\203t\203@\203C\203\213\202\314\210\312\222u\202\311\221\212\221\316\223I\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-pubid', 'term' : 'Public identifier'})
handle_data('\012\203V\203X\203e\203\200')
handle_data('\216\257\225\312\216q')
handle_data('\210\310\212O\202\311\201C\212O\225\224\216\300\221\314\202\315\201C')
handle_start_tag(term, {})
handle_data('\214\366\212J')
handle_data('\216\257\225\312\216q')
handle_end_tag(term)
handle_data('\202\360\212\334\202\361\202\305\202\340\202\346\202\242\201B\012')
handle_end_tag(termdef)
handle_data('\012\216\300\221\314\202\314\223\340\227e\202\360\216\346\202\350\217o\202\267XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\202\261\202\314\214\366\212J')
handle_data('\216\257\225\312\216q')
handle_data('\202\360\227p\202\242\202\304\201C\221\343\202\355\202\350\202\314URI\202\314\220\266\220\254\202\360\216\216\202\335\202\304\202\340\202\346\202\242\201BXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\202\261\202\352\202\311\216\270\224s\202\265\202\275\217\352\215\207\202\315\201C\203V\203X\203e\203\200')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\306\202\265\202\304\216w\222\350\202\265\202\275URI\202\360\227p\202\242\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\221O\202\311\201C\214\366\212J')
handle_data('\216\257\225\312\216q')
handle_data('\223\340\202\311\202\240\202\351\213\363\224\222\225\266\216\232\202\251\202\347\202\310\202\351')
handle_data('\225\266\216\232\227\361')
handle_data('\202\315\201C\202\267\202\327\202\304\222P\210\352\202\314')
handle_data('\203X\203y\201[\203X\225\266\216\232')
handle_data('(#x20)\202\311\220\263\213K\211\273\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\270\201C\221O\214\343\202\314\213\363\224\222\225\266\216\232\202\315\215\355\217\234\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\212O\225\224\216\300\221\314\220\351\214\276\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data('!ENTITY open-hatch\012         SYSTEM "http://www.textuality.com/boilerplate/OpenHatch.xml">\012')
handle_data('<')
handle_data('!ENTITY open-hatch\012         PUBLIC "-//Textuality//TEXT Standard open-hatch boilerplate//EN"\012         "http://www.textuality.com/boilerplate/OpenHatch.xml">\012')
handle_data('<')
handle_data('!ENTITY hatch-pic\012         SYSTEM "../grafix/OpenHatch.gif"\012         NDATA gif >')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012 \012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {'id' : 'TextEntities'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(div3, {'id' : 'sec-TextDecl'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203e\203L\203X\203g\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\212O\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C')
handle_start_tag(term, {})
handle_data('\203e\203L\203X\203g\220\351\214\276')
handle_end_tag(term)
handle_data('\202\305\216n\202\334\202\301\202\304\202\340\202\346\202\242\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\203e\203L\203X\203g\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw4' : '12.5', 'pcw5' : '13'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-TextDecl'})
handle_start_tag(lhs, {})
handle_data('TextDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("?xml'")
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-VersionInfo'})
handle_data('VersionInfo')
handle_end_tag(nt)
handle_data('?\012')
handle_start_tag(nt, {'def' : 'NT-EncodingDecl'})
handle_data('EncodingDecl')
handle_end_tag(nt)
handle_data('\012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data('? ')
handle_data("'?>'")
handle_end_tag(rhs)
handle_data('\012')
handle_comment(" <wfc def='wfc-xmldecliteral'/> ")
handle_data('\012')
handle_comment(" <wfc def='wfc-no-nonleading-encdec'/> ")
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203e\203L\203X\203g\220\351\214\276\202\315\201C\202\273\202\314\202\334\202\334\202\314\214`\202\305\214\273\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\270\201C')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\326\202\314\216Q\217\306\202\360\214o\227R\202\265\202\304\202\315\202\310\202\347\202\310\202\242\202\261\202\306\202\311\222\215\210\323\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\212O\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\311\202\250\202\242\202\304\201C\203e\203L\203X\203g\220\351\214\276\202\315\201C\220\346\223\252\210\310\212O\202\314\202\242\202\251\202\310\202\351\210\312\222u\202\311\202\340\217o\214\273\202\265\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'wf-entities'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\220\256\214`\216\256')
handle_data('\202\314')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203\211\203x\203\213')
handle_start_tag(nt, {'def' : 'NT-document'})
handle_data('document')
handle_end_tag(nt)
handle_data('\202\360\202\340\202\302\220\266\220\254\213K\221\245\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\352\202\316\201C\225\266\217\221\216\300\221\314\202\315\201C')
handle_data('\220\256\214`\216\256')
handle_data('\202\306\202\267\202\351\201B\203\211\203x\203\213')
handle_start_tag(nt, {'def' : 'NT-ExtParsedEnt'})
handle_data('ExtParsedEnt')
handle_end_tag(nt)
handle_data('\202\360\202\340\202\302\220\266\220\254\213K\221\245\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\352\202\316\201C\212O\225\224\202\314\210\352\224\312')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C')
handle_data('\220\256\214`\216\256')
handle_data('\202\306\202\267\202\351\201B\203\211\203x\203\213')
handle_start_tag(nt, {'def' : 'NT-ExtPE'})
handle_data('ExtPE')
handle_end_tag(nt)
handle_data('\202\360\202\340\202\302\220\266\220\254\213K\221\245\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\352\202\316\201C\212O\225\224\203p\203\211\203\201\203^\216\300\221\314\202\315\201C')
handle_data('\220\256\214`\216\256')
handle_data('\202\306\202\267\202\351\201B\012\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\220\256\214`\216\256')
handle_data('\202\314')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-ExtParsedEnt'})
handle_start_tag(lhs, {})
handle_data('ExtParsedEnt')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-TextDecl'})
handle_data('TextDecl')
handle_end_tag(nt)
handle_data('? \012')
handle_start_tag(nt, {'def' : 'NT-content'})
handle_data('content')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-ExtPE'})
handle_start_tag(lhs, {})
handle_data('ExtPE')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-TextDecl'})
handle_data('TextDecl')
handle_end_tag(nt)
handle_data('? \012')
handle_start_tag(nt, {'def' : 'NT-extSubset'})
handle_data('extSubset')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\252\201C\203\211\203x\203\213')
handle_start_tag(nt, {'def' : 'NT-content'})
handle_data('content')
handle_end_tag(nt)
handle_data('\202\360\202\340\202\302\220\266\220\254\213K\221\245\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\352\202\316\201C\223\340\225\224\202\314\210\352\224\312')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C')
handle_data('\220\256\214`\216\256')
handle_data('\202\306\202\267\202\351\201BDTD\202\360\215\305\214\343\202\334\202\305\223\307\202\335\215\236\202\334\202\310\202\242\202\306\201C\212m\216\300\202\311\202\261\202\352\202\360\224\273\222\350\202\305\202\253\202\310\202\242\202\261\202\306\202\311\222\215\210\323\201B\202\267\202\327\202\304\202\314\223\340\225\224\202\314\203p\203\211\203\201\203^\216\300\221\314\202\315\201C\222\350\213`\202\311\202\346\202\301\202\304')
handle_data('\220\256\214`\216\256')
handle_data('\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\216\300\221\314\202\252')
handle_data('\220\256\214`\216\256')
handle_data('\202\310\214\213\211\312\202\306\202\265\202\304\201CXML\225\266\217\221\202\314\230_\227\235\223I\213y\202\321\225\250\227\235\223I\215\\\221\242\202\315\201C\220\263\202\265\202\255\223\374\202\352\216q\202\306\202\310\202\351\201B')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-etag'})
handle_data('\217I\227\271\203^\203O')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-empty'})
handle_data('\213\363\227v\221f\203^\203O')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-element'})
handle_data('\227v\221f')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-comment'})
handle_data('\203R\203\201\203\223\203g')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-pi'})
handle_data('\217\210\227\235\226\275\227\337')
handle_end_tag(termref)
handle_data('\201C')
handle_start_tag(termref, {'def' : 'dt-charref'})
handle_data('\225\266\216\232\216Q\217\306')
handle_end_tag(termref)
handle_data('\213y\202\321')
handle_start_tag(termref, {'def' : 'dt-entref'})
handle_data('\216\300\221\314\216Q\217\306')
handle_end_tag(termref)
handle_data('\202\252\201C\210\352\202\302\202\314\216\300\221\314\202\305\212J\216n\202\265\201C\225\312\202\314\216\300\221\314\202\305\217I\227\271\202\267\202\351\202\261\202\306\202\315\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'charencoding'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\202\311\202\250\202\257\202\351\225\266\216\232\225\204\215\206\211\273')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_data('XML\225\266\217\221\223\340\202\314\212O\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C\212e\201X\201C\225\312\202\314\225\266\216\232\225\204\215\206\211\273\225\373\216\256\202\360\227p\202\242\202\304\202\340\202\346\202\242\201B\202\267\202\327\202\304\202\314XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201CUTF-8\202\305\225\204\215\206\211\273\202\265\202\275\216\300\221\314\201CUTF-16\202\305\225\204\215\206\211\273\202\265\202\275\216\300\221\314\202\360\217\210\227\235\202\305\202\253\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_comment('\012It is recognized that for some purposes, the use of additional\012ISO/IEC 10646 planes other than the Basic Multilingual Plane\012may be required.  \012A facility for handling characters in these planes is therefore a\012desirable characteristic in XML processors and applications.\012')
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('UTF-16\202\305\225\204\215\206\211\273\202\265\202\275\216\300\221\314\202\315\201CISO/IEC 10646\202\314\225t\230^E\213y\202\321Unicode\202\314\225t\230^B\202\305\213K\222\350\202\267\202\351')
handle_data('\203o\203C\203g\217\207\203}\201[\203N')
handle_data('(ZERO WIDTH NO-BREAK SPACE\225\266\216\232\201C#xFEFF)\202\305\216n\202\334\202\347\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\261\202\352\202\315\201C\225\204\215\206\211\273\202\314\225W\216\257\202\305\202\240\202\301\202\304\201CXML\225\266\217\221\202\314')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\210\352\225\224\202\305\202\340\201C\225\266\216\232\203f\201[\203^\202\314\210\352\225\224\202\305\202\340\202\310\202\242\201BXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201CUTF-8\202\305\225\204\215\206\211\273\202\265\202\275\225\266\217\221\202\306UTF-16\202\305\225\204\215\206\211\273\202\265\202\275\225\266\217\221\202\306\202\314\213\346\225\312\202\360\215s\202\244\202\275\202\337\202\311\201C\202\261\202\314\225\266\216\232\202\360\216g\227p\211\302\224\\\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201CUTF-8\213y\202\321UTF-16\202\305\225\204\215\206\211\273\202\265\202\275\216\300\221\314\202\276\202\257\202\360\223\307\202\336\202\261\202\306\202\360\225K\220{\202\306\202\267\202\351\202\252\201C\221\274\202\314\225\204\215\206\211\273\202\360\220\242\212E\202\305\202\315\227p\202\242\202\304\202\250\202\350\201C\202\273\202\352\202\347\202\314\225\204\215\206\211\273\202\360\227p\202\242\202\351\216\300\221\314\202\360XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\217\210\227\235\202\305\202\253\202\351\202\261\202\306\202\252\226]\202\334\202\265\202\242\201BUTF-8\226\224\202\315UTF-16\210\310\212O\202\314\225\204\215\206\211\273\225\373\216\256\202\360\227p\202\242\202\304\212i\224[\202\267\202\351')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\315\201C\225\204\215\206\211\273\220\351\214\276\202\360\212\334\202\336')
handle_start_tag(titleref, {'href' : 'TextDecl'})
handle_data('\203e\203L\203X\203g\220\351\214\276')
handle_end_tag(titleref)
handle_data('\202\305\216n\202\337\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\204\215\206\211\273\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-EncodingDecl'})
handle_start_tag(lhs, {})
handle_data('EncodingDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("\012'encoding' ")
handle_start_tag(nt, {'def' : 'NT-Eq'})
handle_data('Eq')
handle_end_tag(nt)
handle_data(' \012\'"\' ')
handle_start_tag(nt, {'def' : 'NT-EncName'})
handle_data('EncName')
handle_end_tag(nt)
handle_data(' \'"\' | "\'" \012')
handle_start_tag(nt, {'def' : 'NT-EncName'})
handle_data('EncName')
handle_end_tag(nt)
handle_data(' "\'"\012')
handle_end_tag(rhs)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-EncName'})
handle_start_tag(lhs, {})
handle_data('EncName')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("[A-Za-z] ([A-Za-z0-9._] | '-')*")
handle_end_tag(rhs)
handle_data('\012')
handle_start_tag(com, {})
handle_data('\203\211\203e\203\223\225\266\216\232\202\276\202\257\202\360\212\334\202\336\225\204\215\206\211\273\226\274')
handle_end_tag(com)
handle_data('\012')
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_start_tag(termref, {'def' : 'dt-docent'})
handle_data('\225\266\217\221\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\305\202\315\201C\225\204\215\206\211\273\220\351\214\276\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-xmldecl'})
handle_data('XML\220\351\214\276')
handle_end_tag(termref)
handle_data('\202\314\210\352\225\224\202\306\202\267\202\351\201B')
handle_start_tag(nt, {'def' : 'NT-EncName'})
handle_data('EncName')
handle_end_tag(nt)
handle_data('\202\315\201C\216g\227p\202\267\202\351\225\204\215\206\211\273\225\373\216\256\202\314\226\274\221O\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_comment(' FINAL EDIT:  check name of IANA and charset names ')
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\204\215\206\211\273\220\351\214\276\202\305\202\315\201C\222l')
handle_start_tag(code, {})
handle_data('UTF-8')
handle_end_tag(code)
handle_data('\201C')
handle_start_tag(code, {})
handle_data('UTF-16')
handle_end_tag(code)
handle_data('\201C')
handle_start_tag(code, {})
handle_data('ISO-10646-UCS-2')
handle_end_tag(code)
handle_data('\213y\202\321')
handle_start_tag(code, {})
handle_data('ISO-10646-UCS-4')
handle_end_tag(code)
handle_data('\202\315\201CUnicode\213y\202\321ISO/IEC 10646\202\314\212e\216\355\225\204\215\206\211\273\202\314\202\275\202\337\202\311\227p\202\242\202\351\201B\222l')
handle_start_tag(code, {})
handle_data('ISO-8859-1')
handle_end_tag(code)
handle_data('\202\251\202\347')
handle_start_tag(code, {})
handle_data('ISO-8859-9')
handle_end_tag(code)
handle_data('\202\334\202\305\202\315\201CISO 8859\202\314\221\316\211\236\202\267\202\351\203p\201[\203g\202\314\202\275\202\337\202\311\227p\202\242\202\351\201B\222l')
handle_start_tag(code, {})
handle_data('ISO-2022-JP')
handle_end_tag(code)
handle_data('\201C')
handle_start_tag(code, {})
handle_data('Shift_JIS')
handle_end_tag(code)
handle_data('\213y\202\321')
handle_start_tag(code, {})
handle_data('EUC-JP')
handle_end_tag(code)
handle_data('\202\315\201CJIS X-0208-1997\202\314\212e\216\355\225\204\215\206\211\273\202\314\202\275\202\337\202\311\227p\202\242\202\351\201BXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\202\273\202\352\210\310\212O\202\314\225\204\215\206\211\273\225\373\216\256\202\360\224F\216\257\202\265\202\304\202\340\202\346\202\242\201BInternet Assigned Numbers Authority (IANA)\202\311\201C(')
handle_start_tag(emph, {})
handle_data('charset')
handle_end_tag(emph)
handle_data('s\202\306\202\265\202\304)\223o\230^\202\263\202\352\202\275\225\266\216\232\225\204\215\206\211\273\225\373\216\256\202\311\202\302\202\242\202\304\202\315\201C\202\261\202\352\202\347\210\310\212O\202\311\202\302\202\242\202\304\202\340\201C\223o\230^\202\263\202\352\202\275\226\274\221O\202\305\216Q\217\306\202\267\202\351\202\261\202\306\202\252\226]\202\334\202\265\202\242\201B\202\261\202\352\202\347\202\314\223o\230^\202\263\202\352\202\275\226\274\221O\202\315\201C\221\345\225\266\216\232\201E\217\254\225\266\216\232\202\314\213\346\225\312\202\360\202\271\202\270\202\311\222\350\213`\202\263\202\352\202\304\202\242\202\351\202\314\202\305\201C\202\261\202\352\202\347\202\311\221\316\202\267\202\351\224\344\212r\202\360\216\216\202\335\202\351')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\221\345\225\266\216\232\201E\217\254\225\266\216\232\202\314\213\346\225\312\202\360\202\265\202\310\202\242\225\373\226@\202\360\202\306\202\351\202\314\202\252\226]\202\334\202\265\202\242\202\261\202\306\202\311\222\215\210\323\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('XML\217\210\227\235\214n\202\311\223nu\202\311\217o\214\273\202\267\202\352\202\316\201C')
handle_start_tag(termref, {'def' : 'dt-error'})
handle_data('\203G\203\211\201[')
handle_end_tag(termref)
handle_data('\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\203o\203C\203g\217\207\203}\201[\203N')
handle_data('\202\305\202\340\225\204\215\206\211\273\220\351\214\276\202\305\202\340\216n\202\334\202\347\202\310\202\242\216\300\221\314\202\315\201CUTF-8\225\204\215\206\211\273\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_comment(" XML processors should make an effort to use all available\012information, internal and external, to aid in detecting an entity's correct\012encoding.  Such information may include, but is not limited to:\012<ulist><item><p>An HTTP header</p></item>\012<item><p>A MIME header obtained other than through HTTP</p></item>\012<item><p>Metadata provided by the native OS file system or by document\012management software</p></item>\012<item><p>The bit patterns at the front of an entity, which may\012be analyzed to determine if\012the application of any known encoding yields a valid encoding\012declaration.  See <titleref href='sec-guessing'>the appendix on\012autodetection of character sets</titleref> \012for a fuller description.</p></item></ulist> ")
handle_data('\012\217\210\227\235\202\305\202\253\202\310\202\242\225\204\215\206\211\273\202\360\202\340\202\301\202\275\216\300\221\314\202\360XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\224\255\214\251\202\265\202\275\202\306\202\253\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\202\273\202\314\216\226\216\300\202\360\222\312\222m\202\265\201C')
handle_start_tag(termref, {'def' : 'dt-fatal'})
handle_data('\222v\226\275\223I\203G\203\211\201[')
handle_end_tag(termref)
handle_data('\202\306\202\265\202\304\201C\217\210\227\235\202\360\217I\227\271\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_comment('\012inform the application of this fact and \012may \012allow the application to\012request either that the entity should be treated as an <termref\012def="dt-unparsed">unparsed entity</termref>, or that processing should\012cease.')
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\204\215\206\211\273\220\351\214\276\202\314\227\341\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(eg, {})
handle_data('<')
handle_data("?xml encoding='UTF-8'?>\012")
handle_data('<')
handle_data("?xml encoding='EUC-JP'?>")
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'entproc'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\311\202\346\202\351\216\300\221\314\213y\202\321\216Q\217\306\202\314\210\265\202\242')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\216\237\202\314\225\\\202\315\201C\225\266\216\232\216Q\217\306\201C\216\300\221\314\216Q\217\306\213y\202\321')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\314\214\304\217o\202\265\202\252\214\273\202\352\202\351\225\266\226\254\213y\202\321\212e\201X\202\314\217\352\215\207\202\311\202\250\202\257\202\351')
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\311\227v\213\201\202\267\202\351\220U\225\221\202\242\202\360\227v\226\361\202\267\202\351\201B\210\352\224\324\215\266\202\314\227\361\202\314\203\211\203x\203\213\202\315\201C\224F\216\257\202\314\225\266\226\254\202\360\216\246\202\267\201B\012')
handle_start_tag(glist, {})
handle_data('\012')
handle_start_tag(gitem, {})
handle_start_tag(label, {})
handle_data('\223\340\227e\202\311\202\250\202\257\202\351\216Q\217\306')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\227v\221f\202\314')
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(termref)
handle_data('\213y\202\321')
handle_start_tag(termref, {'def' : 'dt-etag'})
handle_data('\217I\227\271\203^\203O')
handle_end_tag(termref)
handle_data('\202\314\212\324\202\314\224C\210\323\202\314\217\352\217\212\202\305\202\314\216Q\217\306\201B\224\361\217I\222[\213L\215\206')
handle_start_tag(nt, {'def' : 'NT-content'})
handle_data('content')
handle_end_tag(nt)
handle_data('\202\311\221\316\211\236\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('\221\256\220\253\222l\202\311\202\250\202\257\202\351\216Q\217\306')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-stag'})
handle_data('\212J\216n\203^\203O')
handle_end_tag(termref)
handle_data('\202\314\221\256\220\253\202\314\222l\201C\226\224\202\315')
handle_start_tag(termref, {'def' : 'dt-attdecl'})
handle_data('\221\256\220\253\220\351\214\276')
handle_end_tag(termref)
handle_data('\202\311\202\250\202\257\202\351')
handle_data('\203f\203t\203H\203\213\203g\222l')
handle_data('\202\314\202\242\202\270\202\352\202\251\202\305\202\314\216Q\217\306\201B\224\361\217I\222[\213L\215\206')
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data('\202\311\221\316\211\236\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('\221\256\220\253\222l\202\306\202\265\202\304\217o\214\273')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\216Q\217\306\202\305\202\315\202\310\202\255\201C')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data('\202\306\202\265\202\304\217o\214\273\201B')
handle_start_tag(code, {})
handle_data('ENTITY')
handle_end_tag(code)
handle_data('\214^\202\306\202\265\202\304\220\351\214\276\202\265\202\275\221\256\220\253\202\314\222l\201C\226\224\202\315')
handle_start_tag(code, {})
handle_data('ENTITIES')
handle_end_tag(code)
handle_data('\214^\202\306\202\265\202\304\220\351\214\276\202\265\202\275\221\256\220\253\202\314\222l\202\311\202\250\202\257\202\351')
handle_data('\203X\203y\201[\203X')
handle_data('\202\305\213\346\220\330\202\351')
handle_data('\203g\201[\203N\203\223')
handle_data('\202\314\210\352\202\302\202\306\202\265\202\304\217o\214\273\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(def)
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_start_tag(label, {})
handle_data('\216\300\221\314\222l\202\311\202\250\202\257\202\351\216Q\217\306')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\216\300\221\314\202\314\220\351\214\276\202\311\202\250\202\257\202\351\201C\203p\203\211\203\201\203^\226\224\202\315\223\340\225\224\216\300\221\314\202\314')
handle_start_tag(termref, {'def' : 'dt-litentval'})
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l')
handle_end_tag(termref)
handle_data('\223\340\202\314\216Q\217\306\201B\224\361\217I\222[\213L\215\206')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data('\202\311\221\316\211\236\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_start_tag(label, {})
handle_data('DTD\202\311\202\250\202\257\202\351\216Q\217\306')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('DTD')
handle_end_tag(termref)
handle_data('\202\314\223\340\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\226\224\202\315\212O\225\224')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\305\202\314\216Q\217\306\201B\202\275\202\276\202\265\201C')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data('\226\224\202\315')
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data('\202\314\212O\221\244\202\306\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_end_tag(glist)
handle_end_tag(p)
handle_data('\012')
handle_comment(' border value changed by bosak ')
handle_data('\012')
handle_start_tag(htable, {'align' : 'center', 'border' : '1', 'cellpadding' : '7'})
handle_data('\012')
handle_comment(' tbody wrapper added by bosak ')
handle_data('\012')
handle_start_tag(htbody, {})
handle_data('\012')
handle_start_tag(tr, {})
handle_start_tag(td, {'bgcolor' : '#c0d9c0', 'colspan' : '1', 'rowspan' : '2'})
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'align' : 'center', 'bgcolor' : '#c0d9c0', 'colspan' : '4', 'valign' : 'bottom'})
handle_data('\216\300\221\314\202\314\214^')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'align' : 'center', 'bgcolor' : '#c0d9c0', 'rowspan' : '2'})
handle_data('\225\266\216\232')
handle_end_tag(td)
handle_data('\012')
handle_end_tag(tr)
handle_data('\012')
handle_start_tag(tr, {'align' : 'center', 'valign' : 'bottom'})
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_data('\203p\203\211\203\201\203^')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_data('\223\340\225\224')
handle_data(' ')
handle_data('\210\352\224\312')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_data('\212O\225\224')
handle_data(' ')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data(' ')
handle_data('\210\352\224\312')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(td)
handle_data('\012')
handle_end_tag(tr)
handle_data('\012')
handle_start_tag(tr, {'align' : 'center', 'valign' : 'middle'})
handle_data('\012')
handle_comment("<td bgcolor='&cellback;' rowspan='4'>Recognition\012Context</td>")
handle_data('\012')
handle_start_tag(td, {'align' : 'right', 'bgcolor' : '#c0d9c0'})
handle_data('\223\340\227e\202\305\202\314')
handle_data(' ')
handle_data('\216Q\217\306')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'not-recognized'})
handle_data('\224F\216\257')
handle_data(' ')
handle_data('\202\265\202\310\202\242')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'included'})
handle_data('\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'include-if-valid'})
handle_data('\214\237\217\330\202\314\202\275\202\337\202\311\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'included'})
handle_data('\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_end_tag(tr)
handle_data('\012')
handle_start_tag(tr, {'align' : 'center', 'valign' : 'middle'})
handle_data('\012')
handle_start_tag(td, {'align' : 'right', 'bgcolor' : '#c0d9c0'})
handle_data('\221\256\220\253\222l\202\305\202\314')
handle_data(' ')
handle_data('\216Q\217\306')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'not-recognized'})
handle_data('\224F\216\257')
handle_data(' ')
handle_data('\202\265\202\310\202\242')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'included'})
handle_data('\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'included'})
handle_data('\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_end_tag(tr)
handle_data('\012')
handle_start_tag(tr, {'align' : 'center', 'valign' : 'middle'})
handle_data('\012')
handle_start_tag(td, {'align' : 'right', 'bgcolor' : '#c0d9c0'})
handle_data('\221\256\220\253\222l\202\306\202\265\202\304')
handle_data(' ')
handle_data('\217o\214\273')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'not-recognized'})
handle_data('\224F\216\257')
handle_data(' ')
handle_data('\202\265\202\310\202\242')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'not-recognized'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'not-recognized'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'notify'})
handle_data('\222\312\222m')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'not recognized'})
handle_data('\224F\216\257')
handle_data(' ')
handle_data('\202\265\202\310\202\242')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_end_tag(tr)
handle_data('\012')
handle_start_tag(tr, {'align' : 'center', 'valign' : 'middle'})
handle_data('\012')
handle_start_tag(td, {'align' : 'right', 'bgcolor' : '#c0d9c0'})
handle_data('\216\300\221\314\222l\202\305\202\314')
handle_data(' ')
handle_data('\216Q\217\306')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'included'})
handle_data('\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'bypass'})
handle_data('\217\210\227\235\202\265\202\310\202\242')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'bypass'})
handle_data('\217\210\227\235\202\265\202\310\202\242')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'included'})
handle_data('\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_end_tag(tr)
handle_data('\012')
handle_start_tag(tr, {'align' : 'center', 'valign' : 'middle'})
handle_data('\012')
handle_start_tag(td, {'align' : 'right', 'bgcolor' : '#c0d9c0'})
handle_data('DTD\202\305\202\314')
handle_data(' ')
handle_data('\216Q\217\306')
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'as-PE'})
handle_data('PE\202\306\202\265\202\304')
handle_data(' ')
handle_data('\216\346\215\236\202\335')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_start_tag(td, {'bgcolor' : '#c0d9c0'})
handle_start_tag(titleref, {'href' : 'forbidden'})
handle_data('\213\326\216~')
handle_end_tag(titleref)
handle_end_tag(td)
handle_data('\012')
handle_end_tag(tr)
handle_data('\012')
handle_end_tag(htbody)
handle_data('\012')
handle_end_tag(htable)
handle_data('\012')
handle_start_tag(div3, {'id' : 'not-recognized'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\201g\224F\216\257\202\265\202\310\202\242\201h')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('DTD\202\314\212O\202\305\202\315\201C')
handle_start_tag(code, {})
handle_data('%')
handle_end_tag(code)
handle_data('\225\266\216\232\202\315\201C\202\242\202\251\202\310\202\351\223\301\222\350\202\314\210\323\226\241\202\340\201C\202\340\202\275\202\310\202\242\201B\202\265\202\275\202\252\202\301\202\304\201CDTD\202\305\202\315\203p\203\211\203\201\203^\216\300\221\314\216Q\217\306\202\306\202\265\202\304\224F\216\257\202\267\202\351\202\340\202\314\202\305\202\240\202\301\202\304\202\340\201C')
handle_start_tag(nt, {'def' : 'NT-content'})
handle_data('content')
handle_end_tag(nt)
handle_data('\223\340\202\305\202\315')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\306\202\265\202\304\202\315\224F\216\257\202\265\202\310\202\242\201B\223\257\227l\202\311\201C\223K\220\330\202\311\220\351\214\276\202\265\202\275\221\256\220\253\202\314\222l\202\314\222\206\202\311\214\273\202\352\202\351\217\352\215\207\202\360\217\234\202\253\201C')
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_data('\202\314\226\274\221O\202\315\201C\224F\216\257\202\265\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'included'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\201g\216\346\215\236\202\335\201h')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-include', 'term' : 'Include'})
handle_data('\216\300\221\314\202\315\201C\202\273\202\314')
handle_start_tag(termref, {'def' : 'dt-repltext'})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\360\216\346\202\350\217o\202\265\201C\217\210\227\235\202\267\202\351\202\306\201C\216Q\217\306\216\251\221\314\202\314\221\343\202\355\202\350\202\311\201C\216Q\217\306\202\252\202\240\202\301\202\275\210\312\222u\202\305\201C\225\266\217\221\202\314\210\352\225\224\202\306\202\265\202\304\212\334\202\334\202\352\202\351\202\251\202\314\202\346\202\244\202\311')
handle_start_tag(term, {})
handle_data('\216\346\202\350\215\236\202\334\202\352\202\351')
handle_end_tag(term)
handle_data('\201B')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-chardata'})
handle_data('\225\266\216\232\203f\201[\203^')
handle_end_tag(termref)
handle_data('\213y\202\321(\203p\203\211\203\201\203^\216\300\221\314\202\360\217\234\202\255\201B)')
handle_start_tag(termref, {'def' : 'dt-markup'})
handle_data('\203}\201[\203N\225t\202\257')
handle_end_tag(termref)
handle_data('\202\314\202\242\202\270\202\352\202\360\212\334\202\361\202\305\202\340\202\346\202\255\201C\202\261\202\352\202\347\202\315\201C\222\312\217\355\202\314\225\373\226@\202\305\224F\216\257\202\263\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\275\202\276\202\265\201C')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\314\213\346\220\330\202\350\216q\202\360')
handle_data('\225\312\210\265\202\242')
handle_data('\202\267\202\351\202\275\202\337\202\311\227p\202\242\202\351\216\300\221\314(')
handle_start_tag(code, {})
handle_data('amp')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('lt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('gt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('apos')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('quot')
handle_end_tag(code)
handle_data(')\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\315\201C\217\355\202\311\203f\201[\203^\202\306\202\265\202\304\210\265\202\244(')
handle_data('\225\266\216\232\227\361')
handle_data('"')
handle_start_tag(code, {})
handle_data('AT')
handle_data('&')
handle_data('amp;T;')
handle_end_tag(code)
handle_data('"\202\315\201C"')
handle_start_tag(code, {})
handle_data('AT')
handle_data('&')
handle_data('T;')
handle_end_tag(code)
handle_data('"\202\311\223W\212J\202\263\202\352\201C\216c\202\263\202\352\202\275\203A\203\223\203p\203T\203\223\203h\202\315\201C\216\300\221\314\216Q\217\306\202\314\213\346\220\330\202\350\216q\202\306\202\265\202\304\202\315\224F\216\257\202\265\202\310\202\242\201B)\201B\225\266\216\232\216Q\217\306\202\315\201C\216\246\202\265\202\275\225\266\216\232\202\360\216Q\217\306\216\251\221\314\202\314\221\343\202\355\202\350\202\311\217\210\227\235\202\267\202\351\202\306\202\253\201C')
handle_start_tag(term, {})
handle_data('\216\346\202\350\215\236\202\334\202\352\202\351')
handle_end_tag(term)
handle_data('\201B\012')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'include-if-valid'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\201g\214\237\217\330\202\314\202\275\202\337\202\311\216\346\215\236\202\335\201h')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\225\266\217\221\202\314')
handle_data('\221\303\223\226\220\253')
handle_data('\202\360')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\214\237\217\330')
handle_end_tag(termref)
handle_data('\202\267\202\351\202\311\202\315\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\326\202\314\216Q\217\306\202\360\224F\216\257\202\265\202\275\202\306\202\253\201C\202\273\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\360')
handle_start_tag(termref, {'def' : 'dt-include'})
handle_data('\216\346\202\350\215\236\202\334')
handle_end_tag(termref)
handle_data('\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\216\300\221\314\202\252\212O\225\224\216\300\221\314\202\305\202\240\202\301\202\304\201CXML\225\266\217\221\202\314')
handle_data('\221\303\223\226\220\253')
handle_data('\202\360\214\237\217\330\202\265\202\310\202\257\202\352\202\316\201C\216\300\221\314\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\360\216\346\202\350\215\236\202\361\202\305\202\340')
handle_start_tag(termref, {'def' : 'dt-may'})
handle_data('\202\346\202\242')
handle_end_tag(termref)
handle_data('\202\252\201C\202\273\202\244\202\265\202\310\202\255\202\306\202\340\202\346\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314\216\346\214\210\202\337\202\315\201CSGML\213y\202\321XML\202\314\216\300\221\314\202\314\213@\215\\\202\252\222\361\213\237\202\267\202\351\216\251\223\256\216\346\215\236\202\335\213@\224\\\202\252\201C\225\266\217\221\215\354\220\254\216\236\202\314\203\202\203W\203\205\201[\203\213\211\273\202\360\216\345\202\310\226\332\223I\202\306\202\265\202\304\220\335\214v\202\263\202\352\202\304\202\250\202\350\201C\202\273\202\314\221\274\202\314')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('(\223\301\202\311\201C\225\266\217\221\202\314\203u\203\211\203E\203Y)\202\311\202\315\201C\225K\202\270\202\265\202\340\223K\220\330\202\305\202\315\202\310\202\242\201C\202\306\202\242\202\244\224F\216\257\202\311\202\346\202\351\201B\227\341\202\246\202\316\201C\203u\203\211\203E\203U\202\315\212O\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\326\202\314\216Q\217\306\202\360\214\251\202\302\202\257\202\351\202\306\201C\202\273\202\314\216\300\221\314\202\252\221\266\215\335\202\267\202\351\202\306\202\242\202\244\225\\\216\246\202\276\202\257\202\360\215s\202\242\201C\225\\\216\246\202\360\227v\213\201\202\263\202\352\202\275\202\306\202\253\202\311\202\276\202\257\201C\223\340\227e\202\360\216\346\202\350\217o\202\267\202\251\202\340\202\265\202\352\202\310\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'forbidden'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\201g\213\326\216~\201h')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\216\237\202\315\213\326\216~\202\263\202\352\202\304\202\250\202\350\201C')
handle_start_tag(termref, {'def' : 'dt-fatal'})
handle_data('\222v\226\275\223I\203G\203\211\201[')
handle_end_tag(termref)
handle_data('\202\306\202\267\202\351\201B\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) ')
handle_start_tag(termref, {'def' : 'dt-unparsed'})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\326\202\314\216Q\217\306\202\314\217o\214\273\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) DTD\202\314')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data('\226\224\202\315')
handle_start_tag(nt, {'def' : 'NT-AttValue'})
handle_data('AttValue')
handle_end_tag(nt)
handle_data('\210\310\212O\202\314\225\224\225\252\202\311\202\250\202\257\202\351\201C\225\266\216\232\216Q\217\306\226\224\202\315\210\352\224\312\216\300\221\314\202\326\202\314\216Q\217\306\202\314\217o\214\273\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) \221\256\220\253\222l\223\340\202\314\212O\225\224\216\300\221\314\202\326\202\314\216Q\217\306\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'notify'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\201g\222\312\222m\201h')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-unparsed'})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\314\226\274\221O\202\252\201C')
handle_start_tag(kw, {})
handle_data('ENTITY')
handle_end_tag(kw)
handle_data('\226\224\202\315')
handle_start_tag(kw, {})
handle_data('ENTITIES')
handle_end_tag(kw)
handle_data('\202\314\221\256\220\253\202\314\222l\202\311\202\250\202\242\202\304')
handle_data('\203g\201[\203N\203\223')
handle_data('\202\306\202\265\202\304\214\273\202\352\202\275\202\306\202\253\201C')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\221\316\202\265\202\304\201C\212\326\230A\225t\202\257\202\347\202\352\202\275')
handle_start_tag(termref, {'def' : 'dt-notation'})
handle_data('\213L\226@')
handle_end_tag(termref)
handle_data('\226\274\201C\213L\226@\202\311\221\316\202\267\202\351')
handle_start_tag(termref, {'def' : 'dt-sysid'})
handle_data('\203V\203X\203e\203\200')
handle_end_tag(termref)
handle_data('\216\257\225\312\216q')
handle_data('\213y\202\321(\221\266\215\335\202\267\202\352\202\316)')
handle_start_tag(termref, {'def' : 'dt-pubid'})
handle_data('\214\366\212J')
handle_end_tag(termref)
handle_data('\216\257\225\312\216q')
handle_data('\202\360\222\312\222m\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'bypass'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\201g')
handle_data('\217\210\227\235\202\265\202\310\202\242')
handle_data('\201h')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\210\352\224\312\216\300\221\314\216Q\217\306\202\252\201C\216\300\221\314\220\351\214\276\202\311\202\250\202\257\202\351')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data('\223\340\202\311\214\273\202\352\202\351\202\306\202\253\201C\202\273\202\352\202\315\226\263\216\213\202\263\202\352\201C\202\273\202\314\202\334\202\334\216c\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_start_tag(div3, {'id' : 'as-PE'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\201gPE\202\306\202\265\202\304\216\346\215\236\202\335\201h')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\212O\225\224')
handle_data('\211\360\220\315\221\316\217\333\216\300\221\314')
handle_data('\202\314\217\352\215\207\202\306\223\257\227l\202\311\201C\203p\203\211\203\201\203^\216\300\221\314\202\315\201C')
handle_data('\221\303\223\226\220\253')
handle_data('\202\360')
handle_start_tag(titleref, {'href' : 'include-if-valid'})
handle_data('\214\237\217\330\202\267\202\351\202\306\202\253\202\276\202\257\216\346\202\350\215\236\202\334\202\352\202\351')
handle_end_tag(titleref)
handle_data('\225K\227v\202\252\202\240\202\351\201B\203p\203\211\203\201\203^\216\300\221\314\216Q\217\306\202\360DTD\223\340\202\311\224F\216\257\202\265\202\304\216\346\202\350\215\236\202\336\202\306\202\253\201C\202\273\202\314')
handle_start_tag(termref, {'def' : 'dt-repltext'})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(termref)
handle_data('\202\315\201C\202\273\202\314\221O\214\343\202\311\210\352\202\302\202\314')
handle_data('\203X\203y\201[\203X\225\266\216\232')
handle_data('(#x20)\202\314\225t\211\301\202\311\202\346\202\301\202\304\210\370\202\253\220L\202\316\202\263\202\352\202\351\201B\202\261\202\314\210\323\220}\202\315\201C\203p\203\211\203\201\203^\216\300\221\314\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\252\201CDTD\223\340\202\314\202\242\202\255\202\302\202\251\202\314\225\266\226@\223I')
handle_data('\203g\201[\203N\203\223')
handle_data('\202\360\212\256\221S\202\311\212\334\202\336\202\306\201C\220\247\226\361\202\267\202\351\202\261\202\306\202\311\202\240\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div3)
handle_data('\012')
handle_comment('\012<div3 id=\'gen-char-entproc\'>\012<head>General and Character Entity Processing</head> \012<p>General-entity and character references are recognized in three\012contexts: wherever the nonterminal <nt def=\'NT-content\'>content</nt> may\012appear, at any point within the nonterminal \012<nt def=\'NT-AttValue\'>AttValue</nt>,\012and within the \012<termref def=\'dt-litentval\'>literal entity value</termref> \012(<nt def=\'NT-EntityValue\'>EntityValue</nt>)  \012of an internal entity declaration.\012This section discusses the first two cases; the third\012is discussed <titleref href=\'intern-replacement\'>below</titleref>.\012When an <termref def="dt-xml-proc">XML processor</termref> encounters\012such a reference, or the name of an unparsed entity as the value\012of an <kw>ENTITY</kw> or <kw>ENTITIES</kw> attribute, then:\012<olist>\012\012<item><p>In all cases, the XML processor may \012inform the application of the reference\'s occurrence and its identifier\012(for an entity reference, the name; for a character\012reference, \012the character number in decimal, hexadecimal, or binary form).</p></item>\012\012<item><p>For both character and entity references, the processor must\012remove the reference itself from the <termref def="dt-text">text</termref> data\012before passing the data to the application.\012</p></item>\012\012<item><p>For character references, the processor must \012pass the character indicated\012to the application in\012place of the reference.\012</p></item>\012\012<item><p>For an external entity, the processor must inform the\012application of the entity\'s <termref def="dt-sysid">system\012identifier</termref>, and <termref def="dt-pubid">public identifier</termref> \012if any.\012All strings\012of white space in the public identifier must be normalized to single space characters (#x20),\012and leading and trailing white space must be removed.</p></item>\012\012<item><p>If the external entity is binary, the processor must inform the\012application of the associated <termref def="dt-notation">notation</termref> \012name, and the notation\'s associated <termref def=\'dt-sysid\'>system</termref> \012and <termref def=\'dt-pubid\'>public</termref> (if any)\012identifiers.</p></item>\012\012<item><p><termdef id="dt-include" term="Include">For an internal\012(parsed) entity, the processor must <term>include</term> the \012entity; that is, retrieve its replacement text \012and process it as a part of the document \012(i.e. as <nt def="NT-content">content</nt> or <nt\012def="NT-AttValue">AttValue</nt>, whichever was being processed when\012the reference was recognized), passing the result to the application\012in place of the reference.  The replacement text may contain both \012<termref def=\'dt-chardata\'>character data</termref>\012and <termref def="dt-markup">markup</termref>, which must be recognized in\012the usual way, except that the replacement text of entities used to escape\012markup delimiters (the entities &magicents;) is always treated as\012data.  (The string "<code>AT&amp;amp;T;</code>" expands to\012"<code>AT&amp;T;</code>" since the ampersand replacing "<code>&amp;amp;</code>"\012is not recognized\012as an entity-reference delimiter.) </termdef></p>\012<p>Since the entity  may contain other entity references,\012an XML processor may have to repeat the inclusion process recursively.</p>\012</item>\012<item><p>If the entity is an external parsed entity, then in order to\012<termref def="dt-valid">validate</termref> the XML document, the processor must\012<termref def="dt-include">include</termref> the content of the\012entity.</p></item>\012\012<item><p>If the entity is an external parsed entity, and the processor is not\012attempting to <termref def="dt-valid">validate</termref> the XML document, the\012processor <termref def="dt-may">may</termref>, but need not, <termref\012def="dt-include">include</termref> the entity\'s content.</p>\012<p>This rule is based on the recognition that the automatic inclusion\012provided by the SGML and XML entity mechanism, primarily designed\012to support modularity in authoring, is not necessarily \012appropriate for other applications, in particular document browsing.\012Browsers, for example, when encountering an external parsed entity reference,\012might choose to provide a visual indication of the entity\'s\012presence and retrieve it for display only on demand.\012</p></item>\012</olist>\012</p>\012<p><termdef id="dt-escape" term="escape">Entity and character\012references can both be used to <term>escape</term> the left angle bracket,\012ampersand, and other delimiters.   A set of general entities\012(&magicents;) is specified for this purpose.\012Numeric character references may also be used; they are\012expanded immediately when recognized, and must be treated as\012character data, so the numeric character references\012"<code>&amp;#60;</code>" and "<code>&amp;#38;</code>" may be used to \012escape <code>&lt;</code> and <code>&amp;</code> when they occur\012in character data.</termdef></p>\012</div3>\012<div3 id=\'PE-proc\'>\012<head>Parameter Entity Processing</head>\012<p>Parameter-entity references are only recognized in the\012<termref def=\'dt-doctype\'>DTD</termref>.\012Their processing, when they appear \012within the \012<termref def=\'dt-litentval\'>literal entity value</termref> \012(<nt def=\'NT-EntityValue\'>EntityValue</nt>) \012of an internal entity declaration,\012is discussed <titleref href=\'intern-replacement\'>below</titleref>.\012They have these intended uses:\012<olist>\012<item><p>as a replacement for one or more complete markup declarations</p></item>\012<item><p>as a replacement for one or more complete "groups" in \012element declarations</p></item>\012<item><p>as a replacement for one or more complete "tokens" in\012markup declarations</p></item>\012</olist>\012</p>\012<p>The constraints requiring that PE replacement texts be properly nested\012with <titleref href=\'vc-PEinMarkupDecl\'>markup declarations</titleref>\012and <titleref href=\'vc-PEinGroup\'>content groups</titleref> \012govern the first two usages.</p>\012<p>To support the third intended usage, \012when an XML processor encounters a parameter-entity reference\012(outside of the \012<termref def=\'dt-litentval\'>literal entity value</termref> in an entity\012declaration), \012it must <termref def="dt-include">include</termref> \012the named entity, but first expand its \012<termref def=\'dt-repltext\'>replacement text</termref> by attaching\012space (#x20) characters to its beginning and the end, before\012processing it.</p>\012<p>The DTD text must match the relevant\012rules of this specification\'s grammar after all parameter-entity \012references have been expanded.  \012<!-In addition, parameter entities referred to in specific\012contexts are required to satisfy certain constraints in their\012replacement text; for example, a parameter entity referred to within\012the internal DTD subset must match the rule for <nt\012def="NT-markupdecl">markupdecl</nt>.  ->\012</p>\012</div3>\012')
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'intern-replacement'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\223\340\225\224\216\300\221\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\314\215\\\222z')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\223\340\225\224\216\300\221\314\202\314\216\346\210\265\202\242\202\314\213K\222\350\202\305\201C\216\300\221\314\222l\202\360\223\361\202\302\202\314\214`\216\256\202\311\213\346\225\312\202\267\202\351\202\261\202\306\202\315\226\360\202\311\227\247\202\302\201B')
handle_start_tag(termdef, {'id' : 'dt-litentval', 'term' : 'Literal Entity Value'})
handle_start_tag(term, {})
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l')
handle_end_tag(term)
handle_data('\202\315\201C\216\300\221\314\220\351\214\276\223\340\202\311\216\300\215\333\202\311\221\266\215\335\202\267\202\351\201C\210\370\227p\225\204\202\305\210\315\202\336')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306\202\267\202\351\201B\202\261\202\352\202\315\201C\224\361\217I\222[\213L\215\206')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data('\202\311')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(termdef)
handle_start_tag(termdef, {'id' : 'dt-repltext', 'term' : 'Replacement Text'})
handle_start_tag(term, {})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(term)
handle_data('\202\315\201C\225\266\216\232\216Q\217\306\213y\202\321')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\216Q\217\306\202\314\222u\212\267\202\246\214\343\202\311\202\250\202\257\202\351\201C\216\300\221\314\202\314\223\340\227e\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\223\340\225\224\216\300\221\314\220\351\214\276\223\340\202\305\227^\202\246\202\351')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l')
handle_comment(' replacement text ')
handle_data('(')
handle_start_tag(nt, {'def' : 'NT-EntityValue'})
handle_data('EntityValue')
handle_end_tag(nt)
handle_data(')\202\315\201C\225\266\216\232\216Q\217\306\201C')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\216Q\217\306\213y\202\321\210\352\224\312\216\300\221\314\216Q\217\306\202\360\212\334\202\361\202\305\202\346\202\242\201B\202\261\202\352\202\347\202\314\216Q\217\306\202\315\201C')
handle_comment(' replacement text. ')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l\223\340\202\311\212\256\221S\202\311\212\334\202\334\202\352\202\304\202\242\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_start_tag(termref, {'def' : 'dt-include'})
handle_data('\223W\212J\202\267\202\351')
handle_end_tag(termref)
handle_data('\216\300\215\333\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('(\220\346\202\311\216\246\202\265\202\275\202\340\202\314)\202\315\201C\216Q\217\306\202\267\202\351')
handle_data('\203p\203\211\203\201\203^')
handle_data('\216\300\221\314\202\314')
handle_start_tag(emph, {})
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_end_tag(emph)
handle_data('\202\360\212\334\202\334\202\310\202\257\202\352\202\316\202\310\202\347\202\270\201C')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\216\300\221\314\222l\223\340\202\305\202\314\225\266\216\232\216Q\217\306\202\314\221\343\202\355\202\350\202\311\216Q\217\306\202\265\202\275\225\266\216\232\202\360\212\334\202\334\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\265\202\251\202\265\201C\210\352\224\312\216\300\221\314\216Q\217\306\202\315\201C\202\273\202\314\202\334\202\334\216c\202\265, \223W\212J\202\265\202\304\202\315\202\310\202\347\202\310\202\242\201B\012')
handle_comment(' in the replacement text that is to be included. ')
handle_data('\012\227\341\202\246\202\316\201C\216\237\202\314\220\351\214\276\202\360\227^\202\246\202\275\202\306\202\267\202\351\201B\012\012')
handle_start_tag(eg, {})
handle_data('<!ENTITY % pub    "&#xc9;ditions Gallimard" >\012<!ENTITY   rights "All rights reserved" >\012<!ENTITY   book   "La Peste: Albert Camus, \012&#xA9; 1947 %pub;. &rights;" >')
handle_end_tag(eg)
handle_data('\012\216\300\221\314\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('"')
handle_start_tag(code, {})
handle_data('book')
handle_end_tag(code)
handle_data('"\202\315\201C\216\237\202\314\202\306\202\250\202\350\202\306\202\310\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('La Peste: Albert Camus, \012')
handle_data('\251')
handle_data(' 1947 ')
handle_data('\311')
handle_data('ditions Gallimard. ')
handle_data('&')
handle_data('rights;')
handle_end_tag(eg)
handle_data('\012\216Q\217\306"')
handle_start_tag(code, {})
handle_data('&')
handle_data('book;')
handle_end_tag(code)
handle_data('"\202\252\201C\225\266\217\221\202\314\223\340\227e\226\224\202\315\221\256\220\253\222l\223\340\202\311\217o\214\273\202\265\202\304\202\242\202\352\202\316\201C\210\352\224\312\216\300\221\314\216Q\217\306"')
handle_start_tag(code, {})
handle_data('&')
handle_data('rights;')
handle_end_tag(code)
handle_data('"\202\315\201C\223W\212J\202\263\202\352\202\304\202\242\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\352\202\347\202\314\222P\217\203\202\310\213K\221\245\202\315\201C\225\241\215\207\221\212\214\335\215\354\227p\202\360\202\340\202\302\201B\012')
handle_comment(' \223\372\226{\214\352\226\363\202\311\202\302\202\242\202\304\201F interaction = \221\212\214\335\215\354\227p\201i\213\340\226{\201j')
handle_data('\012\223\357\202\265\202\242\227\341\202\311\202\302\202\242\202\304\202\314\217\332\215\327\202\315\201C')
handle_start_tag(titleref, {'href' : 'sec-entexpand'})
handle_data('\216\300\221\314\216Q\217\306\202\314\223W\212J\202\314\225t\230^')
handle_end_tag(titleref)
handle_data('\202\360\216Q\217\306\202\314\202\261\202\306\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_comment(' Replaced by the above -TB\012<p>Implementors of XML processors need to know the rules for\012expansion of references in more detail.  These rules only come into\012play when the replacement text for an internal entity itself contains\012other references.\012<olist>\012<item><p>In the replacement text of an internal entity, parameter-entity\012references and character references in the replacement text \012are recognized and resolved \012when the entity declaration is parsed,\012before the replacement text is stored in\012the processor\'s symbol table.\012General-entity references in the replacement text are not \012resolved when the entity declaration is parsed.</p></item>\012<item><p>In the document, when a general-entity reference is\012resolved, its replacement text is parsed.  Character references \012encountered in the replacement text are\012resolved immediately; general-entity references encountered in the\012replacement text may be resolved or left unresolved, as described \012<titleref href="entproc">above</titleref>.\012Character and general-entity references must be\012contained entirely within the entity\'s replacement text.  \012</p></item>\012</olist>\012</p>\012\012<p>Simple character references do not suffice to escape delimiters\012within the replacement text of an internal entity:  they will be\012expanded when the entity declaration is parsed, before the replacement\012text is stored in the symbol table.  When the entity itself is\012referred to, the replacement text will be parsed again, and the\012delimiters (no longer character references) \012will be recognized as delimiters.  To escape the\012characters &magicents; in an entity replacement text, use\012a general-entity reference or a doubly-escaped character reference.\012See <titleref href=\'sec-entexpand\'>the appendix on expansion \012of entity references</titleref>\012for detailed examples.</p>\012')
handle_data('\012\012\012')
handle_end_tag(div2)
handle_data('\012')
handle_start_tag(div2, {'id' : 'sec-predefined-ent'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\222\350\213`\215\317\202\335\216\300\221\314')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-escape', 'term' : 'escape'})
handle_data('\012\216\300\221\314\216Q\217\306\213y\202\321\225\266\216\232\216Q\217\306\202\314\202\242\202\270\202\352\202\340\201C')
handle_data('\225s\223\231\215\206(\217\254\202\310\202\350)')
handle_data('\201C\203A\203\223\203o\203T\203\223\203h\213y\202\321\221\274\202\314\213\346\220\330\202\350\216q\202\360')
handle_start_tag(term, {})
handle_data('\225\312\210\265\202\242')
handle_end_tag(term)
handle_data('\202\267\202\351\202\275\202\337\202\311\216g\227p\202\305\202\253\202\351\201B\202\242\202\255\202\302\202\251\202\314\210\352\224\312\216\300\221\314\201i')
handle_start_tag(code, {})
handle_data('amp')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('lt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('gt')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('apos')
handle_end_tag(code)
handle_data(',\012')
handle_start_tag(code, {})
handle_data('quot')
handle_end_tag(code)
handle_data('\201j\202\360\201C\202\261\202\314\226\332\223I\202\314\202\275\202\337\202\311\216w\222\350\202\267\202\351\201B\220\224\222l\202\311\202\346\202\351\225\266\216\232\216Q\217\306\202\340\201C\223\257\227l\202\314\226\332\223I\202\314\202\275\202\337\202\311\216g\227p\202\305\202\253\202\351\201B\225\266\216\232\216Q\217\306\202\315\201C\224F\216\257\202\263\202\352\202\351\202\306\222\274\202\277\202\311\223W\212J\202\263\202\352\201C\225\266\216\232\203f\201[\203^\202\306\202\265\202\304\210\265\202\355\202\352\202\351\202\314\202\305\201C\220\224\222l\202\311\202\346\202\351\225\266\216\232\216Q\217\306"')
handle_start_tag(code, {})
handle_data('&')
handle_data('#60;')
handle_end_tag(code)
handle_data('"\213y\202\321"')
handle_start_tag(code, {})
handle_data('&')
handle_data('#38;')
handle_end_tag(code)
handle_data('"\202\315\201C\225\266\216\232\203f\201[\203^\223\340\202\311\217o\214\273\202\267\202\351')
handle_start_tag(code, {})
handle_data('<')
handle_end_tag(code)
handle_data('\213y\202\321')
handle_start_tag(code, {})
handle_data('&')
handle_end_tag(code)
handle_data('\202\360')
handle_data('\225\312\210\265\202\242')
handle_data('\202\267\202\351\202\275\202\337\202\311\216g\227p\202\305\202\253\202\351\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\267\202\327\202\304\202\314XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\220\351\214\276\202\263\202\352\202\304\202\242\202\351\202\251\202\307\202\244\202\251\202\311\212\326\214W\202\310\202\255\201C\202\261\202\352\202\347\202\314\216\300\221\314\202\360\224F\216\257\202\265\202\310\202\255\202\304\202\315\202\310\202\347\202\310\202\242\201B')
handle_start_tag(termref, {'def' : 'dt-interop'})
handle_data('\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337')
handle_end_tag(termref)
handle_data('\201C')
handle_data('\221\303\223\226')
handle_data('\202\310XML\225\266\217\221\202\315\201C\202\261\202\352\202\347\202\314\216\300\221\314\202\360\216g\227p\202\267\202\351\221O\202\311\201C\221\274\202\314\216\300\221\314\202\306\223\257\227l\202\311\201C\220\351\214\276\202\267\202\351\202\261\202\306\202\252\226]\202\334\202\265\202\242\201B\216\300\221\314\202\360\220\351\214\276\202\267\202\351\217\352\215\207\202\315\201C')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\360')
handle_data('\225\312\210\265\202\242')
handle_data('\202\267\202\351\210\352\225\266\216\232\202\306\202\267\202\351\223\340\225\224\216\300\221\314\202\306\202\265\202\304\201C\216\237\202\314\202\306\202\250\202\350\202\311\220\351\214\276\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_start_tag(eg, {})
handle_data('<!ENTITY lt     "&#38;#60;"> \012<!ENTITY gt     "&#62;"> \012<!ENTITY amp    "&#38;#38;"> \012<!ENTITY apos   "&#39;"> \012<!ENTITY quot   "&#34;"> \012')
handle_end_tag(eg)
handle_data('\012"')
handle_start_tag(code, {})
handle_data('lt')
handle_end_tag(code)
handle_data('"\213y\202\321"')
handle_start_tag(code, {})
handle_data('amp')
handle_end_tag(code)
handle_data('"\220\351\214\276\223\340\202\314"')
handle_start_tag(code, {})
handle_data('<')
handle_end_tag(code)
handle_data('"\213y\202\321"')
handle_start_tag(code, {})
handle_data('&')
handle_end_tag(code)
handle_data('"\225\266\216\232\202\315\201C\216\300\221\314\202\314\222u\212\267\203e\203L\203X\203g\202\252\201C')
handle_data('\220\256\214`\216\256')
handle_data('\202\306\202\310\202\351\202\346\202\244\202\311\223\361\217d\202\311')
handle_data('\225\312\210\265\202\242')
handle_data('\202\263\202\352\202\351\202\261\202\306\202\311\222\215\210\323\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012\012')
handle_start_tag(div2, {'id' : 'Notations'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213L\226@\220\351\214\276')
handle_end_tag(head)
handle_data('\012\012 \012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(termdef, {'id' : 'dt-notation', 'term' : 'Notation'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\213L\226@')
handle_end_tag(term)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-extent'})
handle_data('\211\360\220\315\221\316\217\333\212O\216\300\221\314')
handle_end_tag(termref)
handle_data('\202\314\214`\216\256\202\360')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\226\274\221O\202\251\201C\226\224\202\315')
handle_start_tag(termref, {'def' : 'dt-pi'})
handle_data('\217\210\227\235\226\275\227\337')
handle_end_tag(termref)
handle_data('\202\314\221\316\217\333\202\306\202\267\202\351')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\360')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\226\274\221O\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-notdecl', 'term' : 'Notation Declaration'})
handle_data('\012')
handle_start_tag(term, {})
handle_data('\213L\226@\220\351\214\276')
handle_end_tag(term)
handle_data('\202\315\201C\213L\226@\202\314\226\274\221O\213y\202\321\212O\225\224')
handle_data('\216\257\225\312\216q')
handle_data('\202\360\222\361\213\237\202\267\202\351\201B\202\261\202\314\226\274\221O\202\315\201C\216\300\221\314\213y\202\321\221\256\220\253\203\212\203X\203g\220\351\214\276\225\300\202\321\202\311\221\256\220\253\216w\222\350\202\311\227p\202\242\202\351\201B\212O\225\224')
handle_data('\216\257\225\312\216q')
handle_data('\202\315\201C\227^\202\246\202\347\202\352\202\275\213L\226@\202\314\203f\201[\203^\202\360\217\210\227\235\202\305\202\253\202\351\203w\203\213\203p')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\360\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\226\224\202\315\203N\203\211\203C\203A\203\223\203g\203A\203v\203\212\203P\201[\203V\203\207\203\223\202\252\222T\202\267\202\275\202\337\202\311\201C\227\230\227p\202\305\202\253\202\351\201B\012')
handle_start_tag(scrap, {'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213L\226@\220\351\214\276')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-NotationDecl'})
handle_start_tag(lhs, {})
handle_data('NotationDecl')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'")
handle_data('<')
handle_data("!NOTATION' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' ')
handle_start_tag(nt, {'def' : 'NT-Name'})
handle_data('Name')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012(')
handle_start_tag(nt, {'def' : 'NT-ExternalID'})
handle_data('ExternalID')
handle_end_tag(nt)
handle_data(' | \012')
handle_start_tag(nt, {'def' : 'NT-PublicID'})
handle_data('PublicID')
handle_end_tag(nt)
handle_data(')\012')
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data("? '>'")
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-PublicID'})
handle_start_tag(lhs, {})
handle_data('PublicID')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data("'PUBLIC' ")
handle_start_tag(nt, {'def' : 'NT-S'})
handle_data('S')
handle_end_tag(nt)
handle_data(' \012')
handle_start_tag(nt, {'def' : 'NT-PubidLiteral'})
handle_data('PubidLiteral')
handle_end_tag(nt)
handle_data(' \012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(termdef)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\220\351\214\276\202\265\201C\221\256\220\253\222l\201C\221\256\220\253\222\350\213`\226\224\202\315\216\300\221\314\220\351\214\276\202\305\216Q\217\306\202\267\202\351\202\267\202\327\202\304\202\314\213L\226@\202\311\202\302\202\242\202\304\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\213L\226@\202\314\226\274\221O\213y\202\321\212O\225\224')
handle_data('\216\257\225\312\216q')
handle_data('\202\360')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\311\222\361\213\237\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\263\202\347\202\311\201C\212O\225\224')
handle_data('\216\257\225\312\216q')
handle_data('\202\360\201C')
handle_start_tag(termref, {'def' : 'dt-sysid'})
handle_data('\203V\203X\203e\203\200')
handle_data('\216\257\225\312\216q')
handle_end_tag(termref)
handle_data('\201C\203t\203@\203C\203\213\226\274\226\224\202\315\202\273\202\314\221\274\202\314\217\356\225\361\202\311\223W\212J\202\265\202\304\202\340\202\346\202\255\201C\202\261\202\352\202\347\202\360\227p\202\242\202\304\201C')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\315\201C\202\273\202\314\213L\226@\202\314\203f\201[\203^\202\360\217\210\227\235\202\267\202\351')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\360\213N\223\256\202\267\202\351\201B(\202\265\202\251\202\265\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\226\224\202\315')
handle_data('\203A\203v\203\212\203P\201[\203V\203\207\203\223')
handle_data('\202\252\223\256\215\354\202\267\202\351\203V\203X\203e\203\200\202\305\202\315\227\230\227p\202\305\202\253\202\310\202\242\213L\226@\202\360\201CXML\225\266\217\221\202\252\220\351\214\276\202\265\216Q\217\306\202\265\202\304\202\340\201C\202\261\202\352\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\315\202\265\202\310\202\242\201B\201j')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012\012')
handle_start_tag(div2, {'id' : 'sec-doc-entity'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\217\221\216\300\221\314')
handle_end_tag(head)
handle_data('\012\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-docent', 'term' : 'Document Entity'})
handle_start_tag(term, {})
handle_data('\225\266\217\221\216\300\221\314')
handle_end_tag(term)
handle_data('\202\315\201C\216\300\221\314\202\314\214`\220\254\202\267\202\351\226\330\215\\\221\242\202\314')
handle_data('\203\213\201[\203g')
handle_data('\202\305\202\240\202\301\202\304\201C')
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\252\201C\217\210\227\235\202\360\212J\216n\202\267\202\351\222n\223_\202\306\202\267\202\351\201B')
handle_end_tag(termdef)
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\315\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\201C\225\266\217\221\216\300\221\314\202\314\221\266\215\335\202\267\202\351\217\352\217\212\202\360\202\307\202\314\202\346\202\244\202\311\214\251\202\302\202\257\202\351\202\251\202\315\201C\213K\222\350\202\265\202\310\202\242\201B\221\274\202\314\216\300\221\314\202\306\210\331\202\310\202\350\201C\225\266\217\221\216\300\221\314\202\315\226\274\221O\202\360\202\340\202\275\202\270\201C\202\242\202\251\202\310\202\351\216\257\225\312\202\340\202\310\202\265\202\311')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\326\202\314\223\374\227\315')
handle_data('\203X\203g\203\212\201[\203\200')
handle_data('\202\311\217o\214\273\202\265\202\304\202\340\202\346\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012\012\012')
handle_end_tag(div1)
handle_data('\012')
handle_comment(' &Conformance; ')
handle_data('\012')
handle_start_tag(div1, {'id' : 'sec-conformance'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\223K\215\207\220\253')
handle_end_tag(head)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\223K\215\207\202\267\202\351')
handle_start_tag(termref, {'def' : 'dt-xml-proc'})
handle_data('XML')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(termref)
handle_data('\202\315\201C')
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\267\202\351')
handle_data('\202\340\202\314\213y\202\321')
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\265\202\310\202\242')
handle_data('\202\340\202\314\202\314\201C\223\361\202\302\202\311\225\252\227\336\202\263\202\352\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\267\202\351')
handle_data('\203V\203X\203e\203\200\213y\202\321')
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\265\202\310\202\242')
handle_data('\203V\203X\203e\203\200\202\315\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\252\213K\222\350\202\267\202\351')
handle_data('\220\256\214`\216\256')
handle_data('\220\247\226\361\202\326\202\314\210\341\224\275\202\360\225\361\215\220\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termdef, {'id' : 'dt-validating', 'term' : 'Validating Processor'})
handle_start_tag(term, {})
handle_data('\221\303\223\226\220\253\202\360\214\237\217\330\202\267\202\351')
handle_data('\203v\203\215\203Z\203T')
handle_end_tag(term)
handle_data('\202\315\201C')
handle_start_tag(termref, {'def' : 'dt-doctype'})
handle_data('DTD')
handle_end_tag(termref)
handle_data('\223\340\202\314\220\351\214\276\202\311\202\346\202\301\202\304\216\246\202\263\202\352\202\275\201C\220\247\226\361\202\326\202\314\210\341\224\275\202\360\225\361\215\220\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\263\202\347\202\311\201C\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\252\213K\222\350\202\267\202\351')
handle_data('\221\303\223\226\220\253')
handle_data('\220\247\226\361\202\326\202\314\210\341\224\275\202\360\201C\202\267\202\327\202\304\225\361\215\220\202\265\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\012')
handle_end_tag(termdef)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div1)
handle_data('\012\012')
handle_start_tag(div1, {'id' : 'sec-notation'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213L\226@')
handle_end_tag(head)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('XML\202\314\214`\216\256\223I\202\310\225\266\226@\202\315\201C\212\310\222P\202\310\212g\222\243Backus-Naur Form(EBNF)\213L\226@\202\311\202\346\202\301\202\304\227^\202\246\202\351\201B\225\266\226@\202\314\212e\213K\221\245\202\315\201C\216\237\202\314\214`\216\256\202\305\201C\213L\215\206\202\360\210\352\202\302\222\350\213`\202\267\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('symbol ::= expression')
handle_end_tag(eg)
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\213L\215\206\202\315\201C\220\263\213K\225\\\214\273\202\305\222\350\213`\202\267\202\351\202\306\202\253\202\315\221\345\225\266\216\232\202\305\216n\202\337\201C\202\273\202\244\202\305\202\310\202\257\202\352\202\316\201C\217\254\225\266\216\232\202\305\216n\202\337\202\351\201B')
handle_data('\225\266\216\232\227\361')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\315\201C\210\370\227p\225\204\202\305\210\315\202\336\201B\012')
handle_comment("* The distinction between symbols which can and cannot be\012recognized using simple regular expressions may be used to set the\012boundary between an implementation's lexical scanner and its parser,\012but this specification neither constrains the placement of that\012boundary nor presupposes that all implementations will have one. *")
handle_data('\012')
handle_end_tag(p)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('\213K\221\245\202\314\211E\221\244\202\314\216\256\223\340\202\305\202\315\201C\210\352\202\302\226\224\202\315\225\241\220\224\202\314\225\266\216\232\202\251\202\347\202\310\202\351')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\275\202\337\202\311\201C\216\237\202\314\216\256\202\360\216g\227p\202\267\202\351\201B\012')
handle_start_tag(glist, {})
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('#xN')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\202\261\202\261\202\305\201C')
handle_start_tag(code, {})
handle_data('N')
handle_end_tag(code)
handle_data('\202\31516\220i\202\314\220\256\220\224\202\306\202\267\202\351\201BISO/IEC 10646\202\314\225\266\216\232\202\305\202\240\202\301\202\304\201C\220\263\213K\214`(UCS-4)\202\314')
handle_data('\203R\201[\203h\222l')
handle_data('\202\360\225\204\215\206\202\310\202\2652\220i\220\224\202\306\202\265\202\304\211\360\216\337\202\265\202\275\202\306\202\253\201C\216w\222\350\202\265\202\275\222l\202\306\223\231\202\265\202\242\202\340\202\314\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_start_tag(code, {})
handle_data('#xN')
handle_end_tag(code)
handle_data('\214`\216\256\202\314\220\346\223\252\202\311\203[\203\215\202\252\202\242\202\255\202\302\202\251\214\273\202\352\202\351\202\251\202\315\201C\210\323\226\241\202\360\202\340\202\275\202\310\202\242\201B')
handle_data('\203R\201[\203h\222l')
handle_comment(' bit string ')
handle_data('\202\311\202\250\202\257\202\351\220\346\223\252\202\314\203[\203\215\202\314\220\224\202\315\201C\225\266\216\232\202\314\225\204\215\206\211\273\202\311\202\346\202\301\202\304\214\210\222\350\202\263\202\352\202\351\202\314\202\305\201CXML\202\311\202\306\202\301\202\304\202\315\210\323\226\241\202\252\202\310\202\242\201B\012')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('[a-zA-Z]')
handle_end_tag(code)
handle_data(', ')
handle_start_tag(code, {})
handle_data('[#xN-#xN]')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\216w\222\350\202\265\202\275\224\315\210\315\202\314\222l(\227\274\222[\202\314\222l\202\360\212\334\202\336\201B\201j\202\360\202\340\202\302\224C\210\323\202\314')
handle_start_tag(termref, {'def' : 'dt-character'})
handle_data('\225\266\216\232')
handle_end_tag(termref)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('[^a-z]')
handle_end_tag(code)
handle_data(', ')
handle_start_tag(code, {})
handle_data('[^#xN-#xN]')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\216w\222\350\202\265\202\275\224\315\210\315')
handle_start_tag(emph, {})
handle_data('\212O')
handle_end_tag(emph)
handle_data('\202\314\222l\202\360\202\340\202\302\224C\210\323\202\314')
handle_start_tag(termref, {'def' : 'dt-character'})
handle_data('\225\266\216\232')
handle_end_tag(termref)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('[^abc]')
handle_end_tag(code)
handle_data(', ')
handle_start_tag(code, {})
handle_data('[^#xN#xN#xN]')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\216w\222\350\202\265\202\275\225\266\216\232\210\310\212O\202\314\222l\202\360\202\340\202\302\224C\210\323\202\314')
handle_start_tag(termref, {'def' : 'dt-character'})
handle_data('\225\266\216\232')
handle_end_tag(termref)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('"string"')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\223\361\217d\210\370\227p\225\204')
handle_data('\202\305\210\315\202\336')
handle_data('\225\266\216\232\227\361')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\306')
handle_start_tag(termref, {'def' : 'dt-match'})
handle_data('\203}\203b\203`')
handle_data('\202\265\202\304\202\242\202\351')
handle_end_tag(termref)
handle_data('\225\266\216\232\227\361')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data("'string'")
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\210\352\217d\210\370\227p\225\204')
handle_data('\202\305\210\315\202\336')
handle_data('\225\266\216\232\227\361')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\306')
handle_start_tag(termref, {'def' : 'dt-match'})
handle_data('\203}\203b\203`')
handle_data('\202\265\202\304\202\242\202\351')
handle_end_tag(termref)
handle_data('\225\266\216\232\227\361')
handle_data('\203\212\203e\203\211\203\213')
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_end_tag(glist)
handle_data('\012\202\261\202\352\202\347\202\314\213L\215\206\202\315\201C\216\237\202\314\214`\216\256\202\314\221g\215\207\202\271\202\305\216g\227p\202\267\202\351\201B\202\261\202\261\202\305\201C')
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data('\213y\202\321')
handle_start_tag(code, {})
handle_data('B')
handle_end_tag(code)
handle_data('\202\315\201C\222P\217\203\202\310\216\256\202\306\202\267\202\351\201B\012')
handle_start_tag(glist, {})
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_data('(')
handle_start_tag(code, {})
handle_data('expression')
handle_end_tag(code)
handle_data(')')
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('expression')
handle_end_tag(code)
handle_data('\202\315\201C\210\352\202\302\202\314\202\334\202\306\202\334\202\350\202\306\202\265\202\304\210\265\202\242\201C\202\261\202\261\202\311\216\246\202\267\221g\215\207\202\271\202\305\216g\202\301\202\304\202\340\202\346\202\242\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('A?')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data('\226\224\202\315\211\275\202\340\202\310\202\265\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351(\203I\203v\203V\203\207\203\223\202\314')
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data(')\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('A B')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data('\202\314\216\237\202\311')
handle_start_tag(code, {})
handle_data('B')
handle_end_tag(code)
handle_data('\202\252\217o\214\273\202\267\202\351\202\340\202\314\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B\012')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('A | B')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data('\226\224\202\315')
handle_start_tag(code, {})
handle_data('B')
handle_end_tag(code)
handle_data('\201C\202\275\202\276\202\265\201C\227\274\225\373\202\305\202\315\202\310\202\242\201C\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B\012')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('A - B')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\252\201C')
handle_start_tag(code, {})
handle_data('B')
handle_end_tag(code)
handle_data('\202\306\202\315')
handle_data('\203}\203b\203`')
handle_data('\202\265\202\310\202\242\201C\224C\210\323\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('A+')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data('\202\3141\211\361\210\310\217\343\202\314\214J\225\324\202\265\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('A*')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_start_tag(code, {})
handle_data('A')
handle_end_tag(code)
handle_data('\202\3140\211\361\210\310\217\343\202\314\214J\225\324\202\265\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_comment(" DEATH TO %'s\012<gitem>\012<label><code>%a</code></label>\012<def><p>specifies that <emph>in the external DTD subset</emph> a\012<termref def='dt-param-entity'>parameter entity</termref> may occur in the\012text at the position where <code>a</code> may occur; if so, its\012replacement text must match <code>S? a S?</code>.  If\012the expression <code>a</code> is governed by a suffix operator, then\012the suffix operator determines both the maximum number of parameter-entity \012references allowed and the number of occurrences of <code>a</code>\012in the replacement text of the parameter entities:  <code>%a*</code>\012means that <code>a</code> must occur zero or more times, and\012that some of its occurrences may be replaced by references to\012parameter entities whose replacement text must contain zero or \012more occurrences of <code>a</code>; it is thus a more compact way\012of writing <code>%(a*)*</code>.\012Similarly, <code>%a+</code> means that <code>a</code>\012must occur one or more times, and may be replaced by \012parameter entities with replacement text matching \012<code>S? (a S?)+</code>.  \012The recognition of parameter entities in the internal subset is much more\012highly constrained.\012</p></def>\012</gitem>\012")
handle_data('\012')
handle_end_tag(glist)
handle_data('\012\220\266\220\254\213K\221\245\223\340\202\305\216g\227p\202\267\202\351\221\274\202\314\213L\226@\202\360\201C\216\237\202\311\216\246\202\267\201B\012')
handle_start_tag(glist, {})
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('/* ... */')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\203R\203\201\203\223\203g\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('[ wfc: ... ]')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\220\256\214`\216\256')
handle_data('\220\247\226\361\201B\220\266\220\254\213K\221\245\202\311\225t\227^\202\265\202\275\201C')
handle_start_tag(termref, {'def' : 'dt-wellformed'})
handle_data('\220\256\214`\216\256')
handle_end_tag(termref)
handle_data('\202\314\225\266\217\221\202\311\212\326\202\267\202\351\220\247\226\361\202\360\201C\226\274\221O\202\311\202\346\202\301\202\304')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\201B')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_start_tag(gitem, {})
handle_data('\012')
handle_start_tag(label, {})
handle_start_tag(code, {})
handle_data('[ vc: ... ]')
handle_end_tag(code)
handle_end_tag(label)
handle_data('\012')
handle_start_tag(def, {})
handle_start_tag(p, {})
handle_data('\221\303\223\226\220\253')
handle_data('\220\247\226\361\201B\220\266\220\254\213K\221\245\202\311\225t\227^\202\265\202\275\201C')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226')
handle_end_tag(termref)
handle_data('\202\310\225\266\217\221\202\311\212\326\202\267\202\351\220\247\226\361\202\360\201C\226\274\221O\202\311\202\346\202\301\202\304')
handle_data('\223\301\222\350\202\267\202\351')
handle_data('\201B\012')
handle_end_tag(p)
handle_end_tag(def)
handle_data('\012')
handle_end_tag(gitem)
handle_data('\012')
handle_end_tag(glist)
handle_data('\012')
handle_end_tag(p)
handle_end_tag(div1)
handle_data('\012\012')
handle_end_tag(body)
handle_data('\012')
handle_start_tag(back, {})
handle_data('\012')
handle_comment(' &SGML; ')
handle_data('\012\012')
handle_comment(' &Biblio; ')
handle_data('\012')
handle_start_tag(div1, {'id' : 'sec-bibliography'})
handle_data('\012\012')
handle_start_tag(head, {})
handle_data('\216Q\215l\225\266\214\243')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(div2, {'id' : 'sec-existing-stds'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\213K\222\350\202\314')
handle_data('\216Q\215l\225\266\214\243')
handle_end_tag(head)
handle_data('\012')
handle_comment('* <ulist><item>\012<p>Unicode and ISO/IEC 10646.  This specification depends on the\012international standard ISO/IEC 10646 (with amendments AM 1 through AM 7)\012and the Unicode Standard, Version 2.0 <bibref ref=\'Unicode\'/>, \012which define the encodings and meanings of\012the <termref def="dt-character">characters</termref> which \012make up XML <termref def="dt-text">text</termref>.\012All the characters in ISO/IEC 10646 are present, at the same code points, \012in Unicode.</p></item>\012<item><p>XXX XXX defines the syntax and semantics of \012Uniform Resource Identifiers, or URIs.</p></item>\012<item><p>IETF RFC 1766, with ISO 639 and 3166, \012describe the codes that may be used in the \012special <titleref href=\'sec-lang-tag\'>xml:lang</titleref> attribute.</p>\012</item></ulist>\012*')
handle_data('\012\012')
handle_start_tag(blist, {})
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'RFC1766', 'key' : 'IETF RFC 1766'})
handle_data('\012IETF (Internet Engineering Task Force).\012')
handle_start_tag(emph, {})
handle_data('RFC 1766:  Tags for the Identification of Languages')
handle_end_tag(emph)
handle_data(',\012ed. H. Alvestrand.\0121995.\012')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'ISO639', 'key' : 'ISO 639'})
handle_data('\012(International Organization for Standardization).\012')
handle_start_tag(emph, {})
handle_data('ISO 8879:1988 (E).\012Code for the representation of names of languages.')
handle_end_tag(emph)
handle_data('\012[Geneva]:  International Organization for\012Standardization, 1988.')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'ISO3166', 'key' : 'ISO 3166'})
handle_data('\012(International Organization for Standardization).\012')
handle_start_tag(emph, {})
handle_data('ISO 3166-1:1997 (E).\012Codes for the representation of names of countries and their subdivisions \012')
handle_data('--')
handle_data(' Part 1: Country codes')
handle_end_tag(emph)
handle_data('\012[Geneva]:  International Organization for\012Standardization, 1997.')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'ISO10646', 'key' : 'ISO/IEC 10646'})
handle_data('ISO\012(International Organization for Standardization).\012')
handle_start_tag(emph, {})
handle_data('ISO/IEC 10646-1993 (E).  Information technology ')
handle_data('--')
handle_data(' Universal\012Multiple-Octet Coded Character Set (UCS) ')
handle_data('--')
handle_data(' Part 1:\012Architecture and Basic Multilingual Plane.')
handle_end_tag(emph)
handle_data('\012[Geneva]:  International Organization for\012Standardization, 1993 (plus amendments AM 1 through AM 7).\012')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'Unicode', 'key' : 'Unicode'})
handle_data('The Unicode Consortium.\012')
handle_start_tag(emph, {})
handle_data('The Unicode Standard, Version 2.0.')
handle_end_tag(emph)
handle_data('\012Reading, Mass.:  Addison-Wesley Developers Press, 1996.')
handle_end_tag(bibl)
handle_data('\012\012')
handle_end_tag(blist)
handle_data('\012\012')
handle_end_tag(div2)
handle_data('\012\012')
handle_start_tag(div2, {})
handle_start_tag(head, {})
handle_data('\221\274\202\314\216Q\215l\225\266\214\243')
handle_end_tag(head)
handle_data(' \012\012')
handle_start_tag(blist, {})
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'Aho', 'key' : 'Aho/Ullman'})
handle_data('Aho, Alfred V., \012Ravi Sethi, and Jeffrey D. Ullman.\012')
handle_start_tag(emph, {})
handle_data('Compilers:  Principles, Techniques, and Tools')
handle_end_tag(emph)
handle_data('.\012Reading:  Addison-Wesley, 1986, rpt. corr. 1988.')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'Berners-Lee', 'key' : 'Berners-Lee et al.', 'xml-link' : 'simple'})
handle_data('\012Berners-Lee, T., R. Fielding, and L. Masinter.\012')
handle_start_tag(emph, {})
handle_data('Uniform Resource Identifiers (URI):  Generic Syntax and\012Semantics')
handle_end_tag(emph)
handle_data('.\0121997.\012(Work in progress; see updates to RFC1738.)')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'ABK', 'key' : 'Br\374ggemann-Klein'})
handle_data('Br')
handle_data('\374')
handle_data('ggemann-Klein, Anne.\012')
handle_start_tag(emph, {})
handle_data('Regular Expressions into Finite Automata')
handle_end_tag(emph)
handle_data('.\012Extended abstract in I. Simon, Hrsg., LATIN 1992, \012S. 97-98. Springer-Verlag, Berlin 1992. \012Full Version in Theoretical Computer Science 120: 197-213, 1993.\012')
handle_comment('\012Universitat Freiburg, Institut fur Informatik,\012Bericht 33, Juli 1991.')
handle_data('\012')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'ABKDW', 'key' : 'Br\374ggemann-Klein and Wood'})
handle_data('Br')
handle_data('\374')
handle_data('ggemann-Klein, Anne,\012and Derick Wood.\012')
handle_start_tag(emph, {})
handle_data('Deterministic Regular Languages')
handle_end_tag(emph)
handle_data('.\012Universit')
handle_data('\344')
handle_data('t Freiburg, Institut f')
handle_data('\374')
handle_data('r Informatik,\012Bericht 38, Oktober 1991.\012')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'RFC1738', 'key' : 'IETF RFC1738', 'xml-link' : 'simple'})
handle_data('\012IETF (Internet Engineering Task Force).\012')
handle_start_tag(emph, {})
handle_data('RFC 1738:  Uniform Resource Locators (URL)')
handle_end_tag(emph)
handle_data(', \012ed. T. Berners-Lee, L. Masinter, M. McCahill.\0121994.\012')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'RFC1808', 'key' : 'IETF RFC1808', 'xml-link' : 'simple'})
handle_data('\012IETF (Internet Engineering Task Force).\012')
handle_start_tag(emph, {})
handle_data('RFC 1808:  Relative Uniform Resource Locators')
handle_end_tag(emph)
handle_data(', \012ed. R. Fielding.\0121995.\012')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'RFC2141', 'key' : 'IETF RFC2141', 'xml-link' : 'simple'})
handle_data('\012IETF (Internet Engineering Task Force).\012')
handle_start_tag(emph, {})
handle_data('RFC 2141:  URN Syntax')
handle_end_tag(emph)
handle_data(', \012ed. R. Moats.\0121997.\012')
handle_end_tag(bibl)
handle_data('\012\012')
handle_start_tag(bibl, {'id' : 'ISO8879', 'key' : 'ISO/IEC 8879'})
handle_data('ISO\012(International Organization for Standardization).\012')
handle_start_tag(emph, {})
handle_data('ISO/IEC 8879-1986 (E).  Information processing ')
handle_data('--')
handle_data(' Text and Office\012Systems ')
handle_data('--')
handle_data(' Standard Generalized Markup Language (SGML).')
handle_end_tag(emph)
handle_data('  First\012edition ')
handle_data('--')
handle_data(' 1986-10-15.  [Geneva]:  International Organization for\012Standardization, 1986.\012')
handle_end_tag(bibl)
handle_data('\012\012\012')
handle_start_tag(bibl, {'id' : 'ISO10744', 'key' : 'ISO/IEC 10744'})
handle_data('ISO\012(International Organization for Standardization).\012')
handle_start_tag(emph, {})
handle_data('ISO/IEC 10744-1992 (E).  Information technology ')
handle_data('--')
handle_data('\012Hypermedia/Time-based Structuring Language (HyTime).\012')
handle_end_tag(emph)
handle_data('\012[Geneva]:  International Organization for\012Standardization, 1992.\012')
handle_start_tag(emph, {})
handle_data('Extended Facilities Annexe.')
handle_end_tag(emph)
handle_data('\012[Geneva]:  International Organization for\012Standardization, 1996. \012')
handle_end_tag(bibl)
handle_data('\012\012\012\012')
handle_end_tag(blist)
handle_data('\012')
handle_end_tag(div2)
handle_data('\012')
handle_end_tag(div1)
handle_data('\012')
handle_start_tag(div1, {'id' : 'CharClasses'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232\203N\203\211\203X')
handle_end_tag(head)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('Unicode\225W\217\200\202\311\222\350\213`\202\267\202\351')
handle_data('\203v\203\215\203p\203e\203B')
handle_data('\202\311\202\265\202\275\202\252\202\301\202\304\201C\225\266\216\232\202\315\201C')
handle_data('\212\356\222\352\225\266\216\232')
handle_data('(BaseChar)(\202\261\202\352\202\347\202\315\201C')
handle_data('\224\255\211\271\225\204')
handle_data('\202\360\217\234\202\255\203\211\203e\203\223\203A\203\213\203t\203@\203x\203b\203g\202\314\203A\203\213\203t\203@\203x\203b\203g\225\266\216\232\202\360\212\334\202\336)\201C')
handle_data('\223\235\215\207\212\277\216\232')
handle_data('(ideographic)\213y\202\321')
handle_data('\214\213\215\207\225\266\216\232')
handle_data('(CombiningChar)(\202\261\202\314\203N\203\211\203X\202\315\201C\202\331\202\306\202\361\202\307\202\314')
handle_data('\224\255\211\271\225\204')
handle_data('\202\360\212\334\202\336)\202\311\203N\203\211\203X\225\252\202\257\202\267\202\351\201B\202\261\202\352\202\347\202\314\203N\203\211\203X\202\315\201C\214\213\215\207\202\265\201C')
handle_data('\216\232')
handle_data('(Letter)\202\314\203N\203\211\203X\202\306\202\310\202\351\201B10\220i\220\224\222l(Digit)\213y\202\321')
handle_data('\203G\203N\203X\203e\203\223\203_')
handle_data('(Extender)\202\340\213\346\225\312\202\267\202\351\201B\012')
handle_start_tag(scrap, {'id' : 'CHARACTERS', 'lang' : 'ebnf'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(prodgroup, {'pcw3' : '3', 'pcw4' : '15'})
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Letter'})
handle_start_tag(lhs, {})
handle_data('Letter')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_start_tag(nt, {'def' : 'NT-BaseChar'})
handle_data('BaseChar')
handle_end_tag(nt)
handle_data(' \012| ')
handle_start_tag(nt, {'def' : 'NT-Ideographic'})
handle_data('Ideographic')
handle_end_tag(nt)
handle_end_tag(rhs)
handle_data(' ')
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-BaseChar'})
handle_start_tag(lhs, {})
handle_data('BaseChar')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('[#x0041-#x005A]\012|')
handle_data('\240')
handle_data('[#x0061-#x007A]\012|')
handle_data('\240')
handle_data('[#x00C0-#x00D6]\012|')
handle_data('\240')
handle_data('[#x00D8-#x00F6]\012|')
handle_data('\240')
handle_data('[#x00F8-#x00FF]\012|')
handle_data('\240')
handle_data('[#x0100-#x0131]\012|')
handle_data('\240')
handle_data('[#x0134-#x013E]\012|')
handle_data('\240')
handle_data('[#x0141-#x0148]\012|')
handle_data('\240')
handle_data('[#x014A-#x017E]\012|')
handle_data('\240')
handle_data('[#x0180-#x01C3]\012|')
handle_data('\240')
handle_data('[#x01CD-#x01F0]\012|')
handle_data('\240')
handle_data('[#x01F4-#x01F5]\012|')
handle_data('\240')
handle_data('[#x01FA-#x0217]\012|')
handle_data('\240')
handle_data('[#x0250-#x02A8]\012|')
handle_data('\240')
handle_data('[#x02BB-#x02C1]\012|')
handle_data('\240')
handle_data('#x0386\012|')
handle_data('\240')
handle_data('[#x0388-#x038A]\012|')
handle_data('\240')
handle_data('#x038C\012|')
handle_data('\240')
handle_data('[#x038E-#x03A1]\012|')
handle_data('\240')
handle_data('[#x03A3-#x03CE]\012|')
handle_data('\240')
handle_data('[#x03D0-#x03D6]\012|')
handle_data('\240')
handle_data('#x03DA\012|')
handle_data('\240')
handle_data('#x03DC\012|')
handle_data('\240')
handle_data('#x03DE\012|')
handle_data('\240')
handle_data('#x03E0\012|')
handle_data('\240')
handle_data('[#x03E2-#x03F3]\012|')
handle_data('\240')
handle_data('[#x0401-#x040C]\012|')
handle_data('\240')
handle_data('[#x040E-#x044F]\012|')
handle_data('\240')
handle_data('[#x0451-#x045C]\012|')
handle_data('\240')
handle_data('[#x045E-#x0481]\012|')
handle_data('\240')
handle_data('[#x0490-#x04C4]\012|')
handle_data('\240')
handle_data('[#x04C7-#x04C8]\012|')
handle_data('\240')
handle_data('[#x04CB-#x04CC]\012|')
handle_data('\240')
handle_data('[#x04D0-#x04EB]\012|')
handle_data('\240')
handle_data('[#x04EE-#x04F5]\012|')
handle_data('\240')
handle_data('[#x04F8-#x04F9]\012|')
handle_data('\240')
handle_data('[#x0531-#x0556]\012|')
handle_data('\240')
handle_data('#x0559\012|')
handle_data('\240')
handle_data('[#x0561-#x0586]\012|')
handle_data('\240')
handle_data('[#x05D0-#x05EA]\012|')
handle_data('\240')
handle_data('[#x05F0-#x05F2]\012|')
handle_data('\240')
handle_data('[#x0621-#x063A]\012|')
handle_data('\240')
handle_data('[#x0641-#x064A]\012|')
handle_data('\240')
handle_data('[#x0671-#x06B7]\012|')
handle_data('\240')
handle_data('[#x06BA-#x06BE]\012|')
handle_data('\240')
handle_data('[#x06C0-#x06CE]\012|')
handle_data('\240')
handle_data('[#x06D0-#x06D3]\012|')
handle_data('\240')
handle_data('#x06D5\012|')
handle_data('\240')
handle_data('[#x06E5-#x06E6]\012|')
handle_data('\240')
handle_data('[#x0905-#x0939]\012|')
handle_data('\240')
handle_data('#x093D\012|')
handle_data('\240')
handle_data('[#x0958-#x0961]\012|')
handle_data('\240')
handle_data('[#x0985-#x098C]\012|')
handle_data('\240')
handle_data('[#x098F-#x0990]\012|')
handle_data('\240')
handle_data('[#x0993-#x09A8]\012|')
handle_data('\240')
handle_data('[#x09AA-#x09B0]\012|')
handle_data('\240')
handle_data('#x09B2\012|')
handle_data('\240')
handle_data('[#x09B6-#x09B9]\012|')
handle_data('\240')
handle_data('[#x09DC-#x09DD]\012|')
handle_data('\240')
handle_data('[#x09DF-#x09E1]\012|')
handle_data('\240')
handle_data('[#x09F0-#x09F1]\012|')
handle_data('\240')
handle_data('[#x0A05-#x0A0A]\012|')
handle_data('\240')
handle_data('[#x0A0F-#x0A10]\012|')
handle_data('\240')
handle_data('[#x0A13-#x0A28]\012|')
handle_data('\240')
handle_data('[#x0A2A-#x0A30]\012|')
handle_data('\240')
handle_data('[#x0A32-#x0A33]\012|')
handle_data('\240')
handle_data('[#x0A35-#x0A36]\012|')
handle_data('\240')
handle_data('[#x0A38-#x0A39]\012|')
handle_data('\240')
handle_data('[#x0A59-#x0A5C]\012|')
handle_data('\240')
handle_data('#x0A5E\012|')
handle_data('\240')
handle_data('[#x0A72-#x0A74]\012|')
handle_data('\240')
handle_data('[#x0A85-#x0A8B]\012|')
handle_data('\240')
handle_data('#x0A8D\012|')
handle_data('\240')
handle_data('[#x0A8F-#x0A91]\012|')
handle_data('\240')
handle_data('[#x0A93-#x0AA8]\012|')
handle_data('\240')
handle_data('[#x0AAA-#x0AB0]\012|')
handle_data('\240')
handle_data('[#x0AB2-#x0AB3]\012|')
handle_data('\240')
handle_data('[#x0AB5-#x0AB9]\012|')
handle_data('\240')
handle_data('#x0ABD\012|')
handle_data('\240')
handle_data('#x0AE0\012|')
handle_data('\240')
handle_data('[#x0B05-#x0B0C]\012|')
handle_data('\240')
handle_data('[#x0B0F-#x0B10]\012|')
handle_data('\240')
handle_data('[#x0B13-#x0B28]\012|')
handle_data('\240')
handle_data('[#x0B2A-#x0B30]\012|')
handle_data('\240')
handle_data('[#x0B32-#x0B33]\012|')
handle_data('\240')
handle_data('[#x0B36-#x0B39]\012|')
handle_data('\240')
handle_data('#x0B3D\012|')
handle_data('\240')
handle_data('[#x0B5C-#x0B5D]\012|')
handle_data('\240')
handle_data('[#x0B5F-#x0B61]\012|')
handle_data('\240')
handle_data('[#x0B85-#x0B8A]\012|')
handle_data('\240')
handle_data('[#x0B8E-#x0B90]\012|')
handle_data('\240')
handle_data('[#x0B92-#x0B95]\012|')
handle_data('\240')
handle_data('[#x0B99-#x0B9A]\012|')
handle_data('\240')
handle_data('#x0B9C\012|')
handle_data('\240')
handle_data('[#x0B9E-#x0B9F]\012|')
handle_data('\240')
handle_data('[#x0BA3-#x0BA4]\012|')
handle_data('\240')
handle_data('[#x0BA8-#x0BAA]\012|')
handle_data('\240')
handle_data('[#x0BAE-#x0BB5]\012|')
handle_data('\240')
handle_data('[#x0BB7-#x0BB9]\012|')
handle_data('\240')
handle_data('[#x0C05-#x0C0C]\012|')
handle_data('\240')
handle_data('[#x0C0E-#x0C10]\012|')
handle_data('\240')
handle_data('[#x0C12-#x0C28]\012|')
handle_data('\240')
handle_data('[#x0C2A-#x0C33]\012|')
handle_data('\240')
handle_data('[#x0C35-#x0C39]\012|')
handle_data('\240')
handle_data('[#x0C60-#x0C61]\012|')
handle_data('\240')
handle_data('[#x0C85-#x0C8C]\012|')
handle_data('\240')
handle_data('[#x0C8E-#x0C90]\012|')
handle_data('\240')
handle_data('[#x0C92-#x0CA8]\012|')
handle_data('\240')
handle_data('[#x0CAA-#x0CB3]\012|')
handle_data('\240')
handle_data('[#x0CB5-#x0CB9]\012|')
handle_data('\240')
handle_data('#x0CDE\012|')
handle_data('\240')
handle_data('[#x0CE0-#x0CE1]\012|')
handle_data('\240')
handle_data('[#x0D05-#x0D0C]\012|')
handle_data('\240')
handle_data('[#x0D0E-#x0D10]\012|')
handle_data('\240')
handle_data('[#x0D12-#x0D28]\012|')
handle_data('\240')
handle_data('[#x0D2A-#x0D39]\012|')
handle_data('\240')
handle_data('[#x0D60-#x0D61]\012|')
handle_data('\240')
handle_data('[#x0E01-#x0E2E]\012|')
handle_data('\240')
handle_data('#x0E30\012|')
handle_data('\240')
handle_data('[#x0E32-#x0E33]\012|')
handle_data('\240')
handle_data('[#x0E40-#x0E45]\012|')
handle_data('\240')
handle_data('[#x0E81-#x0E82]\012|')
handle_data('\240')
handle_data('#x0E84\012|')
handle_data('\240')
handle_data('[#x0E87-#x0E88]\012|')
handle_data('\240')
handle_data('#x0E8A\012|')
handle_data('\240')
handle_data('#x0E8D\012|')
handle_data('\240')
handle_data('[#x0E94-#x0E97]\012|')
handle_data('\240')
handle_data('[#x0E99-#x0E9F]\012|')
handle_data('\240')
handle_data('[#x0EA1-#x0EA3]\012|')
handle_data('\240')
handle_data('#x0EA5\012|')
handle_data('\240')
handle_data('#x0EA7\012|')
handle_data('\240')
handle_data('[#x0EAA-#x0EAB]\012|')
handle_data('\240')
handle_data('[#x0EAD-#x0EAE]\012|')
handle_data('\240')
handle_data('#x0EB0\012|')
handle_data('\240')
handle_data('[#x0EB2-#x0EB3]\012|')
handle_data('\240')
handle_data('#x0EBD\012|')
handle_data('\240')
handle_data('[#x0EC0-#x0EC4]\012|')
handle_data('\240')
handle_data('[#x0F40-#x0F47]\012|')
handle_data('\240')
handle_data('[#x0F49-#x0F69]\012|')
handle_data('\240')
handle_data('[#x10A0-#x10C5]\012|')
handle_data('\240')
handle_data('[#x10D0-#x10F6]\012|')
handle_data('\240')
handle_data('#x1100\012|')
handle_data('\240')
handle_data('[#x1102-#x1103]\012|')
handle_data('\240')
handle_data('[#x1105-#x1107]\012|')
handle_data('\240')
handle_data('#x1109\012|')
handle_data('\240')
handle_data('[#x110B-#x110C]\012|')
handle_data('\240')
handle_data('[#x110E-#x1112]\012|')
handle_data('\240')
handle_data('#x113C\012|')
handle_data('\240')
handle_data('#x113E\012|')
handle_data('\240')
handle_data('#x1140\012|')
handle_data('\240')
handle_data('#x114C\012|')
handle_data('\240')
handle_data('#x114E\012|')
handle_data('\240')
handle_data('#x1150\012|')
handle_data('\240')
handle_data('[#x1154-#x1155]\012|')
handle_data('\240')
handle_data('#x1159\012|')
handle_data('\240')
handle_data('[#x115F-#x1161]\012|')
handle_data('\240')
handle_data('#x1163\012|')
handle_data('\240')
handle_data('#x1165\012|')
handle_data('\240')
handle_data('#x1167\012|')
handle_data('\240')
handle_data('#x1169\012|')
handle_data('\240')
handle_data('[#x116D-#x116E]\012|')
handle_data('\240')
handle_data('[#x1172-#x1173]\012|')
handle_data('\240')
handle_data('#x1175\012|')
handle_data('\240')
handle_data('#x119E\012|')
handle_data('\240')
handle_data('#x11A8\012|')
handle_data('\240')
handle_data('#x11AB\012|')
handle_data('\240')
handle_data('[#x11AE-#x11AF]\012|')
handle_data('\240')
handle_data('[#x11B7-#x11B8]\012|')
handle_data('\240')
handle_data('#x11BA\012|')
handle_data('\240')
handle_data('[#x11BC-#x11C2]\012|')
handle_data('\240')
handle_data('#x11EB\012|')
handle_data('\240')
handle_data('#x11F0\012|')
handle_data('\240')
handle_data('#x11F9\012|')
handle_data('\240')
handle_data('[#x1E00-#x1E9B]\012|')
handle_data('\240')
handle_data('[#x1EA0-#x1EF9]\012|')
handle_data('\240')
handle_data('[#x1F00-#x1F15]\012|')
handle_data('\240')
handle_data('[#x1F18-#x1F1D]\012|')
handle_data('\240')
handle_data('[#x1F20-#x1F45]\012|')
handle_data('\240')
handle_data('[#x1F48-#x1F4D]\012|')
handle_data('\240')
handle_data('[#x1F50-#x1F57]\012|')
handle_data('\240')
handle_data('#x1F59\012|')
handle_data('\240')
handle_data('#x1F5B\012|')
handle_data('\240')
handle_data('#x1F5D\012|')
handle_data('\240')
handle_data('[#x1F5F-#x1F7D]\012|')
handle_data('\240')
handle_data('[#x1F80-#x1FB4]\012|')
handle_data('\240')
handle_data('[#x1FB6-#x1FBC]\012|')
handle_data('\240')
handle_data('#x1FBE\012|')
handle_data('\240')
handle_data('[#x1FC2-#x1FC4]\012|')
handle_data('\240')
handle_data('[#x1FC6-#x1FCC]\012|')
handle_data('\240')
handle_data('[#x1FD0-#x1FD3]\012|')
handle_data('\240')
handle_data('[#x1FD6-#x1FDB]\012|')
handle_data('\240')
handle_data('[#x1FE0-#x1FEC]\012|')
handle_data('\240')
handle_data('[#x1FF2-#x1FF4]\012|')
handle_data('\240')
handle_data('[#x1FF6-#x1FFC]\012|')
handle_data('\240')
handle_data('#x2126\012|')
handle_data('\240')
handle_data('[#x212A-#x212B]\012|')
handle_data('\240')
handle_data('#x212E\012|')
handle_data('\240')
handle_data('[#x2180-#x2182]\012|')
handle_data('\240')
handle_data('[#x3041-#x3094]\012|')
handle_data('\240')
handle_data('[#x30A1-#x30FA]\012|')
handle_data('\240')
handle_data('[#x3105-#x312C]\012|')
handle_data('\240')
handle_data('[#xAC00-#xD7A3]\012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Ideographic'})
handle_start_tag(lhs, {})
handle_data('Ideographic')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('[#x4E00-#x9FA5]\012|')
handle_data('\240')
handle_data('#x3007\012|')
handle_data('\240')
handle_data('[#x3021-#x3029]\012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-CombiningChar'})
handle_start_tag(lhs, {})
handle_data('CombiningChar')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('[#x0300-#x0345]\012|')
handle_data('\240')
handle_data('[#x0360-#x0361]\012|')
handle_data('\240')
handle_data('[#x0483-#x0486]\012|')
handle_data('\240')
handle_data('[#x0591-#x05A1]\012|')
handle_data('\240')
handle_data('[#x05A3-#x05B9]\012|')
handle_data('\240')
handle_data('#x05BB#x05BD\012|')
handle_data('\240')
handle_data('#x05BF\012|')
handle_data('\240')
handle_data('[#x05C1-#x05C2]\012|')
handle_data('\240')
handle_data('#x05C4\012|')
handle_data('\240')
handle_data('#x064B#x0652\012|')
handle_data('\240')
handle_data('#x0670\012|')
handle_data('\240')
handle_data('[#x06D6-#x06DC]\012|')
handle_data('\240')
handle_data('#x06DD#x06DF\012|')
handle_data('\240')
handle_data('[#x06E0-#x06E4]\012|')
handle_data('\240')
handle_data('[#x06E7-#x06E8]\012|')
handle_data('\240')
handle_data('[#x06EA-#x06ED]\012|')
handle_data('\240')
handle_data('[#x0901-#x0903]\012|')
handle_data('\240')
handle_data('#x093C\012|')
handle_data('\240')
handle_data('[#x093E-#x094C]\012|')
handle_data('\240')
handle_data('#x094D\012|')
handle_data('\240')
handle_data('[#x0951-#x0954]\012|')
handle_data('\240')
handle_data('[#x0962-#x0963]\012|')
handle_data('\240')
handle_data('[#x0981-#x0983]\012|')
handle_data('\240')
handle_data('#x09BC\012|')
handle_data('\240')
handle_data('#x09BE\012|')
handle_data('\240')
handle_data('#x09BF\012|')
handle_data('\240')
handle_data('[#x09C0-#x09C4]\012|')
handle_data('\240')
handle_data('[#x09C7-#x09C8]\012|')
handle_data('\240')
handle_data('[#x09CB-#x09CD]\012|')
handle_data('\240')
handle_data('#x09D7\012|')
handle_data('\240')
handle_data('[#x09E2-#x09E3]\012|')
handle_data('\240')
handle_data('#x0A02\012|')
handle_data('\240')
handle_data('#x0A3C\012|')
handle_data('\240')
handle_data('#x0A3E\012|')
handle_data('\240')
handle_data('#x0A3F\012|')
handle_data('\240')
handle_data('[#x0A40-#x0A42]\012|')
handle_data('\240')
handle_data('[#x0A47-#x0A48]\012|')
handle_data('\240')
handle_data('[#x0A4B-#x0A4D]\012|')
handle_data('\240')
handle_data('[#x0A70-#x0A71]\012|')
handle_data('\240')
handle_data('[#x0A81-#x0A83]\012|')
handle_data('\240')
handle_data('#x0ABC\012|')
handle_data('\240')
handle_data('[#x0ABE-#x0AC5]\012|')
handle_data('\240')
handle_data('[#x0AC7-#x0AC9]\012|')
handle_data('\240')
handle_data('[#x0ACB-#x0ACD]\012|')
handle_data('\240')
handle_data('[#x0B01-#x0B03]\012|')
handle_data('\240')
handle_data('#x0B3C\012|')
handle_data('\240')
handle_data('[#x0B3E-#x0B43]\012|')
handle_data('\240')
handle_data('[#x0B47-#x0B48]\012|')
handle_data('\240')
handle_data('[#x0B4B-#x0B4D]\012|')
handle_data('\240')
handle_data('[#x0B56-#x0B57]\012|')
handle_data('\240')
handle_data('[#x0B82-#x0B83]\012|')
handle_data('\240')
handle_data('[#x0BBE-#x0BC2]\012|')
handle_data('\240')
handle_data('[#x0BC6-#x0BC8]\012|')
handle_data('\240')
handle_data('[#x0BCA-#x0BCD]\012|')
handle_data('\240')
handle_data('#x0BD7\012|')
handle_data('\240')
handle_data('[#x0C01-#x0C03]\012|')
handle_data('\240')
handle_data('[#x0C3E-#x0C44]\012|')
handle_data('\240')
handle_data('[#x0C46-#x0C48]\012|')
handle_data('\240')
handle_data('[#x0C4A-#x0C4D]\012|')
handle_data('\240')
handle_data('[#x0C55-#x0C56]\012|')
handle_data('\240')
handle_data('[#x0C82-#x0C83]\012|')
handle_data('\240')
handle_data('[#x0CBE-#x0CC4]\012|')
handle_data('\240')
handle_data('[#x0CC6-#x0CC8]\012|')
handle_data('\240')
handle_data('[#x0CCA-#x0CCD]\012|')
handle_data('\240')
handle_data('[#x0CD5-#x0CD6]\012|')
handle_data('\240')
handle_data('[#x0D02-#x0D03]\012|')
handle_data('\240')
handle_data('[#x0D3E-#x0D43]\012|')
handle_data('\240')
handle_data('[#x0D46-#x0D48]\012|')
handle_data('\240')
handle_data('[#x0D4A-#x0D4D]\012|')
handle_data('\240')
handle_data('#x0D57\012|')
handle_data('\240')
handle_data('#x0E31\012|')
handle_data('\240')
handle_data('[#x0E34-#x0E3A]\012|')
handle_data('\240')
handle_data('[#x0E47-#x0E4E]\012|')
handle_data('\240')
handle_data('#x0EB1\012|')
handle_data('\240')
handle_data('[#x0EB4-#x0EB9]\012|')
handle_data('\240')
handle_data('[#x0EBB-#x0EBC]\012|')
handle_data('\240')
handle_data('[#x0EC8-#x0ECD]\012|')
handle_data('\240')
handle_data('[#x0F18-#x0F19]\012|')
handle_data('\240')
handle_data('#x0F35\012|')
handle_data('\240')
handle_data('#x0F37\012|')
handle_data('\240')
handle_data('#x0F39\012|')
handle_data('\240')
handle_data('#x0F3E\012|')
handle_data('\240')
handle_data('#x0F3F\012|')
handle_data('\240')
handle_data('[#x0F71-#x0F84]\012|')
handle_data('\240')
handle_data('[#x0F86-#x0F8B]\012|')
handle_data('\240')
handle_data('[#x0F90-#x0F95]\012|')
handle_data('\240')
handle_data('#x0F97\012|')
handle_data('\240')
handle_data('[#x0F99-#x0FAD]\012|')
handle_data('\240')
handle_data('[#x0FB1-#x0FB7]\012|')
handle_data('\240')
handle_data('#x0FB9\012|')
handle_data('\240')
handle_data('[#x20D0-#x20DC]\012|')
handle_data('\240')
handle_data('#x20E1\012|')
handle_data('\240')
handle_data('[#x302A-#x302F]\012|')
handle_data('\240')
handle_data('#x3099\012|')
handle_data('\240')
handle_data('#x309A\012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Digit'})
handle_start_tag(lhs, {})
handle_data('Digit')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('[#x0030-#x0039]\012|')
handle_data('\240')
handle_data('[#x0660-#x0669]\012|')
handle_data('\240')
handle_data('[#x06F0-#x06F9]\012|')
handle_data('\240')
handle_data('[#x0966-#x096F]\012|')
handle_data('\240')
handle_data('[#x09E6-#x09EF]\012|')
handle_data('\240')
handle_data('[#x0A66-#x0A6F]\012|')
handle_data('\240')
handle_data('[#x0AE6-#x0AEF]\012|')
handle_data('\240')
handle_data('[#x0B66-#x0B6F]\012|')
handle_data('\240')
handle_data('[#x0BE7-#x0BEF]\012|')
handle_data('\240')
handle_data('[#x0C66-#x0C6F]\012|')
handle_data('\240')
handle_data('[#x0CE6-#x0CEF]\012|')
handle_data('\240')
handle_data('[#x0D66-#x0D6F]\012|')
handle_data('\240')
handle_data('[#x0E50-#x0E59]\012|')
handle_data('\240')
handle_data('[#x0ED0-#x0ED9]\012|')
handle_data('\240')
handle_data('[#x0F20-#x0F29]\012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012')
handle_start_tag(prod, {'id' : 'NT-Extender'})
handle_start_tag(lhs, {})
handle_data('Extender')
handle_end_tag(lhs)
handle_data('\012')
handle_start_tag(rhs, {})
handle_data('#x00B7\012|')
handle_data('\240')
handle_data('#x02D0\012|')
handle_data('\240')
handle_data('#x02D1\012|')
handle_data('\240')
handle_data('#x0387\012|')
handle_data('\240')
handle_data('#x0640\012|')
handle_data('\240')
handle_data('#x0E46\012|')
handle_data('\240')
handle_data('#x0EC6\012|')
handle_data('\240')
handle_data('#x3005\012|')
handle_data('\240')
handle_data('[#x3031-#x3035]\012|')
handle_data('\240')
handle_data('[#x309D-#x309E]\012|')
handle_data('\240')
handle_data('[#x30FC-#x30FE]\012')
handle_end_tag(rhs)
handle_end_tag(prod)
handle_data('\012\012')
handle_end_tag(prodgroup)
handle_data('\012')
handle_end_tag(scrap)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\261\202\305\222\350\213`\202\267\202\351\225\266\216\232\203N\203\211\203X\202\315\201CUnicode\225\266\216\232\203f\201[\203^\203x\201[\203X\202\251\202\347\201C\216\237\202\314\202\306\202\250\202\350\202\311\223\276\202\351\202\261\202\306\202\252\202\305\202\253\202\351\201B\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('a) \226\274\221O\212J\216n\225\266\216\232\202\315\201CLl, Lu, Lo, Lt, Nl\203J\203e\203S\203\212\223\340\202\314\210\352\202\302\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('b) \226\274\221O\212J\216n\225\266\216\232\210\310\212O\202\314\226\274\221O\225\266\216\232\202\315\201CMc, Me, Mn, Lm, Nd\203J\203e\203S\203\212\223\340\202\314\210\352\202\302\202\305\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('c) ')
handle_data('\214\335\212\267\220\253\227\314\210\346')
handle_data('\202\311\202\240\202\351\225\266\216\232(\225\266\216\232\225\204\215\206\202\305#xF900\202\346\202\350\221\345\202\253\202\255#xFFFE\202\346\202\350\217\254\202\263\202\242\225\266\216\232)\202\315\201CXML\202\311\202\250\202\257\202\351\226\274\221O\202\306\202\265\202\304\202\315\201C\213\226\202\263\202\352\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('d) ')
handle_data('\203t\203H\203\223\203g\225\252\211\360')
handle_data('\202\251')
handle_data('\214\335\212\267\220\253\225\252\211\360')
handle_data('\202\360\202\340\202\302\225\266\216\232(\202\302\202\334\202\350\201C\203f\201[\203^\203x\201[\203X\223\340\202\314\202T\224\324\226\332\202\314\203t\203B\201[\203\213\203h\202\311"compatibility formatting tag"\202\252\202\240\202\351\202\340\202\314\201B\202\261\202\352\202\315\201C\202T\224\324\226\332\202\314\203t\203B\201[\203\213\203h\202\252\201C"')
handle_data('<')
handle_data('"\202\305\216n\202\334\202\351\202\261\202\306\202\311\202\346\202\301\202\304\203}\201[\203N\225t\202\257\202\263\202\352\202\351\201B)\202\315\201C\213\226\202\263\202\352\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('e) \216\237\202\314\225\266\216\232\202\315\201C\226\274\221O\212J\216n\225\266\216\232\202\306\202\265\202\304\210\265\202\244\201B\202\261\202\352\202\315\201C')
handle_data('\203v\203\215\203p\203e\203B\203t\203@\203C\203\213')
handle_data('\202\252\201C\202\261\202\352\202\347\202\314\225\266\216\232\202\360\203A\203\213\203t\203@\203x\203b\203g\202\311\227\336\216\227\202\267\202\351\202\306\214\251\202\310\202\267\202\261\202\306\202\311\202\346\202\351\201B\202\273\202\352\202\347\202\315\012[#x02BB-#x02C1], #x0559, #x06E5, #x06E6\202\306\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('f) \225\266\216\232\225\204\215\206\202\252#x20DD-#x20E0\202\314\225\266\216\232\202\315\201C(Unicode \202\3145.14\202\311\202\265\202\275\202\252\202\301\202\304)\217\234\212O\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('g) \225\266\216\232\225\204\215\206\202\252#x00B7\202\314\225\266\216\232\202\315\201C')
handle_data('\203v\203\215\203p\203e\203B\203\212\203X\203g')
handle_data('\202\311\202\265\202\275\202\252\202\301\202\304\201C')
handle_data('\203G\203N\203X\203e\203\223\203_')
handle_data('(extender)\202\311\225\252\227\336\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('h) \225\266\216\232#x0387\202\315\201C\202\261\202\352\202\311\221\212\223\226\202\267\202\351\220\263\213K\214`\202\252#x00B7\202\310\202\314\202\305\201C\226\274\221O\225\266\216\232\202\311\222\307\211\301\202\267\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data("i) \225\266\216\232':'\213y\202\321'_'\202\315\201C\226\274\221O\212J\216n\225\266\216\232\202\306\202\265\202\304\213\226\202\267\201B")
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data("j) \225\266\216\232'-'\213y\202\321'.'\202\315\201C\226\274\221O\225\266\216\232\202\306\202\265\202\304\213\226\202\267\201B")
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(div1)
handle_data('\012')
handle_start_tag(inform-div1, {'id' : 'sec-xml-and-sgml'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('XML\213y\202\321SGML')
handle_end_tag(head)
handle_data('\012\012')
handle_start_tag(p, {})
handle_data('XML\202\315\201CSGML\202\314')
handle_data('\203T\203u\203Z\203b\203g')
handle_data('\202\306\202\265\202\304\220\335\214v\202\263\202\352\202\304\202\242\202\351\201B\202\267\202\310\202\355\202\277\201C\202\267\202\327\202\304\202\314')
handle_start_tag(termref, {'def' : 'dt-valid'})
handle_data('\221\303\223\226')
handle_end_tag(termref)
handle_data('\202\310XML\225\266\217\221\202\315\201C\213K\212i\202\311\223K\215\207\202\267\202\351SGML\225\266\217\221\202\311\202\340\202\310\202\351\201BSGML\202\252\225\266\217\221\202\311\211\333\202\267\220\247\214\300\210\310\212O\202\311\201CXML\202\252\202\242\202\251\202\310\202\351\220\247\214\300\202\360\211\333\202\267\202\251\202\311\212\326\202\267\202\351\217\332\215\327\202\315\201C\225\312\202\314')
handle_start_tag(loc, {'href' : 'http://www.w3.org/TR/NOTE-sgml-xml'})
handle_data('\213K\222\366')
handle_end_tag(loc)
handle_data('\202\360\216Q\217\306\202\314\202\261\202\306\201B\202\261\202\314\213K\222\366\202\315\201CXML\202\314\220\247\226\361\217\360\214\217\202\360\216\246\202\267SGML\220\351\214\276\202\360\212\334\202\335\201C\202\261\202\352\202\315\201CSGML')
handle_data('\203p\201[\203T')
handle_data('\202\311\216g\227p\202\305\202\253\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(inform-div1)
handle_data('\012')
handle_start_tag(inform-div1, {'id' : 'sec-entexpand'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\216\300\221\314\216Q\217\306\213y\202\321\225\266\216\232\216Q\217\306\202\314\223W\212J')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\261\202\314\225t\230^\202\315\201C\216\300\221\314\216Q\217\306\213y\202\321\225\266\216\232\216Q\217\306\202\360\224F\216\257\202\265\201C\223W\212J\202\267\202\351\201C\210\352\230A\202\314\227\254\202\352\202\360\201C\227\341\202\311\216g\202\301\202\304\216\246\202\267\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012DTD\202\252\201C\216\237\202\314\220\351\214\276\202\360\212\334\202\336\217\352\215\207\202\360\215l\202\246\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('<!ENTITY example "<p>An ampersand (&#38;#38;) may be escaped\012numerically (&#38;#38;#38;) or with a general entity\012(&amp;amp;).</p>" >\012')
handle_end_tag(eg)
handle_data('\012XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\216\300\221\314\202\314\220\351\214\276\202\360\215\\\225\266\211\360\220\315\202\265\202\275\216\236\223_\202\305\225\266\216\232\216Q\217\306\202\360\224F\216\257\202\265\201C\202\261\202\352\202\360\211\360\214\210\202\267\202\351\201B\216\300\221\314"')
handle_start_tag(code, {})
handle_data('example')
handle_end_tag(code)
handle_data('"\202\314\222l\202\306\202\265\202\304\201C\216\237\202\314')
handle_data('\225\266\216\232\227\361')
handle_data('\202\360\225\333\221\266\202\267\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('<p>An ampersand (&#38;) may be escaped\012numerically (&#38;#38;) or with a general entity\012(&amp;amp;).</p>\012')
handle_end_tag(eg)
handle_data('\012\225\266\217\221\223\340\202\305"')
handle_start_tag(code, {})
handle_data('&')
handle_data('example;')
handle_end_tag(code)
handle_data('"\202\360\216Q\217\306\202\267\202\351\202\306\201C\202\261\202\314\203e\203L\203X\203g\202\315\201C\215\304\202\321\215\\\225\266\211\360\220\315\202\263\202\352\202\351\201B\202\261\202\314\202\306\202\253\201C\227v\221f"')
handle_start_tag(code, {})
handle_data('p')
handle_end_tag(code)
handle_data('"\202\314\212J\216n\203^\203O\213y\202\321\217I\227\271\203^\203O\202\360\224F\216\257\202\265\201C\216O\202\302\202\314\216Q\217\306\202\360\224F\216\257\202\265\223W\212J\202\267\202\351\201B\202\273\202\314\214\213\211\312\201C\227v\221f"')
handle_start_tag(code, {})
handle_data('p')
handle_end_tag(code)
handle_data('"\202\315\201C\216\237\202\314\223\340\227e\202\360\202\340\202\302(\202\267\202\327\202\304\203f\201[\203^\202\306\202\265\201C\213\346\220\330\202\350\216q\226\224\202\315')
handle_data('\203}\201[\203N\225t\202\257')
handle_data('\202\315\221\266\215\335\202\265\202\310\202\242\201B)\201B\012')
handle_start_tag(eg, {})
handle_data('An ampersand (&) may be escaped\012numerically (&#38;) or with a general entity\012(&amp;).\012')
handle_end_tag(eg)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\213K\221\245\213y\202\321\202\273\202\314\214\370\211\312\202\360\202\346\202\350\217\332\215\327\202\311\216\246\202\267\202\275\202\337\201C\202\263\202\347\202\311\225\241\216G\202\310\227\341\202\360\216\246\202\267\201B\216\237\202\314\227\341\202\305\201C\215s\224\324\215\206\202\315\201C\216Q\217\306\202\314\225\326\213X\202\314\202\275\202\337\202\276\202\257\202\311\225t\202\257\202\351\201B\012')
handle_start_tag(eg, {})
handle_data('1 <?xml version=\'1.0\'?>\0122 <!DOCTYPE test [\0123 <!ELEMENT test (#PCDATA) >\0124 <!ENTITY % xx \'&#37;zz;\'>\0125 <!ENTITY % zz \'&#60;!ENTITY tricky "error-prone" >\' >\0126 %xx;\0127 ]>\0128 <test>This sample shows a &tricky; method.</test>\012')
handle_end_tag(eg)
handle_data('\012\202\261\202\352\202\360\217\210\227\235\202\267\202\351\202\306\201C\216\237\202\314\202\306\202\250\202\350\202\306\202\310\202\351\201B\012')
handle_start_tag(ulist, {'spacing' : 'compact'})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) 4\215s\226\332\202\305\201C37\224\324\226\332\202\314\225\266\216\232\202\326\202\314\216Q\217\306\202\360\222\274\202\277\202\311\223W\212J\202\265\201C\203p\203\211\203\201\203^\216\300\221\314"')
handle_start_tag(code, {})
handle_data('xx')
handle_end_tag(code)
handle_data('"\202\360\201C\203V\203\223\203{\203\213\203e\201[\203u\203\213\202\311"')
handle_start_tag(code, {})
handle_data('%zz;')
handle_end_tag(code)
handle_data('"\202\306\202\242\202\244\222l\202\306\202\306\202\340\202\311\225\333\221\266\202\267\202\351\201B')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\360\215\304\202\321\221\226\215\270\202\267\202\351\202\261\202\306\202\315\202\310\202\242\202\314\202\305\201C\203p\203\211\203\201\203^\216\300\221\314"')
handle_start_tag(code, {})
handle_data('zz')
handle_end_tag(code)
handle_data('"\202\326\202\314\216Q\217\306\202\315\224F\216\257\202\265\202\310\202\242("')
handle_start_tag(code, {})
handle_data('zz')
handle_end_tag(code)
handle_data('"\202\315\201C\202\334\202\276\220\351\214\276\202\263\202\352\202\304\202\242\202\310\202\242\202\314\202\305\201C\221\226\215\270\202\263\202\352\202\352\202\316\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\310\202\351\201B)\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) 5\215s\226\332\202\305\201C\225\266\216\232\216Q\217\306"')
handle_start_tag(code, {})
handle_data('&')
handle_data('#60;')
handle_end_tag(code)
handle_data('"\202\360\222\274\202\277\202\311\223W\212J\202\265\201C\203p\203\211\203\201\203^\216\300\221\314"')
handle_start_tag(code, {})
handle_data('zz')
handle_end_tag(code)
handle_data('"\202\360"')
handle_start_tag(code, {})
handle_data('<')
handle_data('!ENTITY tricky "error-prone" >')
handle_end_tag(code)
handle_data('"\202\306\202\242\202\244')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\306\202\306\202\340\202\311\225\333\221\266\202\267\202\351\201B\202\261\202\352\202\315\201C')
handle_data('\220\256\214`\216\256')
handle_data('\202\314\216\300\221\314\220\351\214\276\202\306\202\267\202\351\201B')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) 6\215s\226\332\202\305\201C"')
handle_start_tag(code, {})
handle_data('xx')
handle_end_tag(code)
handle_data('"\202\326\202\314\216Q\217\306\202\360\224F\216\257\202\265\201C"')
handle_start_tag(code, {})
handle_data('xx')
handle_end_tag(code)
handle_data('"\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('(\202\267\202\310\202\355\202\277\201C"')
handle_start_tag(code, {})
handle_data('%zz;')
handle_end_tag(code)
handle_data('")\202\360\215\\\225\266\211\360\220\315\202\267\202\351\201B"')
handle_start_tag(code, {})
handle_data('zz')
handle_end_tag(code)
handle_data('"\202\326\202\314\216Q\217\306\202\360\221\261\202\242\202\304\224F\216\257\202\265\201C')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('("')
handle_start_tag(code, {})
handle_data('<')
handle_data('!ENTITY tricky "error-prone" >')
handle_end_tag(code)
handle_data('")\202\360\215\\\225\266\211\360\220\315\202\267\202\351\201B\210\352\224\312\216\300\221\314"')
handle_start_tag(code, {})
handle_data('tricky')
handle_end_tag(code)
handle_data('"\202\315\201C\202\261\202\314\216\236\223_\202\305\202\315\201C\220\351\214\276\202\263\202\352\202\304\202\250\202\350\201C\202\273\202\314')
handle_data('\222u\212\267\203e\203L\203X\203g')
handle_data('\202\315\201C"')
handle_start_tag(code, {})
handle_data('error-prone')
handle_end_tag(code)
handle_data('"\202\306\202\267\202\351\201B ')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('d) 8\215s\226\332\202\305\201C\210\352\224\312\216\300\221\314"')
handle_start_tag(code, {})
handle_data('tricky')
handle_end_tag(code)
handle_data('"\202\326\202\314\216Q\217\306\202\360\224F\216\257\202\265\201C\223W\212J\202\267\202\351\201B\227v\221f"')
handle_start_tag(code, {})
handle_data('test')
handle_end_tag(code)
handle_data('"\202\314\212\256\221S\202\310\223\340\227e\202\315\201C\216\237\202\314(\223\340\227e\202\360\202\273\202\352\216\251\221\314\225\\\214\273\202\267\202\351\201B)')
handle_data('\225\266\216\232\227\361')
handle_data('\202\306\202\310\202\351\201B\202\302\202\334\202\350\201C')
handle_start_tag(emph, {})
handle_data('This sample shows a error-prone method.')
handle_end_tag(emph)
handle_data('\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(inform-div1)
handle_data(' \012')
handle_start_tag(inform-div1, {'id' : 'determinism'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\214\210\222\350\223I\223\340\227e\203\202\203f\203\213')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_start_tag(termref, {'def' : 'dt-compat'})
handle_data('\214\335\212\267\220\253\202\314\202\275\202\337')
handle_end_tag(termref)
handle_data('\201C\227v\221f\220\351\214\276\202\311\202\250\202\257\202\351\223\340\227e\203\202\203f\203\213\202\315\201C\214\210\222\350\223I\202\306\202\267\202\351\225K\227v\202\252\202\240\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_comment(' FINAL EDIT:  WebSGML allows ambiguity? ')
handle_data('\012')
handle_start_tag(p, {})
handle_data('SGML\202\315\201C\214\210\222\350\223I\223\340\227e\203\202\203f\203\213(SGML\202\305\202\315\201C\224\361\202\240\202\242\202\334\202\242\202\306\214\304\202\324\201B)\202\360\227v\213\201\202\267\202\351\201BSGML\203V\203X\203e\203\200\202\360\227p\202\242\202\304\215\354\220\254\202\265\202\275XML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\224\361\214\210\222\350\223I\223\340\227e\203\202\203f\203\213\202\360')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\265\202\304\202\340\202\346\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\227\341\202\246\202\316\201C\223\340\227e\203\202\203f\203\213')
handle_start_tag(code, {})
handle_data('((b, c) | (b, d))')
handle_end_tag(code)
handle_data('\202\315\224\361\214\210\222\350\223I\202\306\202\310\202\351\201B\202\261\202\352\202\315\201C\215\305\217\211\202\311')
handle_start_tag(code, {})
handle_data('b')
handle_end_tag(code)
handle_data('\202\360\227^\202\246\202\275\202\306\202\253\201C\203\202\203f\203\213\223\340\202\314\202\242\202\270\202\352\202\314')
handle_start_tag(code, {})
handle_data('b')
handle_end_tag(code)
handle_data('\202\306')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\314\202\252\226]\202\334\202\265\202\242\202\251\201C\202\273\202\314\216\237\202\314\227v\221f\202\360\220\346\223\307\202\335\202\267\202\351\202\261\202\306\202\310\202\265\202\311\202\315\201C')
handle_data('\203p\201[\203T')
handle_data('\202\315\222m\202\351\202\261\202\306\202\252\202\305\202\253\202\310\202\242\202\261\202\306\202\311\202\346\202\351\201B\202\261\202\314\217\352\215\207\202\315\201C')
handle_start_tag(code, {})
handle_data('b')
handle_end_tag(code)
handle_data('\202\326\202\314\223\361\202\302\202\314\216Q\217\306\202\315\201C\210\352\202\302\202\314\216Q\217\306\202\311\202\334\202\306\202\337\202\351\202\261\202\306\202\252\202\305\202\253\201C\203\202\203f\203\213\202\315\201C')
handle_start_tag(code, {})
handle_data('(b, (c | d))')
handle_end_tag(code)
handle_data('\202\306\202\310\202\351\201B\202\261\202\352\202\305\201C\215\305\217\211\202\314')
handle_start_tag(code, {})
handle_data('b')
handle_end_tag(code)
handle_data('\202\252\201C\223\340\227e\203\202\203f\203\213\223\340\202\314\210\352\202\302\202\314\226\274\221O\202\306\202\276\202\257')
handle_data('\203}\203b\203`')
handle_data('\202\267\202\351\202\261\202\306\202\315\226\276\202\347\202\251\202\306\202\310\202\351\201B')
handle_data('\203p\201[\203T')
handle_data('\202\315\201C\220\346\223\307\202\335\202\265\202\304\201C\216\237\202\311\227\210\202\351\202\340\202\314\202\360\222m\202\351\225K\227v\202\252\202\310\202\242\201B')
handle_start_tag(code, {})
handle_data('c')
handle_end_tag(code)
handle_data('\202\340')
handle_start_tag(code, {})
handle_data('d')
handle_end_tag(code)
handle_data('\202\340\201C\216\363\227\235\202\263\202\352\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\214`\216\256\223I\202\311\216\246\202\267\201BAho, Sethi, and Ullman ')
handle_start_tag(bibref, {'ref' : 'Aho'})
handle_end_tag(bibref)
handle_data('\202\3143.9\202\314\203A\203\213\203S\203\212\203Y\203\2003.5\202\314\225W\217\200\223I\202\310\203A\203\213\203S\203\212\203Y\203\200\202\360\227p\202\242\202\304\201C\223\340\227e\203\202\203f\203\213\202\251\202\347\227L\214\300\203I\201[\203g\203}\203g\203\223\202\360\215\\\220\254\202\267\202\351\202\261\202\306\202\252\202\305\202\253\202\351\201B\202\261\202\314\216\355\202\314\221\275\202\255\202\314\203A\203\213\203S\203\212\203Y\203\200\202\305\202\315\201C\220\263\213K\225\\\214\273\202\311\202\250\202\257\202\351\212e\201X\202\314\210\312\222u(\202\302\202\334\202\350\201C\220\263\213K\225\\\214\273\202\314\215\\\225\266\226\330\202\311\202\250\202\257\202\351\212e\201X\202\314\226\226\222[\203m\201[\203h)\202\311\221\316\202\265\202\304\201Cfollow set(\216\237\202\311\202\307\202\314\210\312\222u\202\311\210\332\223\256\211\302\224\\\202\251\202\360\225\\\202\267\202\340\202\314)\202\360\215\\\220\254\202\267\202\351\201B\202\240\202\351\210\312\222u\202\311\221\316\202\267\202\351follow set\202\311\202\250\202\242\202\304\201C\225\241\220\224\202\314\210\312\222u\202\252\223\257\202\266\227v\221f\214^\226\274\202\305\203\211\203x\203\213\225t\202\257\202\263\202\352\202\304\202\242\202\352\202\316\201C\202\273\202\314\223\340\227e\203\202\203f\203\213\202\315')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\310\202\350\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\360\225\324\202\267\217\352\215\207\202\340\202\240\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202\267\202\327\202\304\202\314\224\361\214\210\222\350\223I\223\340\227e\203\202\203f\203\213\202\360\223\231\211\277\202\310\214\210\222\350\223I\223\340\227e\203\202\203f\203\213\202\311\225\317\212\267\202\267\202\351\202\261\202\306\202\315\202\305\202\253\202\310\202\242\202\252\201C\221\275\202\255\202\314\224\361\214\210\222\350\223I\223\340\227e\203\202\203f\203\213\202\360\225\317\212\267\202\267\202\351\203A\203\213\203S\203\212\203Y\203\200\202\252\221\266\215\335\202\267\202\351\201BBr')
handle_data('\374')
handle_data('ggemann-Klein 1991 ')
handle_start_tag(bibref, {'ref' : 'ABK'})
handle_end_tag(bibref)
handle_data('\202\360\216Q\217\306\202\314\202\261\202\306\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(inform-div1)
handle_data('\012')
handle_start_tag(inform-div1, {'id' : 'sec-guessing'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('\225\266\216\232\225\204\215\206\211\273\202\314\216\251\223\256\214\237\217o')
handle_end_tag(head)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012XML\202\314\225\204\215\206\211\273\220\351\214\276\202\315\201C\212e\216\300\221\314\202\314\223\340\225\224\203\211\203x\203\213\202\306\202\265\202\304\213@\224\\\202\265\201C\202\307\202\314\225\266\216\232\225\204\215\206\211\273\202\360\216g\227p\202\267\202\351\202\251\202\360\216\246\202\267\201B\202\265\202\251\202\265\201CXML')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\223\340\225\224\203\211\203x\203\213\202\360\223\307\202\336\221O\202\311\201C\202\307\202\314\225\266\216\232\225\204\215\206\211\273\202\360\216g\227p\202\267\202\351\202\251\202\360\222m\202\351\225K\227v\202\252\202\240\202\350\201C\202\261\202\352\202\252\201C\223\340\225\224\203\211\203x\203\213\202\252\216\246\202\273\202\244\202\306\202\267\202\351\202\261\202\306\202\311\202\310\202\351\201B\210\352\224\312\223I\202\311\202\315\201C\202\261\202\352\202\315\201C\220\342\226]\223I\202\310\217\363\221\324\202\306\202\310\202\351\201B\202\265\202\251\202\265\201CXML\202\311\202\250\202\242\202\304\202\315\201C\212\256\221S\202\311\202\315\220\342\226]\223I\202\305\202\315\202\310\202\242\201B\202\261\202\352\202\315\201CXML\202\252\201C\216\237\202\314\223\361\202\302\202\314\223_\202\305\210\352\224\312\223I\202\310\217\352\215\207\202\311\221\316\202\267\202\351\220\247\214\300\202\360\211\301\202\246\202\351\202\261\202\306\202\311\202\346\202\351\201B\210\352\202\302\202\314\220\247\214\300\202\315\201C\202\307\202\314\216\300\221\225\202\340\227L\214\300\214\302\202\314\225\266\216\232\225\204\215\206\211\273\202\276\202\257\202\314\203T\203|\201[\203g\202\360\221z\222\350\202\267\202\351\202\261\202\306\202\306\202\267\202\351\201B\221\274\202\314\210\352\202\302\202\314\220\247\214\300\202\315\201C\212e\216\300\221\314\202\305\216g\227p\202\267\202\351\225\266\216\232\225\204\215\206\211\273\202\360\216\251\223\256\214\237\217o\211\302\224\\\202\306\202\267\202\351\201CXML\202\314\225\204\215\206\211\273\220\351\214\276\202\314\210\312\222u\213y\202\321\223\340\227e\202\311\212\326\202\267\202\351\220\247\214\300\202\306\202\267\202\351\201B\221\275\202\255\202\314\217\352\215\207\202\311\201CXML\202\314\203f\201[\203^\203X\203g\203\212\201[\203\200\202\311\211\301\202\246\201C\221\274\202\314\217\356\225\361\202\252\227\230\227p\202\305\202\253\202\351\201B\202\261\202\261\202\305\202\315\201CXML\202\314\216\300\221\314\202\252')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\311\223n\202\263\202\352\202\351\202\306\202\253\201C(\212O\225\224)\217\356\225\361\202\360\224\272\202\244\202\251\202\307\202\244\202\251\202\311\202\346\202\301\202\304\201C\223\361\202\302\202\314\217\352\215\207\202\311\225\252\202\257\202\351\201B\202\334\202\270\215\305\217\211\202\314\217\352\215\207\202\360\216\246\202\267\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012UTF-8\214`\216\256\226\224\202\315UTF-16\214`\216\256\202\305\202\315\202\310\202\242XML\216\300\221\314\202\315\201C\215\305\217\211\202\314\225\266\216\232\202\360\201e')
handle_start_tag(code, {})
handle_data('<')
handle_data('?xml')
handle_end_tag(code)
handle_data("'\202\306\202\267\202\351XML\225\204\215\206\211\273\220\351\214\276\202\305\216n\202\334\202\347")
handle_start_tag(emph, {})
handle_data('\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242')
handle_end_tag(emph)
handle_data('\202\314\202\305\201C\202\307\202\314\223K\215\207\202\265\202\275')
handle_data('\203v\203\215\203Z\203T')
handle_data("\202\340\201C\223\374\227\315\202\311\202\240\202\3512\203I\203N\203e\203b\203g\226\224\202\3154\203I\203N\203e\203b\203g\202\360\222\262\202\327\202\352\202\316\201C\216\237\202\314\202\307\202\314\217\352\215\207\202\252\202\240\202\304\202\315\202\334\202\351\202\251\202\360\214\237\217o\202\305\202\253\202\351\201B\202\261\202\314\203\212\203X\203g\202\360\223\307\202\336\215\333\202\311\202\315\201CUCS-4\202\314'")
handle_data('<')
handle_data('\'\202\252"')
handle_start_tag(code, {})
handle_data('#x0000003C')
handle_end_tag(code)
handle_data('"\201C\'?\'\202\252"')
handle_start_tag(code, {})
handle_data('#x0000003F')
handle_end_tag(code)
handle_data('"\201C\213y\202\321UTF-16\202\314\203f\201[\203^')
handle_data('\203X\203g\203\212\201[\203\200')
handle_data('\202\314\225K\227v\202\306\202\267\202\351')
handle_data('\203o\203C\203g\217\207\203}\201[\203N')
handle_data('\202\252"')
handle_start_tag(code, {})
handle_data('#xFEFF')
handle_end_tag(code)
handle_data('"\202\306\202\242\202\244\202\261\202\306\202\360\222m\202\301\202\304\202\250\202\255\202\306\226\360\227\247\202\302\202\251\202\340\202\265\202\352\202\310\202\242\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('a) ')
handle_start_tag(code, {})
handle_data('00 00 00 3C')
handle_end_tag(code)
handle_data(': UCS-4, big-endian \203}\203V\203\223 (1234\217\207)')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('b) ')
handle_start_tag(code, {})
handle_data('3C 00 00 00')
handle_end_tag(code)
handle_data(': UCS-4, little-endian \203}\203V\203\223 (4321\217\207)')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('c) ')
handle_start_tag(code, {})
handle_data('00 00 3C 00')
handle_end_tag(code)
handle_data(': UCS-4, \225\201\222\312\202\305\202\315\202\310\202\242\203I\203N\203e\203b\203g\217\207 (2143)')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('d) ')
handle_start_tag(code, {})
handle_data('00 3C 00 00')
handle_end_tag(code)
handle_data(': UCS-4, \225\201\222\312\202\305\202\315\202\310\202\242\203I\203N\203e\203b\203g\217\207 (3412)')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('e) ')
handle_start_tag(code, {})
handle_data('FE FF')
handle_end_tag(code)
handle_data(': UTF-16, big-endian')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('f) ')
handle_start_tag(code, {})
handle_data('FF FE')
handle_end_tag(code)
handle_data(': UTF-16, little-endian')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('g) ')
handle_start_tag(code, {})
handle_data('00 3C 00 3F')
handle_end_tag(code)
handle_data(': UTF-16, big-endian, ')
handle_data('\203o\203C\203g\217\207\203}\201[\203N')
handle_data('\202\310\202\265(\202\265\202\275\202\252\202\301\202\304\201C\214\265\226\247\202\311\202\242\202\246\202\316\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\267\202\351\201B)\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('h) ')
handle_start_tag(code, {})
handle_data('3C 00 3F 00')
handle_end_tag(code)
handle_data(': UTF-16, little-endian, ')
handle_data('\203o\203C\203g\217\207\203}\201[\203N')
handle_data('\202\310\202\265(\202\265\202\275\202\252\202\301\202\304\201C\214\265\226\247\202\311\202\242\202\246\202\316\201C')
handle_data('\203G\203\211\201[')
handle_data('\202\306\202\267\202\351\201B)\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('i) ')
handle_start_tag(code, {})
handle_data('3C 3F 78 6D')
handle_end_tag(code)
handle_data(': UTF-8, ISO 646, ASCII, ISO 8859\202\314\212e\203p\201[\203g\201CShift-JIS\201CEUC\201C\225\300\202\321\202\311\224C\210\323\202\314\221\274\202\3147\203r\203b\203g\201C8\203r\203b\203g\226\224\202\315\215\254\215\335\225\235\202\314\225\204\215\206\211\273\202\305\202\240\202\301\202\304\201CASCII\225\266\216\232\202\360\222\312\217\355\202\314\210\312\222u\201C\225\235\213y\202\321\222l\202\306\202\267\202\351\202\261\202\306\202\360\225\333\217\330\202\267\202\351\202\340\202\314\201B\202\261\202\352\202\347\202\314\202\307\202\352\202\311\221\316\211\236\202\267\202\351\202\251\202\360\214\237\217o\202\267\202\351\202\275\202\337\202\311\202\315\201C\216\300\215\333\202\314\225\204\215\206\211\273\220\351\214\276\202\360\223\307\202\335\215\236\202\334\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B\202\265\202\251\202\265\201C\202\261\202\352\202\347\202\267\202\327\202\304\202\314\225\204\215\206\211\273\202\315\201CASCII\225\266\216\232\202\311\221\316\202\265\202\304\223\257\202\266\203r\203b\203g\203p\203^\201[\203\223\202\360\216g\227p\202\267\202\351\202\314\202\305\201C\225\204\215\206\211\273\220\351\214\276\216\251\221\314\202\315\201C\220\263\212m\202\311\223\307\215\236\202\335\211\302\224\\\202\306\202\267\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('j) ')
handle_start_tag(code, {})
handle_data('4C 6F A7 94')
handle_end_tag(code)
handle_data(': EBCDIC (\226\224\202\315\202\273\202\314\225\317\216\355\201B\202\307\202\314\203R\201[\203h\203y\201[\203W\202\360\216g\227p\202\267\202\351\202\251\202\360\222m\202\351\202\275\202\337\202\311\202\315\201C\225\204\215\206\211\273\220\351\214\276\221S\221\314\202\360\223\307\202\335\215\236\202\334\202\352\202\310\202\257\202\352\202\316\202\310\202\347\202\310\202\242\201B)')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_data('\012')
handle_start_tag(p, {})
handle_data('k) \202\273\202\314\221\274: \225\204\215\206\211\273\220\351\214\276\202\310\202\265\202\314UTF-8\201B\202\273\202\244\202\305\202\310\202\242\202\306\202\253\202\311\202\315\201C\203f\201[\203^')
handle_data('\203X\203g\203\212\201[\203\200')
handle_data('\202\252\211\363\202\352\202\304\202\242\202\351\202\251\201C\222f\225\320\223I\202\311\202\310\202\301\202\304\202\242\202\351\202\251\201C\211\275\202\347\202\251\202\314\214`\216\256\202\311\202\265\202\275\202\252\202\301\202\304\226\204\202\337\215\236\202\334\202\352\202\304\202\242\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\202\261\202\314\222\366\223x\202\314\216\251\223\256\224\273\225\312\202\305\202\340\201CXML\202\314\225\204\215\206\211\273\220\351\214\276\202\360\223\307\202\335\215\236\202\335\201C\225\266\216\232\225\204\215\206\211\273\202\314')
handle_data('\216\257\225\312\216q')
handle_data('\202\360\211\360\220\315\202\267\202\351\202\311\202\315\217\\\225\252\202\306\202\267\202\351\201B')
handle_data('\216\257\225\312\216q')
handle_data('\202\314\211\360\220\315\202\315\201C\227\336\216\227\202\267\202\351\212e\201X\202\314\225\204\215\206\211\273\202\314\210\352\202\302\210\352\202\302\202\360\213\346\225\312\202\267\202\351\202\275\202\337\202\311\225K\227v\202\306\202\267\202\351(\227\341\202\246\202\316\201CUTF-8\213y\202\3218859\202\360\213\346\225\312\202\267\202\351\202\275\202\337\201C8859\202\314\212e\203p\201[\203g\202\360\213\346\225\312\202\267\202\351\202\275\202\337\201C\216g\227p\202\265\202\304\202\242\202\351\223\301\222\350\202\314EBCDIC\203R\201[\203h\203y\201[\203W\202\360\213\346\225\312\202\267\202\351\202\275\202\337\201C\202\310\202\307\201B)\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\225\204\215\206\211\273\220\351\214\276\202\314\223\340\227e\202\360ASCII\225\266\216\232\202\311\214\300\222\350\202\265\202\304\202\242\202\351\202\314\202\305\201C\202\307\202\314\225\252\227\336\202\314\225\204\215\206\211\273\202\360\216g\227p\202\267\202\351\202\251\202\360\214\237\217o\202\267\202\352\202\316\201C')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\315\201C\225\204\215\206\211\273\220\351\214\276\221S\221\314\202\360\220\263\212m\202\311\223\307\202\335\215\236\202\336\202\261\202\306\202\252\202\305\202\253\202\351\201B\214\273\216\300\226\342\221\350\202\306\202\265\202\304\201C\215L\202\255\216g\227p\202\263\202\352\202\304\202\242\202\351\225\266\216\232\225\204\215\206\211\273\202\315\201C\217\343\202\314\225\252\227\336\202\314\202\242\202\270\202\352\202\251\202\311\202\240\202\304\202\315\202\334\202\351\202\314\202\305\201C\203I\203y\203\214\201[\203e\203B\203\223\203O\203V\203X\203e\203\200\226\224\202\315\223`\221\227\203v\203\215\203g\203R\203\213\202\252\227^\202\246\202\351\212O\225\224\217\356\225\361\202\360\220M\227\212\225s\211\302\224\\\202\310\202\306\202\253\202\305\202\263\202\246\202\340\201C\223\340\225\224\203\211\203x\203\213\202\305\225\266\216\232\225\204\215\206\211\273\202\360\202\251\202\310\202\350\220\263\212m\202\311\216\246\202\267\202\261\202\306\202\252\201CXML\225\204\215\206\211\273\220\351\214\276\202\311\202\346\202\301\202\304\211\302\224\\\202\306\202\310\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012')
handle_data('\203v\203\215\203Z\203T')
handle_data('\202\252\216g\227p\202\267\202\351\225\266\216\232\225\204\215\206\211\273\202\360\214\237\217o\202\265\202\263\202\246\202\267\202\352\202\316\201C\202\273\202\352\202\274\202\352\202\314\217\352\215\207\202\311\221\316\202\265\202\304\225\312\214\302\202\314\223\374\227\315\203\213\201[\203`\203\223\202\360\214\304\202\321\217o\202\267\201C\226\224\202\315\223\374\227\315\202\267\202\351\212e\225\266\216\232\202\311\221\316\202\265\223K\220\330\202\310\225\317\212\267\212\326\220\224\202\360\214\304\202\321\217o\202\267\202\261\202\306\202\311\202\346\202\301\202\304\201C\223K\220\330\202\310\223\256\215\354\202\252\211\302\224\\\202\306\202\310\202\351\201B')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\012\216\251\225\252\216\251\221\314\202\311\203\211\203x\203\213\225t\202\257\202\360\202\267\202\351\202\242\202\251\202\310\202\351\203V\203X\203e\203\200\202\305\202\340\223\257\227l\202\276\202\252\201C\203\\\203t\203g\203E\203F\203A\202\252\201C\225\204\215\206\211\273\220\351\214\276\202\360\215X\220V\202\271\202\270\202\311\216\300\221\314\202\314\225\266\216\232\217W\215\207\226\224\202\315\225\204\215\206\211\273\202\360\225\317\202\246\202\275\202\310\202\347\202\316\201CXML\202\314\225\204\215\206\211\273\220\351\214\276\202\315\201C\213@\224\\\202\265\202\310\202\242\201B\225\266\216\232\225\204\215\206\211\273\203\213\201[\203`\203\223\202\314\216\300\221\225\216\322\202\315\201C\216\300\221\314\202\314\203\211\203x\203\213\225t\202\257\202\311\216g\227p\202\267\202\351\223\340\225\224\213y\202\321\212O\225\224\202\314\217\356\225\361\202\314\220\263\212m\202\263\202\314\225\333\217\330\202\311\222\215\210\323\202\267\202\351\202\314\202\252\226]\202\334\202\265\202\242\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_start_tag(p, {})
handle_data('\202Q\224\324\226\332\202\314\217\352\215\207\202\315\201CXML\202\314\216\300\221\314\202\314\221\274\202\311\201C\225\204\215\206\211\273\217\356\225\361\202\252\221\266\215\335\202\267\202\351\202\306\202\253\202\305\202\240\202\301\202\304\201C\202\242\202\255\202\302\202\251\202\314\203t\203@\203C\203\213\203V\203X\203e\203\200\213y\202\321\203l\203b\203g\203\217\201[\203N\203v\203\215\203g\203R\203\213\202\305\202\315\201C\202\273\202\314\225\204\215\206\211\273\217\356\225\361\202\252\221\266\215\335\202\267\202\351\201B\225\241\220\224\202\314\217\356\225\361\202\252\227\230\227p\202\305\202\253\202\351\202\306\202\253\201C')
handle_comment(' (e.g. both the\012internal encoding declaration and an external label),  ')
handle_data('\202\273\202\352\202\347\202\314\221\212\221\316\223I\202\310\227D\220\346\223x\213y\202\321\202\273\202\352\202\347\202\252\226\265\217\202\202\265\202\275\202\306\202\253\202\314\226]\202\334\202\265\202\242\217\210\227\235\225\373\226@\202\315\201CXML\202\314\224z\221\227\202\311\216g\227p\202\267\202\351\201C\202\346\202\350\215\202\220\205\217\200\202\314\203v\203\215\203g\203R\203\213\202\314\210\352\225\224\202\306\202\265\202\304\213K\222\366\202\267\202\351\202\314\202\252\202\346\202\242\201B\227\341\202\246\202\316\201C\223\340\225\224\203\211\203x\203\213\213y\202\321\212O\225\224')
handle_data('\203w\203b\203_')
handle_data('\202\311\221\266\215\335\202\267\202\351MIME\214`\216\256\202\314\203\211\203x\203\213\202\314\221\212\221\316\223I\202\310\227D\220\346\223x\202\311\221\316\202\267\202\351\213K\221\245\202\315\201Ctext/xml\213y\202\321application/xml\202\314MIME\214^\202\360\222\350\213`\202\267\202\351RFC\225\266\217\221\202\314\210\352\225\224\202\306\202\310\202\351\225\373\202\252\202\346\202\242\201B\202\265\202\251\202\265\201C\221\212\214\335\211^\227p\220\253\202\314\202\275\202\337\202\311\201C\216\237\202\314\213K\221\245\202\311\217]\202\244\202\261\202\306\202\252\226]\202\334\202\265\202\242\201B\012')
handle_start_tag(ulist, {})
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('a) XML\202\314\216\300\221\314\202\252\203t\203@\203C\203\213\202\311\221\266\215\335\202\267\202\352\202\316\201C')
handle_data('\203o\203C\203g\217\207\203}\201[\203N')
handle_data('\213y\202\321\225\204\215\206\211\273\220\351\214\276PI\202\315\201C(\221\266\215\335\202\267\202\352\202\316)\225\266\216\232\225\204\215\206\211\273\202\360\214\210\222\350\202\267\202\351\202\275\202\337\202\311\216g\227p\202\267\202\351\201B\221\274\202\314\202\267\202\327\202\304\202\314')
handle_data('\203q\203\205\201[\203\212\203X\203e\203B\203b\203N')
handle_data('\213y\202\321\217\356\225\361\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\211\361\225\234\202\314\202\275\202\337\202\276\202\257\202\311\227p\202\242\202\351\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('b) XML\202\314\216\300\221\314\202\360MIME\214^text/xml\202\305\224z\221\227\202\267\202\351\202\306\202\253\202\315\201C\202\261\202\314MIME\214^\202\314\202\340\202\302charset\203p\203\211\203\201\203^\202\252\225\266\216\232\225\204\215\206\211\273\225\373\226@\202\360\214\210\222\350\202\267\202\351\201B\221\274\202\314\202\267\202\327\202\304\202\314')
handle_data('\203q\203\205\201[\203\212\203X\203e\203B\203b\203N')
handle_data('\213y\202\321\217\356\225\361\202\315\201C')
handle_data('\203G\203\211\201[')
handle_data('\211\361\225\234\202\314\202\275\202\337\202\276\202\257\202\311\227p\202\242\202\351\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_start_tag(item, {})
handle_start_tag(p, {})
handle_data('c) XML\202\314\216\300\221\314\202\360 ')
handle_comment(' via the HTTP protocol ')
handle_data('MIME\214^application/xml\202\305\224z\221\227\202\267\202\351\202\306\202\253\202\315\201C')
handle_data('\203o\203C\203g\217\207\203}\201[\203N')
handle_data('\213y\202\321\225\204\215\206\211\273\220\351\214\276PI\202\360(\221\266\215\335\202\267\202\352\202\316)\225\266\216\232\225\204\215\206\211\273\202\314\214\210\222\350\202\314\202\275\202\337\202\311\216g\227p\202\267\202\351\201B\221\274\202\314\202\267\202\327\202\304\202\314')
handle_data('\203q\203\205\201[\203\212\203X\203e\203B\203b\203N')
handle_data('\213y\202\321\217\356\225\361\202\315')
handle_data('\203G\203\211\201[')
handle_data('\211\361\225\234\202\314\202\275\202\337\202\276\202\257\202\311\227p\202\242\202\351\201B\012')
handle_end_tag(p)
handle_end_tag(item)
handle_data('\012')
handle_end_tag(ulist)
handle_data('\012\202\261\202\352\202\347\202\314\213K\221\245\202\315\201C\203v\203\215\203g\203R\203\213\202\311\202\302\202\242\202\304\202\314\216\221\227\277\202\252\202\310\202\242\202\306\202\253\202\311\202\276\202\257\227p\202\242\202\351\201B\223\301\202\311\201CMIME\214^text/xml\213y\202\321application/xml\202\360\222\350\213`\202\265\202\275\202\347\201C\202\261\202\352\202\347\202\360\213K\222\350\202\267\202\351RFC\202\311\221\266\215\335\202\267\202\351\213K\222\350\202\252\201C\202\261\202\352\202\347\202\314\213K\221\245\202\311\216\346\202\301\202\304\221\343\202\355\202\351\201B\012')
handle_end_tag(p)
handle_data('\012')
handle_end_tag(inform-div1)
handle_data('\012')
handle_comment('\012<div1 id=\'sec-trival-grammar\'>\012<head>A Trivial Grammar for XML Documents</head>\012<p>The grammar given in the body of this specification is relatively\012simple, but for some purposes it is convenient to have an even simpler\012one.  \012A very simple, though non-conforming, <termref def="dt-xml-proc">XML\012processor</termref> could parse a <termref\012def="dt-wellformed">well-formed</termref> XML document using the\012following simplified grammar, recognizing all element boundaries\012correctly, though not expanding entity references and not detecting\012all errors:\012\012<scrap lang="ebnf">\012<head>Trivial text grammar</head>\012<prodgroup pcw2="5.5" pcw4="17" pcw5="10">\012<prod id=\'NT-simpleDoc\'><lhs>simpleDoc</lhs>\012<rhs>(<nt def=\'NT-SimpleData\'>SimpleData</nt> \012| <nt def=\'NT-Markup\'>Markup</nt>)*</rhs></prod>\012<prod id="NT-SimpleData"><lhs>SimpleData</lhs>\012<rhs>[^&lt;&amp;]*</rhs>\012<com>cf. PCData</com>\012</prod>\012<prod id="NT-SimpleLit"><lhs>SimpleLit</lhs>\012<rhs>(\'"\' [^"]* \'"\')</rhs>\012<rhs>|&nbsp;("\'" [^\']* "\'")</rhs>\012<com>cf. SkipLit</com>\012</prod>\012<prod id=\'NT-Markup\'><lhs>Markup</lhs>\012<rhs>\'&lt;\' <nt def=\'NT-Name\'>Name</nt> \012(<nt def=\'NT-S\'>S</nt> \012<nt def=\'NT-Name\'>Name</nt> \012<nt def=\'NT-S\'>S</nt>? \'=\' <nt def=\'NT-S\'>S</nt>?\012<nt def=\'NT-SimpleLit\'>SimpleLit</nt>)* \012<nt def=\'NT-S\'>S</nt>? \'&gt;\'</rhs><com>start-tags </com>\012<rhs>| \'&lt;\' <nt def=\'NT-Name\'>Name</nt> \012(<nt def=\'NT-S\'>S</nt> \012<nt def=\'NT-Name\'>Name</nt> \012<nt def=\'NT-S\'>S</nt>? \'=\' <nt def=\'NT-S\'>S</nt>?\012<nt def=\'NT-SimpleLit\'>SimpleLit</nt>)* \012<nt def=\'NT-S\'>S</nt>? \'/&gt;\'</rhs><com>empty elements</com>\012<rhs>| \'&lt;/\' \012<nt def=\'NT-Name\'>Name</nt> \012<nt def=\'NT-S\'>S</nt>? \'&gt;\'</rhs>\012<com>end-tags </com>\012<rhs>| \'&amp;\' <nt def=\'NT-Name\'>Name</nt> \';\'</rhs>\012<com>entity references </com>\012<rhs>| \'&amp;#\' [0-9]+ \';\'</rhs>\012<com>decimal character references </com>\012<rhs>| \'&hcro;\' [0-9a-fA-F]+ \';\'</rhs>\012<com>hexadecimal character references </com>\012<rhs>| \'&lt;!&como;\' \012(<nt def=\'NT-Char\'>Char</nt>* - \012(<nt def=\'NT-Char\'>Char</nt>* \'&comc;\' <nt def=\'NT-Char\'>Char</nt>*))\012\'&comc;&gt;\'</rhs>\012<com>comments </com>\012<rhs>| \'&lt;?\'\012(<nt def=\'NT-Char\'>Char</nt>* - \012(<nt def=\'NT-Char\'>Char</nt>* &pic; <nt def=\'NT-Char\'>Char</nt>*))\012\'&pic;\'</rhs>\012<com>processing instructions </com>\012<rhs>| \'&lt;![CDATA[\' \012(<nt def=\'NT-Char\'>Char</nt>* - \012(<nt def=\'NT-Char\'>Char</nt>* \']]&gt;\' <nt def=\'NT-Char\'>Char</nt>*))\012\']]&gt;\'</rhs>\012<com>CDATA sections</com>\012<rhs>| \'&lt;!DOCTYPE\' \012(<nt def="NT-Char">Char</nt> - (\'[\' | \']\'))+\012(\'[\' \012<nt def="NT-simpleDTD">simpleDTD</nt>*\012\']\')? \'&gt;\'</rhs>\012<com>doc type declaration</com>\012</prod>\012<prod id="NT-simpleDTD"><lhs>simpleDTD</lhs>\012<rhs>\'&lt;!&como;\' \012(<nt def=\'NT-Char\'>Char</nt>* - \012(<nt def=\'NT-Char\'>Char</nt>* \'&comc;\' <nt def=\'NT-Char\'>Char</nt>*))\012\'&comc;&gt;\'</rhs>\012<com>comment </com>\012<rhs>| \'&lt;?\'\012(<nt def=\'NT-Char\'>Char</nt>* - \012(<nt def=\'NT-Char\'>Char</nt>* &pic; <nt def=\'NT-Char\'>Char</nt>*))\012\'&pic;\'</rhs>\012<com>processing instruction </com>\012<rhs><nt def="NT-SimpleLit">SimpleLit</nt></rhs>\012<rhs>(<nt def="NT-Char">Char</nt> - (\']\' | \'&lt;\' | \'"\' | "\'"))+\012</rhs>\012\012<rhs>\'&lt;!\' (<nt def="NT-Char">Char</nt> - (\'-\'))+</rhs>\012<com>declarations other than comment</com>\012</prod>\012</prodgroup>\012</scrap>\012Most processors will require the more complex\012grammar given in the body of this specification.\012\012</p>\012</div1>\012')
handle_data('\012\012')
handle_start_tag(inform-div1, {'id' : 'sec-xml-wg'})
handle_data('\012')
handle_start_tag(head, {})
handle_data('W3C XML \203\217\201[\203L\203\223\203O\203O\203\213\201[\203v')
handle_end_tag(head)
handle_data('\012 \012')
handle_start_tag(p, {})
handle_data('\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\315\201CW3C XML \203\217\201[\203L\203\223\203O\203O\203\213\201[\203v(WG)\202\252\217\200\224\365\202\265\201C\214\366\212J\202\360\217\263\224F\202\265\202\275\201BWG\202\252\202\261\202\314')
handle_data('\216d\227l\217\221')
handle_data('\202\360\217\263\224F\202\267\202\351\202\306\202\242\202\244\202\261\202\306\202\315\201CWG\202\314\202\267\202\327\202\304\202\314\210\317\210\365\202\252\217\263\224F\223\212\225[\202\360\215s\202\301\202\275\202\306\202\242\202\244\202\261\202\306\202\360\225K\202\270\202\265\202\340\210\323\226\241\202\265\202\310\202\242\201BXML WG\202\314\214\273\215\335\202\314\210\317\210\365\213y\202\321\210\310\221O\202\314\210\317\210\365\202\360\216\237\202\311\216\246\202\267\201B')
handle_end_tag(p)
handle_data('\012 \012')
handle_comment(' parens and spaces removed from role elements by bosak 1997.11.07 ')
handle_data('\012')
handle_start_tag(orglist, {})
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Jon Bosak, Sun')
handle_end_tag(name)
handle_start_tag(role, {})
handle_data('Chair')
handle_end_tag(role)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('James Clark')
handle_end_tag(name)
handle_start_tag(role, {})
handle_data('Technical Lead')
handle_end_tag(role)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Tim Bray, Textuality and Netscape')
handle_end_tag(name)
handle_start_tag(role, {})
handle_data('XML Co-editor')
handle_end_tag(role)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Jean Paoli, Microsoft')
handle_end_tag(name)
handle_start_tag(role, {})
handle_data('XML Co-editor')
handle_end_tag(role)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('C. M. Sperberg-McQueen, U. of Ill.')
handle_end_tag(name)
handle_start_tag(role, {})
handle_data('XML Co-editor')
handle_end_tag(role)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Dan Connolly, W3C')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Steve DeRose, INSO')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Dave Hollander, HP')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Eliot Kimber, Highland')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Eve Maler, ArborText')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Tom Magliery, NCSA')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Murray Maloney, Muzmo and Grif')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('\221\272\223c\201@\220^\201C\225x\216m\203[\203\215\203b\203N\203X\217\356\225\361\203V\203X\203e\203\200(\212\224)')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Joel Nava, Adobe')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('Peter Sharpe, SoftQuad')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_start_tag(member, {})
handle_start_tag(name, {})
handle_data('John Tigue, DataChannel')
handle_end_tag(name)
handle_end_tag(member)
handle_data('\012')
handle_end_tag(orglist)
handle_data('\012\012')
handle_end_tag(inform-div1)
handle_data('\012')
handle_end_tag(back)
handle_data('\012')
handle_end_tag(spec)
handle_comment(' Keep this comment at the end of the file\012Local variables:\012mode: sgml\012sgml-omittag:t\012sgml-shorttag:t\012End:\012')
doc_end()
